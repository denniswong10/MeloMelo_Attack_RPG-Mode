using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score490 : MonoBehaviour
{
    //   120, 14, 121 (Ribbon)    91, 94, 92 (FixedAirAttack)    18, 20, 19 (FixedHeartPack)
    //   55, 56 (CurveClosedPattern)    80 (BoomStopStar)     82, 81 (CombinePickStar)     100 (SemiPickStraight)  
    //   51, 52 (HalfArrow)    46 (6-Keys)    71 (MultipleHitStar)
    //   61 (Uni-Vertical-H)    40 (SplitBomb)     70 (ItemStrikeWithItem3)    101 (FlyDuoBombAir)    102, 103 (BlindSpotBombed)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 0, 8, 0, 2, 0, 8, 0, 2, 0, 8, 0, 5, 0, 0, 2, 2, 0, 8, 0, 2, 0, 8, 0, 2,

        0, 80, 0, 80, 0, 0, 8, 8, 0, 2, 0, 8, 0, 2, 0, 8, 0, 2, 0, 8, 0, 1, 1, 0, 46, 0,

        80, 0, 0, 0, 1, 0, 5, 0, 2, 8, 2, 0, 1, 0, 5, 0, 8, 2, 8, 0, 46, 0, 80, 0, 0, 1, // 3
 
        1, 5, 0, 2, 0, 8, 0, 1, 1, 99, 0, 8, 0, 2, 0, 0, 14, 0, 0, 0, 120, 0, 0, 0, 121, 0,

        0, 94, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0,

        0, 1, 1, 5, 0, 1, 1, 99, 0, 1, 1, 5, 0, 80, 80, 0, 1, 5, 4, 0, 1, 5, 99, 0, 1, 5, // 6
  
        6, 0, 14, 0, 121, 0, 14, 0, 120, 0, 0, 46, 0, 80, 80, 0, 0, 55, 0, 20, 19, 56, 0, 20, 18, 120,

        0, 0, 80, 0, 0, 0, 0, 120, 0, 0, 80, 82, 82, 0, 121, 0, 0, 80, 81, 81, 0, 46, 0, 0, 14, 0,

        18, 0, 14, 0, 19, 0, 80, 0, 1, 1, 5, 4, 0, 0, 121, 0, 0, 80, 81, 81, 0, 120, 0, 0, 80, 82, // 9
  
        82, 0, 100, 0, 46, 8, 8, 46, 0, 1, 5, 99, 0, 0, 13, 0, 40, 0, 70, 0, 1, 1, 5, 0, 1, 1,

        99, 0, 46, 0, 5, 4, 5, 0, 5, 99, 5, 0, 46, 0, 94, 2, 0, 94, 2, 0, 46, 80, 0, 0, 0, 120,

        0, 14, 0, 121, 0, 0, 80, 46, 46, 0, 100, 100, 0, 0, 0, 1, 2, 4, 0, 93, 0, 1, 8, 4, 0, 93, // 12
   
        0, 5, 5, 99, 0, 0, 0, 2, 8, 0, 93, 93, 0, 8, 2, 0, 1, 5, 1, 99, 0, 0, 2, 8, 0, 93,

        93, 0, 8, 2, 0, 1, 4, 1, 6, 0, 0, 2, 2, 8, 0, 93, 93, 0, 93, 0, 2, 8, 2, 0, 5, 0,

        0, 1, 2, 4, 0, 1, 8, 4, 0, 93, 0, 93, 0, 46, 80, 0, 0, 120, 18, 0, 14, 20, 0, 121, 92, 0, // 15
  
        1, 2, 1, 4, 0, 55, 0, 56, 0, 20, 56, 0, 55, 0, 94, 0, 46, 80, 0, 0, 0, 121, 19, 0, 14, 20,

        0, 120, 91, 0, 1, 5, 1, 99, 0, 0, 56, 0, 55, 0, 20, 55, 0, 56, 0, 94, 0, 80, 80, 0, 0, 0,

        100, 0, 0, 0, 17, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 13, 0, 0, 40, 0, 0, // 18
  
        0, 0, 46, 0, 0, 0, 120, 0, 94, 19, 92, 0, 14, 0, 94, 18, 91, 0, 46, 0, 121, 0, 94, 18, 18, 0,

        120, 0, 94, 19, 19, 0, 80, 100, 0, 0, 56, 0, 56, 0, 0, 55, 0, 55, 0, 0, 14, 0, 121, 0, 14, 0,

        120, 0, 91, 80, 92, 0, 46, 0, 1, 1, 100, 0, 93, 0, 93, 0, 40, 0, 1, 1, 5, 0, 1, 1, 99, 0, // 21
  
        121, 0, 0, 14, 0, 0, 120, 0, 0, 1, 5, 0, 1, 99, 0, 46, 46, 80, 0, 100, 100, 94, 0, 0, 1, 5,

        0, 93, 93, 0, 93, 0, 1, 5, 1, 99, 0, 0, 0, 1, 99, 0, 13, 0, 93, 93, 0, 1, 5, 5, 99, 0,

        0, 80, 0, 0, 1, 5, 4, 0, 93, 0, 93, 0, 1, 99, 5, 0, 93, 0, 93, 0, 1, 5, 1, 99, 0, 80, // 24
  
        0, 46, 100, 0, 101, 0, 0, 55, 0, 20, 92, 0, 56, 0, 20, 91, 0, 14, 0, 92, 0, 0, 82, 46, 0, 81,

        46, 0, 82, 80, 0, 81, 80, 0, 100, 0, 0, 0, 56, 0, 20, 91, 0, 55, 0, 20, 92, 0, 14, 0, 91, 0,

        0, 82, 46, 0, 81, 46, 0, 82, 80, 0, 81, 80, 0, 93, 101, 0, 0, 55, 0, 14, 0, 56, 0, 14, 0, 20, // 27
  
        94, 0, 120, 0, 94, 121, 0, 94, 120, 0, 14, 0, 94, 94, 0, 8, 8, 8, 5, 0, 0, 14, 0, 0, 1, 4,

        5, 0, 1, 5, 99, 0, 71, 0, 71, 0, 46, 80, 46, 0, 1, 1, 5, 0, 1, 5, 1, 99, 0, 0, 13, 0,

        2, 4, 5, 0, 13, 0, 13, 0, 8, 4, 5, 0, 80, 0, 100, 46, 100, 0, 1, 5, 1, 99, 46, 0, 120, 0, // 30
  
        94, 14, 0, 92, 0, 0, 0, 55, 0, 55, 18, 55, 0, 56, 0, 56, 19, 56, 0, 0, 14, 0, 91, 120, 0, 94,

        14, 0, 92, 121, 0, 94, 0, 1, 5, 5, 0, 46, 0, 0, 2, 2, 4, 8, 8, 0, 5, 5, 5, 0, 46, 82,

        0, 46, 81, 0, 40, 0, 0, 1, 1, 5, 0, 1, 1, 99, 0, 80, 0, 0, 55, 0, 56, 0, 55, 0, 56, 0, // 33
  
        0, 14, 0, 92, 121, 0, 94, 14, 0, 91, 120, 0, 94, 0, 0, 93, 0, 93, 0, 1, 4, 5, 0, 100, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 36
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 120, 0, 120, 0, 120, 0, 14, 0, 121, 0, 121, 0, 121, 0, 7, 14, 0, 120, 0, 120, 0, 14, 0, 121, 0,
  
        121, 0, 94, 0, 0, 0, 3, 0, 2, 8, 2, 0, 3, 0, 8, 2, 8, 0, 3, 0, 3, 0, 2, 4, 8, 0,
 
        5, 0, 0, 0, 121, 0, 0, 121, 0, 0, 14, 0, 0, 120, 0, 0, 120, 0, 0, 14, 0, 0, 121, 0, 0, 14, // 3
 
        0, 0, 120, 0, 0, 94, 94, 0, 0, 14, 0, 91, 14, 0, 0, 14, 0, 92, 14, 0, 0, 1, 0, 1, 0, 0,
 
        5, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
  
        56, 0, 94, 0, 1, 1, 5, 0, 1, 1, 9, 0, 46, 0, 46, 0, 56, 0, 55, 0, 94, 2, 2, 2, 94, 0, // 6
  
        46, 0, 0, 1, 1, 14, 0, 91, 120, 0, 94, 14, 0, 92, 121, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 46,
  
        46, 0, 80, 0, 0, 0, 0, 51, 0, 0, 52, 0, 0, 0, 94, 2, 2, 2, 94, 0, 80, 80, 0, 0, 1, 1,
  
        5, 0, 1, 1, 9, 0, 46, 0, 80, 80, 0, 100, 0, 0, 51, 0, 46, 52, 0, 46, 0, 94, 8, 8, 8, 94, // 9
  
        0, 1, 2, 4, 0, 1, 8, 4, 0, 71, 0, 80, 0, 0, 0, 61, 0, 0, 94, 0, 51, 0, 46, 52, 94, 0,
  
        0, 94, 46, 0, 1, 5, 4, 0, 1, 5, 9, 0, 14, 0, 120, 0, 14, 0, 121, 0, 94, 94, 0, 0, 0, 1,
  
        1, 5, 9, 0, 0, 93, 0, 93, 0, 46, 46, 100, 0, 0, 0, 94, 2, 2, 94, 8, 8, 0, 46, 94, 8, 8, // 12
   
        94, 2, 2, 80, 0, 0, 0, 3, 0, 0, 93, 0, 93, 0, 0, 1, 1, 5, 5, 9, 0, 0, 40, 0, 0, 93,
  
        0, 93, 0, 0, 1, 5, 1, 9, 5, 0, 0, 3, 0, 40, 0, 70, 0, 0, 93, 0, 93, 0, 1, 5, 5, 0,
  
        0, 40, 0, 3, 0, 70, 2, 2, 70, 8, 8, 70, 5, 5, 9, 0, 0, 14, 0, 91, 71, 0, 14, 0, 92, 71, // 15
  
        0, 82, 82, 46, 0, 55, 18, 20, 19, 0, 56, 19, 20, 18, 0, 80, 46, 100, 0, 0, 0, 14, 0, 92, 71, 0,
  
        14, 0, 91, 71, 0, 81, 81, 46, 0, 0, 56, 19, 20, 18, 0, 55, 18, 20, 19, 0, 80, 46, 100, 0, 0, 101,
  
        80, 0, 0, 0, 102, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 103, 0, 0, 102, 0, 0, // 18
  
        0, 0, 80, 0, 0, 0, 120, 0, 94, 2, 2, 94, 0, 14, 0, 94, 2, 2, 94, 0, 121, 0, 94, 2, 2, 94,
  
        0, 80, 46, 100, 0, 0, 3, 70, 0, 0, 56, 0, 92, 0, 1, 2, 5, 0, 1, 8, 5, 0, 46, 82, 46, 0,
  
        55, 0, 91, 0, 1, 2, 5, 0, 1, 8, 5, 0, 46, 81, 46, 0, 101, 0, 120, 0, 14, 0, 121, 0, 94, 0, // 21
  
        0, 121, 0, 14, 0, 120, 0, 94, 0, 1, 1, 5, 1, 1, 9, 0, 46, 46, 80, 46, 46, 94, 0, 0, 3, 0,
  
        0, 93, 0, 70, 0, 5, 9, 5, 0, 46, 0, 46, 0, 3, 0, 0, 70, 0, 70, 0, 5, 9, 5, 5, 0, 46,
  
        0, 46, 0, 0, 120, 0, 91, 14, 0, 0, 121, 0, 92, 14, 0, 0, 120, 0, 0, 92, 46, 91, 46, 0, 80, 80, // 24
  
        100, 80, 80, 0, 71, 0, 0, 120, 0, 55, 0, 20, 19, 121, 0, 56, 0, 20, 18, 100, 0, 0, 71, 18, 71, 19,
  
        0, 5, 4, 5, 0, 46, 82, 82, 46, 0, 0, 0, 121, 0, 56, 0, 20, 18, 120, 0, 55, 0, 20, 19, 100, 0,
  
        0, 71, 19, 71, 18, 0, 46, 81, 81, 46, 94, 0, 0, 3, 70, 0, 0, 101, 55, 18, 20, 92, 0, 56, 19, 20, // 27
  
        91, 0, 14, 0, 18, 91, 0, 14, 0, 19, 92, 0, 46, 46, 0, 1, 5, 1, 9, 0, 0, 3, 0, 40, 0, 93,
  
        0, 70, 0, 46, 120, 0, 18, 71, 0, 121, 0, 19, 71, 0, 46, 81, 81, 46, 82, 82, 0, 80, 0, 0, 3, 70,
  
        0, 0, 1, 1, 5, 0, 3, 0, 3, 0, 1, 1, 5, 0, 3, 0, 3, 0, 46, 18, 46, 19, 46, 0, 14, 0, // 30
  
        0, 20, 91, 91, 0, 0, 0, 55, 0, 0, 61, 0, 94, 0, 56, 0, 0, 61, 0, 94, 0, 46, 80, 46, 0, 1,
  
        1, 5, 0, 71, 0, 1, 1, 9, 0, 71, 0, 100, 0, 0, 3, 0, 40, 0, 101, 0, 3, 0, 40, 0, 103, 0,
  
        81, 81, 0, 80, 0, 0, 3, 0, 40, 0, 102, 0, 82, 82, 0, 80, 0, 0, 55, 0, 20, 0, 56, 0, 20, 14, // 33
  
        0, 94, 0, 56, 0, 20, 0, 55, 0, 20, 14, 0, 94, 0, 46, 46, 0, 100, 1, 1, 100, 1, 1, 100, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 36
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
