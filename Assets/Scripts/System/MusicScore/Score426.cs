using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score426 : MonoBehaviour
{
    // 55, 56 (StarFlushExceed)    41, 42 (SidePickUntouch)     18, 20, 19 (FixedHeartPack)     11, 12 (Number)    30, 31 (Sweep)
    // 23, 24 (Arrow)    76 (MultipleHitStar)    103, 104 (BowCurve)    106, 35, 107 (E)    101, 14, 102 (Ribbon)   48 (4-Key-Tap)
    // 109-112, 45 (4-Key)     34 (Pony Diamond)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 2, 0, 0, 8, 8, 0, 0, 2, 4, 0, 8, 4, 0, 1, 5, 0, 2, 2, 0, 8, 8, 0, 5, 0,

        48, 0, 48, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 48, 0, 0, 41, 0, 0, 0, 2, 0, 5, 0, 42, 0, 0, 0, 2, // 3
   
        0, 5, 0, 0, 41, 0, 0, 42, 0, 0, 1, 5, 0, 1, 99, 0, 5, 0, 5, 0, 20, 20, 0, 1, 0, 20,

        20, 0, 8, 0, 5, 0, 0, 11, 0, 0, 20, 20, 0, 1, 5, 0, 1, 99, 0, 76, 5, 0, 41, 0, 0, 0,

        42, 0, 0, 0, 2, 4, 0, 8, 5, 0, 0, 42, 0, 0, 0, 41, 0, 0, 0, 2, 4, 0, 8, 4, 0, 5, // 6
  
        4, 0, 0, 2, 0, 2, 0, 2, 0, 8, 0, 8, 0, 8, 0, 5, 0, 5, 0, 99, 0, 5, 0, 5, 0, 30,

        0, 0, 31, 0, 0, 0, 101, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 93, 0, 93, 0, 93, 0, 8, 0, // 9
  
        8, 0, 8, 0, 93, 0, 93, 0, 93, 0, 1, 0, 4, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 103, 0,

        0, 0, 1, 1, 0, 5, 5, 0, 2, 8, 0, 104, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 1, 1, 0,

        5, 5, 0, 8, 2, 0, 0, 30, 0, 0, 31, 0, 0, 30, 0, 0, 31, 0, 0, 30, 0, 0, 20, 20, 0, 1, // 12
  
        0, 5, 0, 1, 0, 99, 0, 0, 2, 2, 0, 8, 8, 0, 2, 4, 0, 8, 4, 0, 1, 5, 0, 1, 99, 0,

        0, 93, 0, 93, 0, 93, 0, 0, 1, 0, 5, 0, 1, 0, 99, 0, 1, 1, 0, 5, 48, 0, 1, 1, 0, 5,

        48, 0, 2, 8, 0, 93, 0, 93, 0, 0, 5, 0, 0, 34, 0, 20, 0, 0, 34, 0, 20, 20, 0, 34, 0, 18, // 15
  
        19, 0, 34, 0, 0, 20, 20, 0, 35, 0, 8, 8, 0, 35, 0, 0, 1, 0, 5, 99, 0, 14, 0, 20, 14, 0,

        20, 20, 0, 0, 1, 5, 0, 1, 6, 0, 0, 34, 0, 20, 20, 0, 34, 0, 20, 20, 0, 34, 0, 20, 20, 0,

        5, 0, 48, 0, 48, 0, 1, 5, 0, 1, 99, 0, 1, 5, 0, 35, 0, 8, 0, 0, 35, 0, 8, 8, 0, 5, // 18
  
        0, 5, 0, 99, 0, 12, 0, 0, 20, 0, 20, 0, 0, 12, 0, 20, 20, 0, 20, 20, 0, 1, 1, 0, 5, 0,

        99, 0, 5, 0, 93, 0, 93, 0, 0, 1, 48, 0, 1, 48, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 48, 0,

        1, 1, 0, 48, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 99, 0, 20, 20, 0, // 21
  
        30, 0, 0, 31, 0, 0, 4, 5, 0, 99, 0, 5, 0, 0, 93, 0, 93, 0, 0, 1, 0, 5, 5, 0, 48, 0,

        48, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99, 5, 0, 48, 0, 48, 0, 0, 0, 109, 109, 0, 112, 112, 0,

        1, 5, 0, 102, 0, 14, 0, 101, 0, 0, 1, 5, 0, 1, 6, 0, 5, 5, 0, 2, 4, 0, 8, 4, 0, 1, // 24
   
        0, 1, 0, 5, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 1, 5, 0, 0, 1, 9, 0, 0, 1, 5, 5, 9, 0, 1, 1, 5, 0, 4, 0, 1, 1, 9, 5, 0, 55,
    
        0, 56, 0, 0, 20, 0, 20, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
   
        0, 93, 0, 0, 0, 4, 0, 1, 5, 1, 5, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 8, 4, 0, 1, 1, // 3
   
        5, 0, 42, 0, 0, 0, 41, 0, 0, 0, 8, 4, 0, 1, 1, 9, 0, 0, 41, 0, 0, 20, 42, 0, 0, 20,
  
        0, 1, 2, 1, 8, 0, 0, 1, 1, 5, 11, 0, 0, 0, 1, 1, 5, 12, 0, 0, 0, 0, 41, 0, 0, 42,
  
        0, 0, 0, 4, 0, 1, 2, 2, 5, 0, 0, 41, 0, 0, 42, 0, 0, 0, 4, 0, 4, 0, 1, 8, 8, 5, // 6
  
        0, 0, 0, 30, 0, 0, 20, 31, 0, 0, 20, 30, 0, 20, 31, 0, 20, 30, 0, 20, 31, 0, 20, 0, 55, 0,
  
        56, 0, 55, 0, 56, 0, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 2, 2, 2, 0, 1, 0, // 9
  
        5, 0, 1, 0, 9, 0, 8, 8, 8, 0, 5, 0, 9, 0, 0, 0, 23, 0, 0, 23, 0, 0, 23, 0, 0, 23,
  
        0, 0, 4, 1, 5, 0, 4, 1, 1, 9, 0, 24, 0, 0, 24, 0, 0, 24, 0, 0, 24, 0, 0, 4, 1, 5,
  
        0, 4, 1, 1, 9, 0, 0, 76, 0, 5, 0, 76, 0, 5, 0, 76, 0, 76, 0, 76, 5, 0, 76, 5, 0, 1, // 12
  
        1, 6, 0, 23, 0, 0, 24, 0, 0, 23, 0, 0, 24, 0, 0, 23, 0, 20, 24, 0, 20, 23, 0, 20, 24, 0,
  
        20, 23, 0, 0, 1, 1, 9, 0, 103, 0, 20, 0, 104, 0, 20, 0, 103, 4, 0, 4, 104, 4, 0, 4, 103, 0,
  
        0, 0, 1, 1, 5, 1, 1, 9, 0, 0, 3, 0, 0, 14, 0, 5, 0, 14, 0, 5, 0, 1, 5, 1, 5, 0, // 15
  
        9, 0, 5, 5, 0, 35, 0, 0, 106, 0, 107, 0, 0, 35, 0, 0, 1, 1, 5, 5, 0, 101, 0, 0, 102, 0,
  
        0, 14, 0, 0, 2, 20, 0, 1, 5, 6, 0, 41, 0, 19, 0, 42, 0, 18, 0, 4, 1, 1, 5, 0, 101, 20,
  
        5, 0, 102, 20, 5, 0, 1, 1, 5, 0, 1, 1, 9, 5, 0, 35, 0, 0, 106, 107, 0, 35, 0, 106, 107, 0, // 18
  
        1, 1, 5, 5, 0, 11, 20, 0, 20, 1, 1, 5, 0, 12, 20, 0, 20, 1, 1, 5, 0, 1, 5, 9, 0, 30,
  
        0, 20, 20, 0, 56, 0, 55, 0, 0, 1, 1, 5, 5, 0, 48, 0, 48, 0, 55, 0, 20, 56, 0, 0, 1, 1,
  
        9, 5, 0, 48, 0, 48, 0, 0, 109, 109, 0, 112, 112, 0, 0, 1, 1, 5, 0, 101, 0, 20, 14, 0, 20, 102, // 21
  
        0, 20, 0, 20, 0, 2, 8, 4, 0, 8, 2, 4, 0, 0, 93, 0, 93, 0, 0, 1, 1, 5, 5, 0, 48, 0,
  
        48, 48, 0, 56, 0, 20, 55, 0, 0, 1, 1, 9, 5, 0, 48, 0, 48, 48, 0, 0, 109, 110, 111, 112, 0, 1,
  
        1, 5, 0, 102, 0, 20, 14, 0, 20, 101, 0, 20, 20, 0, 1, 1, 5, 0, 1, 1, 9, 0, 109, 112, 0, 19, // 24
   
        20, 18, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
