using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score458 : MonoBehaviour
{
    //   74 (111) (QuickPickOfItem)     72, 73 (QuickPickUpItem)    76 (MulitpleHitStar)
    //   101, 14, 102 (Ribbon)         18, 20, 19 (FixedHeartPack)
    //   32, 33 (Bump)     54 (Cross)    52 (123) Circle2_Small
    //   91, 94, 92 (FixedAttack)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 4, 0, 1, 0, 1, 0, 2, 4, 0, 8, 4, 0, 54, 0, 0,

        0, 0, 2, 0, 2, 0, 2, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 93, 0, 1, 5, 0, 93, 0, 1,

        9, 0, 20, 20, 0, 94, 0, 0, 0, 0, 0, 1, 0, 5, 0, 2, 2, 0, 1, 0, 6, 0, 8, 8, 0, 1, // 3
  
        5, 0, 20, 0, 20, 0, 1, 5, 0, 1, 9, 0, 14, 0, 0, 0, 0, 0, 17, 0, 0, 0, 17, 0, 17, 0,

        0, 0, 17, 0, 0, 0, 17, 0, 17, 0, 17, 0, 0, 0, 0, 0, 1, 1, 0, 5, 0, 5, 0, 5, 0, 1,

        1, 0, 5, 0, 9, 0, 5, 0, 2, 2, 0, 8, 8, 0, 9, 0, 54, 0, 14, 0, 0, 0, 0, 0, 0, 0, // 6
  
        0, 2, 4, 0, 8, 0, 5, 5, 0, 9, 0, 2, 6, 0, 8, 0, 5, 5, 0, 9, 0, 76, 0, 76, 0, 0,

        0, 0, 2, 4, 0, 5, 5, 0, 76, 0, 91, 0, 0, 2, 6, 0, 5, 5, 0, 76, 0, 92, 0, 76, 0, 76,

        0, 9, 0, 0, 0, 18, 0, 20, 0, 19, 0, 94, 0, 18, 0, 20, 0, 19, 0, 94, 0, 1, 0, 76, 0, 0, // 9
   
        1, 5, 0, 93, 0, 1, 5, 0, 93, 0, 76, 0, 76, 0, 1, 1, 0, 20, 20, 0, 5, 0, 0, 102, 0, 14,

        0, 0, 101, 0, 14, 0, 0, 0, 1, 1, 0, 0, 5, 0, 5, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 20, 0, 20, 0, 0, // 12
   
        0, 0, 0, 1, 0, 5, 0, 9, 0, 0, 0, 0, 0, 1, 1, 0, 5, 0, 0, 0, 0, 1, 1, 0, 9, 0,

        0, 93, 2, 0, 93, 8, 0, 1, 5, 0, 1, 9, 0, 20, 20, 0, 5, 0, 0, 0, 0, 0, 101, 0, 101, 0,

        0, 0, 102, 0, 102, 0, 0, 0, 18, 0, 20, 0, 19, 0, 0, 1, 1, 0, 5, 0, 9, 0, 0, 0, 0, 2, // 15
  
        2, 0, 4, 0, 8, 8, 0, 4, 0, 1, 0, 5, 0, 0, 101, 0, 14, 0, 102, 0, 14, 0, 0, 20, 20, 0,

        0, 1, 2, 0, 1, 6, 0, 5, 5, 0, 9, 4, 0, 1, 1, 0, 101, 0, 101, 0, 14, 0, 14, 0, 0, 0,

        0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 14, 0, 20, 0, 1, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0, // 18
   
        0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 4, 0, 0, 8, 0, 8, 0, 8, 0, 0, 4, 0, 0, 0, 101, 0,

        0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 4, 0, 0, 0, 1, 1,

        0, 5, 0, 9, 0, 1, 5, 0, 1, 9, 0, 0, 0, 0, 2, 4, 0, 93, 0, 0, 8, 4, 0, 93, 0, 0, // 21
   
        0, 7, 0, 0, 0, 2, 2, 0, 8, 8, 0, 1, 1, 0, 5, 0, 9, 4, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 9, // 24
  
        0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 1, 1, 0, 14, 0, 0, 2, 8, 0, 4, 0, 5, 0, 0,

        0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 14, 0, 0, 0, 0, 91, 0, 20, 0, 92, 0, 20, 0,

        0, 94, 0, 18, 0, 94, 0, 19, 0, 1, 5, 0, 1, 9, 0, 76, 0, 0, 0, 0, 0, 0, 1, 2, 0, 3, // 27
   
        0, 1, 8, 0, 3, 0, 1, 0, 5, 0, 9, 0, 2, 2, 0, 8, 8, 0, 9, 0, 0, 0, 1, 1, 0, 76,

        0, 76, 0, 20, 0, 1, 5, 0, 76, 0, 76, 0, 20, 0, 1, 5, 0, 1, 9, 0, 0, 0, 0, 0, 0, 2,

        4, 0, 5, 0, 8, 4, 0, 5, 0, 76, 20, 0, 0, 0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 76, 0, // 30
   
        18, 20, 0, 0, 1, 1, 0, 72, 0, 73, 0, 18, 18, 0, 20, 20, 0, 0, 0, 0, 0, 2, 0, 4, 0, 8,

        0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 32, 18, 0, 18, 0, 0, 1, 1, 5, 33, 19, 0, 19, 0, 1, 1, 5, 0, 1, 1, 9, 0, 54, 0, 0,
  
        0, 0, 93, 0, 93, 0, 93, 0, 1, 1, 101, 18, 18, 20, 1, 1, 102, 19, 19, 0, 1, 1, 5, 0, 1, 1,
  
        9, 0, 2, 4, 8, 9, 0, 0, 17, 0, 0, 1, 1, 4, 0, 20, 20, 0, 1, 1, 66, 0, 20, 20, 0, 1, // 3
  
        5, 4, 0, 20, 20, 0, 1, 5, 9, 0, 18, 20, 19, 14, 0, 0, 0, 0, 17, 0, 0, 0, 17, 0, 17, 0,
  
        0, 0, 17, 0, 0, 0, 17, 0, 17, 0, 17, 0, 0, 5, 0, 0, 1, 1, 5, 0, 18, 20, 20, 18, 0, 1,
  
        1, 5, 0, 19, 20, 19, 20, 0, 2, 4, 5, 0, 8, 4, 5, 0, 1, 1, 112, 5, 0, 0, 0, 72, 111, 0, // 6
  
        0, 18, 18, 18, 94, 0, 19, 19, 19, 94, 0, 20, 20, 20, 91, 0, 20, 20, 20, 92, 0, 1, 1, 112, 9, 0,
   
        0, 0, 101, 18, 18, 94, 0, 102, 19, 19, 94, 0, 14, 20, 20, 91, 0, 14, 20, 20, 20, 92, 0, 1, 1, 112,
   
        0, 9, 0, 0, 0, 76, 0, 18, 18, 18, 76, 0, 19, 19, 19, 0, 5, 9, 5, 0, 0, 101, 14, 102, 0, 0, // 9
   
        18, 0, 20, 0, 19, 0, 0, 76, 0, 18, 20, 18, 76, 0, 19, 20, 19, 0, 5, 9, 5, 0, 0, 102, 14, 101,
   
        0, 0, 19, 0, 20, 0, 18, 0, 0, 9, 0, 0, 2, 8, 2, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 93, 0, 93, 0, 0, 0, 123, 0, 20, 20, 20, 0, 8, // 12
   
        0, 8, 0, 1, 1, 112, 0, 9, 0, 0, 0, 0, 0, 1, 1, 5, 0, 0, 0, 0, 0, 1, 1, 9, 0, 0,
   
        0, 93, 2, 2, 2, 4, 8, 8, 8, 93, 0, 14, 20, 20, 20, 0, 5, 0, 0, 0, 0, 0, 1, 2, 4, 0,
  
        1, 2, 66, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, 101, 14, 102, 14, 101, 0, 0, 94, 0, 0, 0, 0, 101, // 15
  
        18, 18, 0, 102, 19, 19, 0, 1, 5, 1, 9, 5, 0, 0, 14, 0, 20, 18, 14, 0, 20, 19, 0, 5, 4, 0,
   
        0, 1, 2, 4, 0, 1, 2, 6, 0, 1, 5, 4, 0, 1, 5, 9, 0, 101, 0, 14, 0, 102, 0, 19, 0, 0,
   
        0, 0, 0, 1, 1, 5, 5, 0, 101, 18, 18, 14, 20, 20, 102, 19, 19, 94, 0, 0, 0, 93, 0, 0, 0, 93, // 18
   
        0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 5, 0, 0, 8, 0, 8, 0, 8, 0, 0, 5, 0, 0, 0, 1, 1,
  
        0, 5, 0, 1, 1, 0, 9, 0, 0, 0, 2, 2, 2, 0, 4, 0, 8, 8, 8, 0, 5, 0, 0, 0, 1, 1,
   
        0, 5, 5, 9, 0, 1, 1, 0, 5, 5, 4, 0, 0, 0, 1, 5, 0, 9, 0, 0, 1, 5, 0, 4, 0, 0, // 21
   
        0, 3, 0, 0, 0, 1, 2, 5, 0, 1, 8, 5, 0, 8, 2, 8, 2, 4, 0, 0, 0, 0, 0, 17, 0, 0,
  
        0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0,
  
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, // 24
  
        0, 0, 1, 1, 5, 0, 14, 0, 20, 0, 20, 0, 1, 1, 9, 0, 14, 0, 20, 0, 20, 0, 0, 5, 0, 0,
   
        2, 8, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, 20, 20, 0, 0, 0, 101, 14, 102, 0, 0, 18, 20, 19,
   
        0, 102, 14, 101, 0, 0, 19, 20, 18, 0, 1, 1, 5, 1, 1, 9, 0, 0, 93, 0, 93, 0, 1, 2, 4, 0, // 27
   
        1, 2, 66, 0, 18, 18, 94, 0, 19, 19, 94, 0, 20, 18, 91, 20, 19, 92, 94, 0, 0, 0, 76, 0, 18, 20,
   
        18, 0, 72, 0, 0, 76, 0, 19, 20, 19, 0, 73, 0, 0, 18, 94, 19, 94, 18, 0, 0, 0, 0, 0, 0, 1,
   
        1, 5, 5, 0, 76, 0, 76, 0, 72, 111, 20, 0, 0, 0, 0, 0, 1, 1, 5, 9, 0, 76, 0, 76, 0, 73, // 30
   
        111, 20, 0, 0, 1, 2, 4, 0, 1, 2, 66, 0, 1, 1, 112, 9, 0, 0, 0, 0, 0, 93, 0, 93, 0, 93,
   
        0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
