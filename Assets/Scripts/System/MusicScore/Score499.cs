using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score499 : MonoBehaviour
{
    //     100 (JumpAcrossOtherSide)     81, 83, 82 (StoppageOfStar)     52 [121, 123, 122] (Cirlce_2)
    //     71, 72 (GunnerPattern)        12 [201, 202] (HookS)     91, 94, 92 (FixedAirAttack)     18, 20, 19 (FixedHeartPack)
    //     101 (RightOnTheSpotJump)      39, 40 (Trail)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 2, 2, 2, 0, 83, 0, 8, 8, 8, 8, 0, 83, 0, 0, 2, 2, 2, 0, 8, 8, 8, 0, 20, 0,

        20, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 5, 0, 5, 0, 0, 1, 0, 0, 1, 0, 0, 0, 5, 0, 9,

        0, 7, 0, 0, 0, 2, 0, 8, 8, 0, 0, 4, 0, 0, 5, 0, 0, 8, 8, 0, 2, 2, 0, 4, 0, 1, // 3
  
        0, 0, 5, 0, 0, 83, 0, 83, 0, 0, 0, 3, 0, 0, 7, 0, 0, 0, 3, 0, 0, 7, 0, 0, 1, 0,

        0, 5, 0, 0, 81, 0, 0, 83, 0, 0, 82, 0, 0, 2, 2, 2, 0, 8, 8, 8, 0, 1, 0, 1, 0, 5,

        0, 5, 0, 71, 0, 0, 0, 72, 0, 0, 0, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 6
  
        0, 2, 2, 0, 5, 0, 8, 8, 0, 5, 0, 123, 0, 0, 0, 6, 2, 0, 5, 0, 5, 0, 6, 8, 0, 83,

        0, 83, 0, 0, 4, 2, 2, 2, 0, 4, 8, 8, 8, 0, 0, 20, 20, 0, 18, 18, 0, 20, 20, 0, 19, 19,

        0, 94, 0, 0, 4, 8, 8, 8, 0, 1, 1, 5, 0, 123, 0, 0, 0, 0, 100, 0, 0, 3, 0, 0, 7, 0, // 9
  
        0, 3, 0, 0, 7, 0, 1, 1, 5, 0, 83, 0, 83, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 93, 0, 0,

        93, 0, 0, 0, 0, 0, 0, 2, 2, 0, 8, 8, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 93, 0, 93,

        0, 93, 0, 0, 0, 0, 2, 2, 8, 8, 0, 0, 0, 1, 0, 5, 0, 1, 0, 5, 0, 0, 0, 0, 0, 81, // 12
   
        0, 2, 8, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 8, 2, 0, 93, 0, 0, 1, 2, 2, 0,

        1, 8, 8, 0, 5, 2, 2, 0, 5, 8, 8, 0, 100, 2, 2, 0, 100, 8, 8, 0, 5, 0, 5, 0, 100, 2,

        2, 0, 100, 8, 8, 0, 0, 52, 0, 0, 0, 0, 7, 0, 0, 0, 71, 0, 0, 18, 0, 18, 0, 83, 0, 83, // 15
  
        0, 1, 1, 9, 0, 0, 72, 0, 0, 19, 0, 19, 0, 83, 0, 83, 0, 1, 5, 5, 0, 0, 93, 0, 5, 0,

        0, 93, 0, 5, 0, 1, 1, 83, 0, 0, 1, 1, 5, 5, 0, 123, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1,

        9, 0, 100, 0, 100, 0, 100, 0, 100, 0, 0, 93, 0, 0, 93, 0, 0, 5, 0, 0, 93, 0, 0, 93, 0, 0, // 18
  
        0, 100, 2, 2, 2, 0, 83, 8, 8, 8, 0, 100, 8, 8, 2, 0, 83, 2, 2, 8, 0, 7, 0, 123, 0, 0,

        20, 20, 20, 20, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0,

        0, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 7, // 21
  
        0, 0, 7, 0, 0, 2, 8, 2, 8, 0, 0, 0, 1, 0, 1, 0, 5, 0, 2, 2, 2, 0, 8, 8, 8, 0,

        83, 83, 0, 0, 0, 201, 0, 0, 0, 12, 0, 0, 0, 202, 0, 0, 0, 0, 0, 2, 4, 2, 0, 8, 4, 8,

        0, 81, 0, 82, 0, 0, 83, 0, 0, 0, 0, 3, 0, 0, 2, 0, 2, 0, 0, 0, 20, 0, 0, 0, 0, 0, // 24
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 52, 0, 0, 0, 0, 83, 0, 2, 2, 2, 2, 81, 0, 2, 2, 2, 2, 82, 0, 8, 8, 8, 8, 123, 0,
  
        0, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 1, 0, 1,
 
        0, 9, 0, 0, 0, 1, 0, 0, 6, 0, 0, 1, 0, 0, 9, 0, 0, 0, 2, 2, 2, 0, 4, 0, 8, 8, // 3
  
        8, 0, 4, 0, 1, 5, 1, 5, 0, 0, 0, 72, 0, 0, 201, 0, 0, 0, 83, 2, 2, 8, 0, 83, 2, 2,
  
        8, 0, 81, 0, 0, 82, 0, 0, 100, 0, 0, 0, 71, 0, 0, 202, 0, 0, 0, 83, 2, 2, 4, 0, 83, 8,
  
        8, 6, 0, 81, 0, 100, 0, 82, 0, 100, 0, 0, 83, 0, 0, 0, 0, 3, 0, 0, 0, 0, 93, 0, 0, 0, // 6
  
        0, 1, 1, 5, 0, 2, 8, 2, 0, 1, 1, 4, 0, 0, 101, 0, 0, 1, 1, 9, 0, 8, 2, 8, 0, 1,
  
        1, 4, 0, 0, 100, 2, 2, 83, 0, 100, 8, 8, 83, 0, 0, 201, 0, 0, 0, 100, 12, 0, 0, 0, 100, 202,
  
        0, 0, 0, 2, 4, 0, 8, 4, 0, 5, 0, 0, 0, 123, 0, 0, 0, 100, 92, 122, 0, 0, 0, 100, 91, 121, // 9
  
        0, 0, 0, 0, 83, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 54, 0, 0,
  
        0, 0, 0, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 123, 0, 18, 0, 20, 0, 19, 0, 0, 0, 0, 0, 54, // 12
   
        0, 100, 54, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 54, 0, 100, 54, 0, 0, 0, 83, 2, 2, 0,
   
        81, 8, 8, 0, 83, 2, 2, 0, 82, 8, 8, 0, 1, 1, 1, 0, 5, 5, 5, 0, 1, 1, 1, 0, 5, 5,
  
        5, 0, 123, 0, 0, 20, 0, 20, 0, 20, 20, 20, 20, 0, 0, 0, 40, 0, 0, 0, 72, 0, 19, 0, 19, 19, // 15
  
        0, 100, 0, 100, 0, 0, 39, 0, 0, 0, 71, 0, 18, 0, 18, 18, 0, 100, 0, 100, 0, 0, 1, 1, 5, 0,
  
        1, 1, 9, 0, 1, 5, 1, 5, 0, 0, 71, 0, 20, 72, 0, 94, 0, 0, 0, 0, 121, 0, 18, 18, 100, 123,
  
        0, 20, 20, 100, 122, 0, 19, 19, 100, 0, 0, 2, 4, 8, 0, 1, 1, 5, 0, 1, 1, 9, 0, 1, 1, 5, // 18
  
        0, 83, 2, 2, 4, 0, 81, 8, 8, 4, 0, 83, 2, 4, 2, 0, 82, 8, 8, 4, 0, 7, 0, 52, 0, 0,
  
        0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,
  
        0, 8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 7, // 21
  
        7, 7, 0, 0, 1, 0, 0, 54, 0, 0, 0, 0, 1, 0, 54, 0, 0, 0, 20, 0, 0, 2, 4, 0, 8, 4,
  
        0, 5, 0, 0, 0, 1, 2, 8, 2, 93, 0, 0, 6, 8, 2, 8, 93, 0, 0, 1, 1, 1, 1, 0, 81, 8,
  
        8, 4, 0, 82, 2, 2, 4, 0, 0, 0, 0, 54, 0, 0, 0, 0, 93, 0, 0, 0, 0, 54, 0, 0, 0, 0, // 24
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
