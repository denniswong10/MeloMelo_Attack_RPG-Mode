using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score377 : MonoBehaviour
{
    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, // 3
   
        0, 2, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 5, 0, 0, 0, 2, 0, 0, 8,
   
        0, 0, 2, 0, 0, 5, 0, 8, 0, 5, 0, 0, 1, 0, 0, 6, 0, 0, 0, 0, 5, 0, 0, 0, 201, 0,
   
        0, 12, 0, 0, 202, 0, 0, 0, 1, 0, 2, 0, 8, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 103, // 6
   
        0, 0, 0, 0, 5, 104, 0, 0, 0, 0, 5, 0, 0, 6, 0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 5, 0,
   
        5, 0, 6, 0, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 1, 0, 5,
   
        0, 1, 0, 6, 0, 0, 203, 0, 0, 203, 0, 0, 4, 0, 0, 4, 0, 0, 7, 0, 0, 7, 0, 0, 5, 0, // 9
   
        0, 1, 0, 5, 0, 0, 1, 0, 6, 0, 0, 5, 0, 0, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 0, 1,
   
        0, 5, 0, 2, 0, 2, 0, 1, 0, 6, 0, 8, 0, 8, 0, 5, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0,
   
        0, 7, 0, 0, 1, 0, 0, 0, 201, 0, 201, 0, 0, 0, 12, 0, 12, 0, 0, 0, 5, 6, 0, 0, 0, 7, // 12
   
        0, 0, 0, 7, 0, 0, 1, 0, 5, 5, 0, 6, 0, 201, 0, 0, 202, 0, 0, 201, 0, 0, 202, 0, 0, 0,
   
        1, 0, 5, 0, 1, 0, 6, 0, 202, 0, 202, 0, 0, 12, 0, 12, 0, 0, 201, 0, 201, 0, 0, 7, 0, 0,
   
        1, 0, 1, 0, 6, 0, 0, 0, 1, 6, 0, 1, 5, 0, 0, 0, 7, 0, 0, 0, 5, 6, 0, 5, 5, 0, // 15
   
        0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 6, 0, 0, 1, 0, 0, 5, 0, 0, 0,
   
        0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 1, 0, 201, 0, 0, 1, 0, 202, 0, 0,
    
        1, 0, 12, 0, 0, 8, 4, 0, 2, 4, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 1, 5, 0, 1, 6, 0, // 18
   
        1, 5, 0, 201, 0, 0, 202, 0, 0, 4, 4, 0, 5, 202, 0, 0, 201, 0, 20, 0, 0, 0, 0, 0, 1, 0,
   
        5, 0, 2, 0, 2, 0, 1, 0, 6, 0, 8, 0, 8, 0, 7, 0, 7, 0, 20, 0, 7, 0, 7, 0, 20, 0,
   
        7, 0, 7, 0, 5, 0, 0, 5, 0, 0, 205, 0, 205, 0, 205, 0, 0, 5, 0, 0, 204, 0, 204, 0, 204, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    
        0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 1, 1, 5, 0, 0, 1, 1, 6, 0, 0, 1, 1, 5, 0, 0, 6, 0, 0, 0, 1, 2, 4, 0,

        0, 1, 8, 4, 0, 0, 5, 0, 0, 9, 0, 0, 1, 2, 4, 0, 1, 1, 5, 0, 1, 8, 4, 0, 1, 1,

        6, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 101, 0, 0, 201, 0, 0, 0, 5, 0, 0, 1, 1, 0, 0, // 3
   
        2, 2, 5, 0, 8, 8, 5, 0, 0, 0, 0, 0, 0, 1, 0, 102, 0, 0, 202, 0, 0, 0, 5, 0, 0, 1,

        1, 0, 0, 2, 1, 5, 0, 8, 1, 5, 0, 0, 5, 0, 0, 9, 0, 0, 0, 0, 4, 2, 8, 0, 103, 0,

        0, 0, 4, 0, 0, 5, 0, 12, 0, 0, 4, 12, 0, 0, 5, 0, 0, 0, 0, 0, 0, 4, 8, 2, 0, 104, // 6
   
        0, 400, 0, 400, 0, 5, 0, 12, 0, 0, 4, 12, 0, 0, 5, 0, 2, 2, 1, 0, 8, 8, 1, 0, 2, 4,

        8, 4, 5, 0, 0, 0, 0, 3, 0, 0, 0, 193, 0, 0, 0, 1, 1, 5, 0, 1, 1, 6, 0, 1, 1, 5,

        0, 201, 0, 0, 202, 0, 0, 203, 0, 203, 0, 0, 4, 0, 1, 1, 5, 0, 11, 0, 0, 0, 0, 5, 0, 0, // 9
   
        204, 0, 0, 203, 0, 0, 205, 0, 0, 1, 1, 6, 0, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 0, 1,

        1, 5, 0, 2, 2, 1, 0, 1, 1, 6, 0, 8, 8, 1, 0, 5, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0,

        0, 3, 0, 0, 1, 1, 5, 0, 201, 0, 0, 12, 0, 0, 202, 0, 0, 203, 0, 400, 0, 20, 0, 0, 0, 3, // 12
   
        0, 0, 0, 0, 0, 0, 1, 0, 103, 0, 0, 0, 0, 202, 0, 0, 104, 0, 0, 0, 0, 201, 0, 0, 0, 0,

        1, 1, 5, 0, 1, 1, 6, 0, 104, 0, 0, 0, 0, 201, 0, 0, 103, 0, 0, 0, 0, 202, 0, 0, 0, 0,

        2, 2, 1, 0, 8, 8, 1, 0, 204, 0, 203, 0, 205, 0, 0, 0, 1, 0, 0, 0, 205, 0, 203, 0, 204, 0, // 15
   
        0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 6, 0, 2, 4, 8, 4, 5, 0, 0, 0,

        0, 3, 0, 0, 0, 193, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 1, 1, 5, 0, 1, 1, 6, 0, 103, 401,

        0, 401, 202, 0, 0, 104, 402, 0, 402, 201, 0, 0, 0, 5, 8, 8, 5, 0, 0, 0, 1, 1, 5, 0, 1, 1, // 18
   
        6, 0, 103, 401, 0, 401, 201, 0, 0, 104, 402, 0, 402, 202, 0, 0, 4, 0, 5, 0, 0, 0, 0, 0, 1, 1,

        5, 0, 2, 2, 1, 0, 1, 1, 6, 0, 8, 8, 1, 0, 205, 20, 0, 203, 20, 0, 204, 20, 0, 1, 1, 5,

        0, 1, 1, 6, 0, 1, 1, 5, 0, 0, 205, 0, 203, 0, 204, 0, 0, 5, 0, 0, 204, 0, 203, 0, 205, 0, // 21
   
        7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
