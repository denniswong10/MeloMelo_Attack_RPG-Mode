using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score519 : MonoBehaviour
{
    //     41 [105, 106] [101, 103] (DiaRect)     91, 94, 92 (FixedAirAttack)     14 (Ribbon)      51, 52 (JumpingSideDance)
    //     54, 55 (ScratchMark)      57, 58 (KeyTileFollow_Star)      82, 81 (CombinePickStar)       80 (BoomStopStar)
    //     62, 63 (DoubleCrestHeart)      46 (6-Keys)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 8, 8, 8, 0, 0, 2, 0, 2, 0, 8, 8, 8, 0, 0, 1, 1,

        0, 5, 5, 0, 14, 0, 94, 0, 0, 3, 0, 0, 1, 1, 0, 5, 5, 0, 1, 1, 0, 9, 5, 0, 41, 0,  // 3
  
        0, 0, 41, 0, 0, 2, 2, 2, 0, 8, 8, 8, 0, 0, 6, 0, 0, 1, 2, 0, 8, 0, 8, 5, 0, 0,

        1, 1, 0, 5, 5, 5, 0, 4, 0, 2, 2, 2, 0, 8, 8, 8, 0, 14, 0, 94, 14, 0, 94, 0, 7, 0,

        0, 0, 0, 0, 0, 105, 0, 0, 2, 4, 8, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 80, 0,  // 6
  
        106, 0, 0, 8, 4, 2, 0, 1, 1, 0, 9, 0, 1, 1, 0, 5, 0, 80, 0, 80, 0, 80, 0, 1, 5, 0,

        1, 9, 0, 2, 2, 2, 0, 8, 8, 8, 0, 4, 4, 0, 5, 5, 0, 80, 80, 0, 80, 80, 0, 0, 93, 0,

        7, 0, 93, 0, 0, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0,  // 9
  
        0, 1, 1, 0, 0, 0, 5, 0, 0, 5, 0, 0, 7, 0, 0, 7, 0, 0, 2, 8, 0, 0, 5, 0, 9, 0,

        0, 0, 0, 0, 0, 0, 93, 93, 0, 0, 0, 2, 0, 0, 0, 8, 8, 0, 0, 5, 0, 0, 2, 2, 0, 0,

        0, 5, 0, 9, 0, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0, 8, 8, 0, 5, 0, 0, 3,  // 12
  
        0, 0, 7, 0, 0, 3, 0, 0, 2, 0, 8, 0, 2, 0, 8, 0, 2, 0, 1, 5, 0, 1, 9, 0, 80, 0,

        0, 80, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 58, 0, 0, 46,

        57, 0, 0, 46, 0, 5, 5, 9, 0, 0, 3, 0, 2, 2, 80, 0, 8, 8, 80, 0, 5, 0, 5, 0, 9, 0,  // 15
  
        0, 5, 0, 46, 46, 0, 80, 0, 80, 0, 0, 7, 0, 0, 41, 0, 106, 0, 0, 80, 80, 0, 41, 0, 105, 0,

        0, 80, 80, 0, 0, 93, 0, 93, 0, 2, 2, 2, 0, 8, 8, 8, 0, 7, 0, 1, 1, 0, 5, 5, 0, 9,

        0, 14, 0, 94, 14, 0, 94, 0, 80, 0, 82, 0, 82, 0, 80, 0, 81, 0, 81, 0, 80, 80, 0, 2, 8, 2,  // 18
   
        0, 0, 41, 106, 3, 0, 41, 105, 3, 0, 80, 0, 41, 105, 93, 0, 41, 106, 93, 0, 46, 0, 80, 0, 46, 46,

        0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 2, 2, 0, 8, 8, 0, 5, 0, 54, 0, 55, 0, 54, 0, 55, 0,

        62, 0, 63, 0, 0, 7, 0, 0, 3, 0, 0, 7, 0, 0, 93, 0, 0, 2, 4, 0, 5, 5, 0, 4, 0, 14,  // 21
    
        0, 0, 0, 0, 2, 2, 0, 8, 8, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 1, 1, 5, 0, 1, 1, 9, 0, 2, 2, 2, 2,
  
        0, 8, 8, 8, 8, 0, 80, 0, 0, 3, 0, 0, 105, 41, 106, 0, 92, 106, 41, 0, 91, 105, 41, 0, 106, 41,  // 3
  
        105, 0, 94, 41, 106, 0, 94, 41, 105, 0, 4, 0, 0, 7, 7, 0, 0, 1, 0, 2, 2, 0, 4, 8, 0, 1,
  
        1, 5, 0, 1, 1, 9, 0, 80, 0, 54, 94, 92, 0, 55, 94, 91, 0, 57, 0, 8, 58, 0, 8, 0, 4, 0,
  
        0, 0, 0, 0, 0, 1, 1, 5, 0, 14, 6, 0, 1, 5, 9, 0, 54, 0, 55, 0, 0, 1, 6, 5, 9, 0,  // 6
  
        14, 6, 0, 1, 14, 6, 0, 1, 5, 5, 9, 0, 55, 0, 54, 0, 0, 82, 82, 80, 80, 0, 1, 1, 5, 0,
  
        1, 1, 9, 0, 14, 0, 3, 0, 14, 0, 3, 0, 6, 1, 1, 5, 0, 0, 81, 81, 80, 80, 0, 0, 3, 0,
  
        93, 0, 93, 0, 0, 4, 4, 0, 0, 0, 0, 101, 0, 0, 0, 3, 0, 0, 0, 103, 0, 0, 0, 3, 0, 0,  // 9
  
        0, 2, 2, 0, 8, 0, 8, 0, 5, 0, 0, 0, 101, 0, 0, 2, 2, 0, 8, 8, 0, 5, 0, 9, 0, 0,
  
        103, 0, 0, 4, 2, 0, 4, 8, 0, 93, 0, 93, 0, 0, 1, 1, 0, 5, 0, 5, 0, 1, 1, 1, 0, 5,
  
        0, 9, 0, 5, 0, 0, 101, 0, 0, 0, 103, 0, 0, 0, 94, 2, 2, 2, 0, 94, 8, 8, 8, 0, 0, 3,  // 12
  
        0, 0, 3, 0, 0, 93, 2, 2, 2, 0, 93, 8, 8, 8, 0, 4, 0, 4, 0, 1, 1, 5, 0, 1, 1, 9,
  
        0, 80, 0, 0, 0, 51, 0, 0, 9, 1, 5, 0, 82, 80, 81, 80, 0, 58, 0, 0, 7, 0, 52, 0, 0, 9,
  
        1, 5, 0, 80, 80, 80, 80, 57, 0, 0, 7, 0, 1, 1, 5, 0, 41, 0, 9, 1, 5, 0, 41, 0, 6, 1,  // 15
  
        1, 5, 0, 55, 0, 62, 54, 0, 63, 0, 7, 7, 0, 0, 80, 0, 105, 7, 41, 3, 106, 0, 0, 80, 80, 0,
  
        106, 7, 41, 3, 105, 0, 0, 80, 0, 57, 0, 8, 58, 0, 46, 0, 0, 93, 0, 0, 14, 0, 6, 14, 0, 9,
   
        14, 0, 4, 2, 8, 0, 9, 1, 5, 0, 6, 1, 5, 0, 41, 0, 0, 82, 81, 0, 80, 80, 0, 4, 4, 4,  // 18
   
        0, 0, 80, 80, 0, 105, 7, 41, 93, 106, 0, 0, 80, 80, 0, 106, 7, 41, 93, 105, 0, 0, 46, 58, 0, 46,
   
        0, 0, 3, 7, 3, 0, 1, 1, 5, 5, 0, 46, 0, 1, 9, 1, 5, 0, 80, 0, 54, 94, 92, 0, 55, 94,
    
        91, 0, 80, 0, 0, 3, 0, 0, 93, 0, 0, 3, 0, 0, 93, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80,  // 21
    
        80, 0, 0, 0, 2, 0, 8, 0, 8, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
