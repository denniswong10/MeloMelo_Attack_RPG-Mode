using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score536 : MonoBehaviour
{
    //       31 [111, 101, 110] Wings        91, 94, 92 (FixedAirAttack)        18, 20, 19 (FixedHeartPack)
    //       115, 80, 116 (BoomStopStar)     45 [109, 112] (4-Keys)       81 (BoomStopStar_Random)
    //       44 (House_v2)       117 (WideItem)      70 (ItemStrikeWithItem3)      14 (Ribbon)
    //       160 (RestrictAirBomb)         120 (DoubleCrestHeart)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 101, 0, 18, 0, 94, 0, 1, 5, 0, 1, 9, 0, 0, 0, 3, 0, 0, 0, 2, 0, 8, 0, 0, 0, 93,

        0, 0, 0, 0, 101, 0, 19, 0, 94, 0, 1, 5, 0, 1, 9, 0, 80, 80, 0, 977, 0, 0, 1, 0, 5, 0,

        1, 0, 9, 0, 3, 0, 2, 2, 81, 0, 0, 0, 1, 1, 5, 0, 14, 0, 0, 18, 20, 0, 92, 0, 0, 1, // 3
   
        1, 9, 0, 14, 0, 0, 18, 20, 0, 18, 94, 0, 19, 20, 0, 19, 94, 0, 0, 977, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,

        2, 0, 2, 0, 81, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 8, 0, 8, 0, 8, 0, 81, 0, 0, 0, 0, // 6
   
        0, 0, 0, 160, 0, 2, 2, 0, 5, 0, 0, 8, 8, 0, 5, 0, 3, 0, 115, 0, 80, 0, 80, 0, 0, 116,

        0, 80, 0, 80, 0, 0, 3, 0, 93, 0, 0, 1, 1, 0, 5, 9, 0, 81, 0, 14, 0, 0, 0, 94, 0, 0,

        1, 5, 0, 1, 9, 0, 81, 0, 14, 0, 0, 18, 20, 92, 0, 19, 20, 91, 0, 1, 0, 5, 0, 1, 0, 9, // 9
   
        0, 3, 93, 0, 2, 2, 5, 0, 8, 8, 5, 0, 14, 0, 20, 94, 0, 0, 3, 0, 0, 2, 0, 2, 0, 2,

        0, 93, 0, 0, 8, 0, 8, 0, 8, 0, 93, 0, 93, 0, 0, 2, 4, 8, 0, 0, 1, 1, 5, 0, 81, 0,

        1, 1, 9, 0, 81, 0, 1, 2, 5, 0, 81, 0, 1, 8, 5, 0, 81, 0, 0, 3, 0, 0, 3, 0, 2, 8, // 12
  
        2, 0, 80, 0, 0, 0, 111, 0, 110, 0, 20, 94, 0, 1, 5, 5, 0, 9, 14, 0, 0, 18, 20, 0, 19, 20,

        0, 14, 0, 0, 91, 20, 92, 0, 7, 0, 0, 110, 0, 111, 0, 20, 20, 94, 0, 1, 5, 0, 9, 14, 0, 0,

        19, 20, 0, 18, 20, 0, 14, 0, 92, 20, 91, 0, 7, 0, 0, 0, 0, 101, 0, 111, 0, 101, 0, 0, 1, 1, // 15
   
        5, 0, 1, 1, 9, 0, 3, 0, 81, 4, 81, 0, 80, 0, 80, 0, 14, 0, 94, 0, 0, 0, 101, 0, 110, 0,

        101, 0, 0, 1, 4, 5, 0, 1, 9, 5, 0, 3, 0, 81, 4, 81, 0, 80, 0, 80, 0, 14, 0, 44, 0, 0,

        0, 7, 7, 0, 0, 0, 93, 0, 0, 0, 2, 2, 0, 0, 1, 5, 0, 1, 9, 0, 80, 80, 0, 1, 6, 5, // 18
   
        0, 81, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 111, 0, 110, 0, 0, 1, 1, 5, 0, 9, 81, 0, 0, 0, 93, 0, 0, 0, 93, 0, 93, 0, 0, 0, 3,
   
        0, 0, 0, 0, 110, 0, 111, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 81, 0, 977, 0, 0, 109, 45, 112, 0,
   
        112, 45, 109, 3, 0, 18, 18, 19, 92, 0, 0, 0, 111, 92, 101, 0, 94, 94, 0, 1, 1, 5, 5, 0, 0, 110, // 3
   
        91, 101, 0, 94, 94, 0, 1, 4, 1, 5, 0, 1, 4, 1, 9, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
   
        2, 0, 0, 0, 93, 0, 0, 0, 93, 93, 0, 0, 45, 0, 0, 8, 8, 8, 0, 0, 0, 0, 93, 0, 0, 0, // 6
   
        93, 93, 0, 0, 0, 18, 0, 19, 92, 0, 0, 19, 0, 18, 91, 0, 3, 0, 18, 18, 80, 109, 45, 0, 0, 19,
   
        19, 80, 112, 45, 0, 0, 977, 0, 3, 0, 0, 1, 2, 2, 5, 9, 0, 81, 4, 81, 9, 0, 0, 80, 0, 0,
   
        1, 8, 8, 5, 9, 0, 81, 9, 81, 4, 0, 101, 94, 94, 0, 81, 6, 81, 0, 80, 0, 80, 0, 81, 9, 81, // 9
   
        0, 80, 80, 0, 3, 2, 4, 0, 3, 8, 4, 0, 1, 1, 5, 5, 0, 0, 3, 0, 0, 2, 93, 2, 2, 0,
   
        0, 3, 0, 0, 8, 8, 0, 93, 0, 93, 0, 0, 3, 0, 0, 2, 93, 8, 0, 0, 1, 1, 5, 9, 0, 0,
   
        117, 2, 80, 0, 70, 8, 80, 0, 117, 2, 8, 2, 80, 0, 70, 117, 70, 0, 1, 2, 5, 0, 1, 8, 9, 0, // 12
  
        80, 160, 81, 0, 0, 0, 101, 0, 111, 0, 110, 0, 4, 1, 5, 0, 9, 14, 0, 0, 109, 45, 112, 0, 116, 80,
  
        115, 0, 18, 91, 0, 19, 92, 0, 80, 0, 0, 101, 0, 110, 0, 111, 0, 120, 1, 5, 0, 9, 14, 0, 0, 112,
   
        45, 109, 0, 115, 80, 116, 0, 19, 92, 0, 18, 91, 101, 0, 0, 0, 0, 101, 0, 111, 94, 91, 0, 4, 1, 5, // 15
   
        0, 14, 18, 20, 19, 0, 3, 0, 109, 80, 112, 0, 112, 80, 109, 0, 70, 117, 14, 0, 0, 0, 101, 0, 110, 94,
   
        92, 0, 120, 1, 5, 0, 14, 19, 20, 18, 0, 3, 0, 112, 80, 109, 0, 109, 80, 112, 0, 70, 117, 14, 0, 14,
  
        0, 0, 94, 0, 0, 0, 93, 0, 0, 0, 93, 93, 0, 0, 977, 977, 0, 1, 5, 5, 0, 80, 80, 0, 1, 9, // 18
   
        9, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
