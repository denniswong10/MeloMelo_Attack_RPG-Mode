using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score434 : MonoBehaviour
{
    // 71, 72 (RipBlade)    14 (Random_Ribbon)   55, 56 (CurveClosedPattern)    76 (MultipleHitStar)    47, 48 (2/4 TapKey)
    // 33  105, 106 (M)    52, 53 (RainCurve)    22, 23 (BoldArrow)
    // 12 (HookS)    13 (CurveS)   15 (BreadBake)    16, 17 (RollerPan)    75 (QuickDodgeWithItem3)    74 (SplitBombWitheItem3)
    // 80 (FixedHeartWithItem)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 0, 5, 0, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 47, 0, 47, 0, 48, 0, 48, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 2, 0, 4, 0, 8, 0, 4,

        0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 14, 0, 20, 0, 14, 0, 20, 0, 1, 1, 0, 5, 0, 1, 1, // 3
      
        0, 9, 0, 2, 4, 0, 5, 0, 8, 4, 0, 5, 0, 9, 5, 0, 76, 0, 20, 0, 76, 0, 0, 0, 0, 0,

        0, 1, 0, 5, 0, 1, 0, 5, 0, 14, 0, 0, 14, 0, 0, 1, 1, 0, 5, 9, 0, 0, 12, 0, 0, 20,

        0, 12, 0, 0, 20, 0, 1, 1, 0, 5, 0, 1, 1, 0, 5, 0, 2, 2, 0, 8, 8, 0, 0, 0, 7, 0, // 6
      
        0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 1, 1, 0, 5, 5, 0, 1, 1, 0, 9, 0, 2, 0, 2, 0, 2,

        0, 8, 0, 8, 0, 8, 0, 5, 0, 93, 0, 93, 0, 1, 0, 6, 0, 1, 0, 6, 0, 20, 0, 80, 0, 20,

        0, 1, 1, 0, 5, 0, 0, 7, 0, 0, 7, 0, 0, 2, 2, 0, 8, 8, 0, 1, 0, 5, 0, 0, 47, 0, // 9
      
        0, 47, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 1, 0, 1, 0, 5, 0, 2, 8, 0, 4, 0, 0, 0, 1,

        5, 0, 1, 9, 0, 20, 20, 0, 80, 80, 0, 5, 5, 0, 0, 1, 0, 5, 0, 14, 0, 0, 1, 0, 9, 0,

        14, 0, 0, 20, 0, 0, 80, 0, 0, 1, 1, 0, 5, 0, 0, 48, 0, 0, 48, 0, 0, 1, 1, 0, 5, 0, // 12
      
        20, 0, 1, 1, 0, 5, 0, 80, 0, 55, 0, 0, 56, 0, 0, 20, 0, 0, 20, 0, 0, 47, 0, 0, 0, 15,

        0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 20, 0, 20, 0, 80, 0, 5, 0, 9, 0, 0, 1, 2, 0, 5,

        0, 1, 8, 0, 9, 0, 2, 0, 2, 0, 8, 8, 0, 1, 0, 5, 0, 0, 7, 0, 0, 7, 0, 0, 1, 5, // 15
      
        0, 9, 0, 1, 5, 0, 9, 0, 0, 0, 7, 0, 0, 3, 0, 0, 1, 0, 20, 0, 1, 0, 5, 6, 0, 0,

        1, 0, 5, 0, 14, 0, 0, 1, 0, 9, 0, 14, 0, 0, 20, 20, 0, 0, 0, 93, 0, 0, 71, 0, 0, 0,

        72, 0, 0, 0, 15, 0, 0, 0, 15, 0, 0, 0, 20, 0, 20, 0, 80, 0, 5, 0, 9, 0, 1, 1, 0, 5, // 18
      
        9, 0, 2, 0, 2, 0, 4, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        93, 0, 0, 0, 93, 0, 0, 0, 93, 0, 93, 0, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 93, 0, 93, 0,

        5, 0, 9, 0, 0, 0, 2, 0, 2, 0, 5, 0, 8, 0, 8, 0, 5, 0, 5, 0, 0, 1, 1, 0, 5, 0, // 21
      
        1, 1, 0, 9, 0, 47, 0, 48, 48, 0, 76, 0, 0, 2, 0, 8, 0, 4, 0, 2, 0, 8, 0, 4, 0, 0,

        5, 0, 5, 0, 71, 0, 20, 0, 72, 0, 20, 0, 0, 9, 0, 0, 1, 5, 0, 47, 0, 1, 9, 0, 47, 0,

        20, 20, 0, 1, 0, 5, 0, 0, 0, 2, 0, 0, 2, 0, 0, 8, 0, 0, 8, 0, 0, 5, 0, 2, 2, 0, // 24
      
        5, 0, 2, 2, 0, 9, 0, 8, 8, 0, 93, 2, 0, 93, 2, 0, 93, 8, 0, 93, 8, 0, 1, 1, 0, 5,

        0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0,

        0, 3, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, // 27
       
        0, 5, 0, 1, 0, 9, 0, 0, 0, 15, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 20, 20, 0, 80, 80,

        0, 5, 9, 0, 16, 0, 0, 0, 17, 0, 0, 0, 1, 1, 0, 5, 0, 9, 0, 5, 0, 2, 0, 2, 0, 8,

        0, 4, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 17, 0, 0, 0, 15, 0, 0, 0, 20, 80, 0, 20, 80, // 30
       
        0, 5, 0, 4, 0, 5, 0, 0, 0, 0, 1, 1, 0, 71, 0, 0, 0, 1, 1, 0, 72, 0, 0, 0, 1, 1,

        0, 5, 0, 5, 0, 1, 1, 0, 9, 0, 5, 0, 0, 14, 0, 0, 14, 0, 0, 20, 0, 80, 0, 0, 1, 0,

        1, 0, 5, 0, 0, 1, 1, 0, 5, 0, 93, 0, 1, 1, 0, 9, 0, 93, 0, 5, 0, 47, 0, 0, 48, 0, // 33
    
        2, 4, 0, 8, 4, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 93, 0, 0, 5, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 36
       
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 2, 2, 4, 0, 8, 8, 4, 0, 2, 4, 5, 0, 8, 4, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 71, 0, 0, 0, 1, 2, 4, 0, 1, 8, 4, 0, 5, 0, 72, 0, 0, 0, 1, 2, 4, 0, 1, 8, 4,

        0, 1, 1, 5, 5, 0, 55, 0, 0, 56, 0, 0, 14, 0, 0, 14, 0, 0, 14, 0, 0, 71, 0, 20, 0, 72, // 3
      
        0, 20, 0, 1, 1, 5, 0, 1, 5, 1, 5, 0, 47, 0, 5, 9, 5, 0, 76, 9, 76, 0, 0, 0, 0, 0,

        0, 1, 1, 5, 0, 14, 0, 0, 14, 0, 0, 1, 1, 9, 0, 0, 14, 0, 0, 14, 0, 0, 1, 5, 1, 5,

        0, 1, 9, 1, 9, 0, 55, 0, 20, 56, 0, 20, 1, 5, 0, 2, 2, 93, 8, 8, 4, 0, 0, 0, 3, 0, // 6
      
        0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 47, 0, 0, 48, 0, 48, 0, 1, 1, 5, 0, 1, 1, 9, 0, 2,

        4, 0, 8, 4, 0, 1, 1, 5, 0, 2, 0, 8, 0, 1, 1, 6, 0, 93, 0, 93, 0, 105, 0, 33, 0, 106,

        0, 0, 20, 80, 20, 0, 0, 2, 0, 0, 8, 0, 0, 2, 93, 8, 8, 0, 1, 1, 5, 5, 0, 14, 0, 14, // 9
      
        0, 52, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 5, 0, 0, 0, 1,

        1, 9, 5, 0, 22, 0, 20, 20, 23, 0, 20, 20, 5, 0, 0, 1, 1, 5, 0, 14, 0, 0, 1, 1, 9, 0,

        14, 0, 0, 47, 0, 0, 48, 0, 0, 1, 5, 1, 9, 0, 14, 0, 14, 0, 14, 0, 0, 5, 0, 12, 0, 20, // 12
      
        0, 13, 0, 20, 0, 2, 4, 8, 0, 1, 5, 1, 9, 0, 0, 93, 0, 0, 93, 0, 0, 5, 0, 0, 0, 15,

        0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 5, 0, 20, 20, 0, 71, 0, 20, 20, 72, 0, 20, 20, 0, 1,
      
        1, 5, 1, 1, 9, 0, 2, 0, 8, 0, 2, 2, 93, 8, 8, 5, 0, 0, 3, 0, 0, 3, 0, 0, 1, 1, // 15
      
        5, 5, 0, 1, 1, 9, 5, 0, 0, 0, 47, 0, 0, 48, 0, 0, 12, 20, 0, 13, 0, 20, 0, 5, 0, 0,
      
        1, 1, 5, 0, 14, 0, 20, 0, 76, 0, 1, 5, 1, 5, 0, 9, 0, 0, 0, 3, 0, 0, 22, 0, 7, 20,
      
        0, 23, 0, 7, 20, 0, 17, 0, 20, 0, 16, 0, 20, 0, 15, 0, 20, 0, 15, 0, 20, 0, 1, 76, 0, 1, // 18
      
        76, 0, 1, 9, 5, 0, 48, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      
        2, 2, 2, 0, 93, 0, 8, 8, 8, 0, 93, 0, 2, 4, 2, 0, 93, 0, 8, 4, 8, 0, 5, 0, 0, 3,
      
        0, 0, 0, 3, 0, 0, 2, 2, 2, 5, 0, 8, 8, 8, 5, 0, 2, 2, 4, 2, 2, 0, 8, 8, 4, 8, // 21
      
        8, 0, 47, 0, 47, 0, 48, 0, 48, 0, 5, 0, 0, 1, 0, 1, 0, 5, 0, 56, 0, 20, 0, 1, 0, 1,
       
        0, 9, 0, 57, 0, 20, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 1, 1, 71, 0, 20, 20, 0, 1, 1, 72,
      
        0, 20, 20, 0, 6, 5, 0, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 0, 7, 0, 0, 93, 2, 2, 2, 2, // 24
      
        93, 2, 2, 2, 2, 48, 0, 20, 20, 0, 75, 2, 2, 2, 2, 75, 2, 2, 2, 2, 75, 8, 8, 8, 8, 74,
      
        0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0,
      
        0, 8, 0, 8, 0, 5, 0, 0, 0, 2, 0, 2, 0, 5, 0, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 1, // 27
       
        1, 5, 0, 1, 1, 9, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 47, 0, 0, 0, 2,
       
        4, 8, 4, 0, 16, 0, 20, 0, 17, 0, 20, 0, 1, 1, 5, 9, 0, 0, 7, 0, 0, 1, 0, 5, 0, 1,
       
        0, 9, 0, 0, 0, 16, 0, 20, 0, 17, 0, 20, 0, 16, 0, 20, 20, 17, 0, 20, 20, 47, 0, 80, 80, 80, // 30
       
        80, 80, 0, 1, 1, 5, 0, 0, 0, 0, 1, 1, 5, 0, 71, 0, 0, 1, 1, 9, 0, 72, 0, 0, 1, 2,
      
        1, 8, 0, 5, 0, 55, 0, 56, 0, 55, 0, 56, 0, 20, 0, 14, 0, 0, 14, 0, 0, 14, 0, 0, 2, 0,
      
        93, 0, 8, 0, 0, 1, 1, 5, 5, 0, 2, 4, 2, 0, 14, 0, 0, 8, 4, 8, 0, 14, 0, 0, 47, 0, // 33
    
        1, 9, 76, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 2, 8, 2, 5, 0, 0, 0,
       
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 36
       
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty =  PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
