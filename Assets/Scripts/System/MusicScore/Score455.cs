using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score455 : MonoBehaviour
{
    //   15, 16 (BowTwist)    30, 31 (Sweep)    81, 82 (TriangleTown)    61 (Uni-H_Verital)    62 (Uni-H_Hortizontal)
    //   55, 56 (CurveClosedParttern)     18, 20, 19 (FixedHeartPack)    91, 94, 92 (FixedAirAttack)
    //   40, 41 (ArrowTool)    71 (MultipleHitStar)    88 (Eight)    47 (2-KeyTap)    44 (House)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 0, 2, 0, 8, 0, 8, 0, 1, 0, 71, 0, 91, 0, 0, 2, 2, 0, 8, 0, 8, 0, 1, 0, 5,

        0, 71, 0, 92, 0, 0, 88, 0, 0, 0, 20, 0, 94, 0, 20, 0, 94, 5, 0, 0, 1, 0, 5, 0, 1, 0,

        99, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 3
  
        55, 0, 0, 55, 0, 0, 56, 0, 0, 56, 0, 0, 88, 0, 20, 0, 20, 0, 5, 0, 1, 1, 0, 30, 0, 20,

        0, 31, 0, 20, 0, 0, 1, 4, 0, 1, 6, 0, 81, 0, 0, 82, 0, 0, 0, 47, 0, 0, 2, 2, 0, 5,

        0, 0, 8, 8, 0, 5, 0, 7, 0, 0, 0, 1, 0, 2, 0, 5, 0, 1, 0, 8, 0, 5, 0, 30, 0, 0, // 6
   
        30, 0, 0, 0, 31, 0, 0, 31, 0, 0, 0, 7, 0, 0, 1, 0, 2, 5, 0, 1, 0, 8, 5, 0, 30, 0,

        0, 0, 30, 0, 0, 31, 0, 0, 31, 0, 0, 0, 5, 0, 47, 0, 93, 0, 93, 0, 0, 1, 1, 0, 4, 0,

        1, 1, 0, 6, 0, 1, 1, 0, 5, 0, 1, 1, 0, 99, 0, 47, 47, 0, 93, 0, 93, 0, 0, 0, 81, 0, // 9
   
        0, 0, 56, 0, 0, 82, 0, 0, 0, 55, 0, 0, 1, 1, 0, 99, 0, 0, 3, 0, 0, 77, 0, 0, 3, 0,

        0, 0, 0, 2, 0, 4, 0, 8, 0, 4, 0, 1, 0, 1, 0, 5, 0, 0, 0, 2, 2, 0, 4, 0, 8, 0,

        8, 0, 5, 5, 0, 47, 47, 0, 56, 0, 55, 0, 56, 0, 55, 0, 0, 1, 0, 5, 0, 1, 0, 99, 0, 0, // 12
    
        77, 0, 0, 77, 0, 0, 0, 1, 5, 0, 93, 0, 1, 9, 0, 0, 3, 0, 0, 77, 0, 0, 3, 0, 0, 2,

        0, 8, 0, 5, 0, 0, 2, 8, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0,

        0, 1, 0, 5, 0, 0, 7, 0, 0, 1, 1, 0, 55, 20, 0, 56, 0, 20, 0, 5, 47, 0, 0, 0, 88, 0, // 15
    
        0, 0, 0, 30, 0, 20, 0, 31, 0, 20, 0, 47, 0, 0, 1, 2, 0, 1, 8, 0, 5, 0, 47, 0, 5, 0,

        47, 0, 18, 94, 0, 19, 94, 0, 0, 94, 18, 0, 94, 19, 0, 0, 1, 1, 0, 6, 0, 47, 0, 94, 0, 47,

        0, 0, 94, 0, 0, 0, 88, 0, 0, 0, 94, 0, 1, 2, 0, 93, 0, 1, 8, 0, 93, 0, 5, 0, 0, 0, // 18
    
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 55, 91, 0, 56, 92, 0, 0, 0, 0, 0, 0,

        0, 1, 0, 5, 0, 1, 0, 99, 0, 30, 0, 20, 31, 0, 94, 81, 0, 20, 82, 0, 20, 0, 47, 47, 0, 94,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  // 21
    };

    private int[] score_database2 =
    {
        0,

        0, 1, 1, 5, 0, 55, 18, 0, 56, 19, 0, 1, 1, 99, 0, 0, 55, 91, 0, 56, 92, 0, 61, 20, 0, 62,
   
        20, 0, 6, 99, 0, 0, 30, 0, 20, 0, 31, 0, 94, 0, 30, 19, 20, 18, 0, 0, 1, 1, 5, 0, 1, 1,
   
        99, 0, 6, 0, 0, 0, 0, 0, 0, 81, 0, 0, 82, 0, 0, 1, 1, 5, 0, 1, 1, 99, 0, 6, 0, 0, // 3
  
        55, 18, 0, 94, 56, 19, 0, 94, 0, 40, 0, 0, 41, 0, 94, 0, 1, 1, 5, 0, 1, 1, 99, 0, 30, 0,
  
        0, 31, 18, 20, 19, 0, 1, 2, 4, 0, 1, 8, 4, 0, 40, 0, 18, 41, 0, 19, 0, 5, 99, 5, 0, 93,
  
        0, 0, 5, 99, 5, 0, 93, 0, 0, 0, 0, 1, 2, 2, 0, 5, 5, 5, 0, 1, 8, 8, 0, 5, 5, 5, // 6
   
        0, 61, 0, 0, 62, 0, 0, 61, 20, 0, 62, 20, 0, 0, 1, 2, 4, 0, 5, 5, 5, 0, 1, 8, 4, 0,
    
        5, 5, 5, 0, 31, 0, 0, 30, 19, 20, 18, 0, 5, 5, 99, 0, 71, 0, 91, 0, 0, 1, 5, 4, 0, 93,
    
        1, 5, 99, 0, 93, 0, 81, 20, 18, 0, 82, 20, 19, 0, 5, 99, 5, 0, 71, 0, 92, 0, 0, 0, 88, 0, // 9
   
        0, 0, 20, 20, 20, 0, 4, 2, 0, 4, 8, 0, 1, 5, 0, 99, 0, 0, 3, 0, 0, 77, 0, 0, 3, 0,
   
        0, 0, 0, 1, 0, 5, 0, 93, 0, 1, 0, 99, 0, 93, 0, 47, 0, 0, 0, 1, 1, 0, 5, 0, 93, 0,
   
        93, 0, 5, 47, 0, 55, 20, 0, 56, 20, 0, 55, 91, 0, 56, 92, 0, 1, 1, 5, 0, 1, 1, 99, 0, 0, // 12
    
        3, 0, 0, 77, 0, 0, 0, 1, 2, 5, 0, 1, 8, 5, 0, 0, 3, 0, 0, 77, 0, 0, 3, 0, 0, 93,
    
        0, 93, 0, 47, 0, 0, 2, 8, 2, 0, 5, 99, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0,
   
        0, 5, 99, 5, 0, 0, 3, 0, 0, 1, 1, 5, 0, 55, 20, 19, 56, 20, 18, 0, 47, 0, 0, 0, 88, 0, // 15
    
        20, 0, 0, 88, 0, 20, 20, 0, 1, 1, 5, 99, 0, 0, 93, 2, 4, 0, 93, 8, 4, 0, 30, 0, 94, 0,
    
        31, 0, 94, 0, 0, 15, 18, 0, 0, 16, 19, 0, 0, 47, 0, 0, 1, 1, 5, 6, 0, 18, 47, 19, 47, 0,
    
        5, 99, 5, 0, 0, 0, 88, 0, 20, 0, 94, 0, 1, 2, 5, 0, 93, 0, 1, 8, 5, 0, 99, 0, 0, 0, // 18
    
        3, 0, 0, 0, 77, 0, 0, 0, 5, 0, 0, 44, 0, 0, 0, 1, 5, 6, 0, 99, 0, 0, 0, 0, 0, 0,
    
        0, 1, 1, 5, 0, 93, 0, 1, 1, 99, 0, 55, 18, 0, 56, 92, 0, 47, 1, 5, 0, 47, 1, 99, 0, 71,
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  // 21
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
