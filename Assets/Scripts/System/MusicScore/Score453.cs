using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score453 : MonoBehaviour
{
    //   103, 53, 104 (Circle)    101, 14, 102 (Ribbon)    18, 20, 19 (FixedHeartPack)
    //   32 (EnemyStopper)    80 (BoomStopStar)    81, 82 (CombineStarPick)    71 (MultipleHitStar)
    //   46 (6-Key)    21 (TapWithAirAttack)    30, 31 (Sweep)    94 (FixedAirAttack)
    //   100 (JumpAcrossTheOtherSide)    201 (RushingStar)    48 (4-KeyTap)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 101, 0, 0, 14, 0, 0, 102, 0, 0, 14, 0, 0, 101, 0, 0, 5, 0, 5, 0, 30, 0, 0, 31, 0, 0,

        30, 0, 0, 20, 0, 5, 0, 0, 101, 0, 20, 14, 0, 102, 0, 94, 14, 0, 0, 101, 0, 0, 5, 0, 5, 0,

        30, 0, 94, 31, 0, 0, 30, 0, 94, 0, 20, 20, 0, 5, 9, 0, 0, 0, 0, 1, 1, 0, 80, 0, 46, 46, // 3
   
        0, 1, 1, 0, 5, 0, 1, 1, 0, 14, 0, 20, 0, 14, 0, 94, 0, 1, 1, 0, 80, 0, 5, 9, 0, 0,

        46, 0, 46, 0, 80, 0, 80, 0, 1, 5, 0, 1, 9, 0, 30, 0, 0, 31, 0, 0, 102, 0, 20, 101, 0, 94,

        0, 5, 0, 0, 1, 5, 0, 9, 71, 0, 80, 81, 0, 80, 82, 0, 46, 46, 0, 1, 5, 0, 1, 9, 0, 100, // 6 
   
        0, 1, 9, 0, 71, 0, 71, 0, 46, 100, 0, 0, 71, 81, 0, 71, 82, 0, 80, 46, 0, 80, 46, 0, 1, 1,

        0, 5, 0, 46, 46, 0, 1, 5, 0, 48, 0, 48, 0, 0, 8, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 8, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 8, 0, // 9
   
        0, 5, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 5, 0, 9, 0, 0, 0, 8, 0, 8, 0, 0, 0, 7,

        0, 7, 0, 0, 1, 2, 0, 5, 0, 1, 8, 0, 9, 0, 93, 0, 93, 0, 93, 0, 1, 1, 0, 32, 32, 0,

        5, 0, 103, 53, 0, 104, 53, 0, 20, 18, 0, 20, 19, 0, 101, 0, 53, 0, 102, 0, 20, 0, 5, 0, 20, 0, // 12
   
        9, 0, 0, 2, 2, 0, 8, 8, 0, 46, 0, 48, 7, 0, 0, 1, 1, 0, 5, 0, 0, 1, 1, 0, 9, 0,

        0, 100, 46, 0, 46, 100, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 80, 0, 46, 46, 0, 9, 0,

        1, 1, 0, 21, 0, 2, 0, 2, 0, 8, 0, 8, 0, 0, 100, 0, 100, 0, 0, 0, 7, 0, 0, 0, 3, 0, // 15
  
        0, 0, 30, 0, 20, 0, 31, 18, 0, 19, 30, 0, 94, 0, 100, 46, 0, 48, 100, 0, 1, 5, 0, 1, 9, 0,

        0, 3, 2, 0, 3, 8, 0, 0, 81, 0, 82, 0, 46, 46, 0, 81, 0, 82, 0, 46, 100, 0, 48, 0, 48, 0,

        1, 1, 0, 5, 0, 9, 0, 0, 0, 93, 0, 2, 0, 0, 93, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, // 18
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 14, 0, 102,

        0, 103, 0, 53, 0, 104, 0, 20, 20, 0, 80, 0, 30, 0, 20, 0, 31, 0, 94, 0, 30, 19, 0, 18, 31, 0,

        20, 20, 0, 5, 100, 0, 80, 100, 0, 46, 100, 0, 48, 46, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 1, 1, 5, 0, 1, 1, 9, 0, 101, 53, 102, 53, 101, 0, 20, 20, 5, 0, 1, 2, 4, 0, 1, 8, 4,
   
        0, 1, 5, 1, 5, 9, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 102, 53, 101, 53, 102, 53, 101, 0, 20, 20,
   
        5, 0, 1, 2, 6, 0, 1, 8, 6, 0, 1, 5, 1, 5, 9, 0, 0, 0, 0, 1, 32, 5, 0, 81, 80, 82, // 3
   
        0, 1, 1, 5, 0, 1, 1, 9, 0, 101, 14, 102, 0, 103, 53, 104, 0, 20, 20, 0, 1, 5, 1, 9, 0, 0,
   
        1, 32, 9, 0, 82, 80, 81, 0, 1, 1, 5, 0, 1, 1, 9, 0, 101, 53, 102, 0, 101, 20, 53, 20, 102, 0,
   
        0, 5, 0, 0, 71, 0, 20, 20, 71, 0, 81, 80, 81, 80, 71, 0, 20, 20, 0, 1, 1, 5, 0, 1, 1, 9, // 6 
   
        0, 71, 20, 81, 71, 20, 82, 20, 0, 80, 0, 0, 71, 18, 71, 19, 0, 82, 80, 82, 80, 0, 20, 20, 0, 1,
  
        1, 5, 0, 1, 1, 9, 0, 32, 5, 32, 5, 9, 0, 0, 93, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 3,
  
        0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 80, 0, 0, 80, 0, 0, 0, 1, 1, 5, 0, 0, 0, 0, 93, 0, // 9
   
        0, 5, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 80, 0, 80, 0, 0, 0, 1, 1, 9, 0, 0, 0, 93,
  
        0, 93, 0, 0, 1, 0, 5, 0, 0, 1, 0, 9, 0, 0, 3, 0, 93, 0, 3, 0, 1, 32, 5, 0, 32, 1,
   
        9, 0, 101, 53, 102, 53, 101, 0, 20, 81, 0, 20, 82, 0, 102, 53, 101, 53, 102, 0, 1, 1, 5, 0, 1, 1, // 12
   
        9, 0, 0, 2, 8, 93, 0, 5, 5, 93, 0, 46, 21, 0, 0, 30, 0, 0, 31, 0, 0, 30, 19, 20, 18, 31,
  
        18, 94, 19, 0, 100, 0, 0, 1, 80, 0, 101, 0, 94, 102, 0, 94, 81, 80, 82, 80, 0, 101, 18, 53, 94, 0,
  
        102, 19, 53, 94, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 201, 7, 80, 0, 0, 0, 3, 0, 0, 0, 3, 0, // 15
  
        0, 0, 1, 32, 5, 9, 0, 32, 1, 5, 9, 0, 81, 82, 100, 0, 30, 0, 94, 31, 0, 94, 0, 46, 80, 0,
    
        0, 81, 48, 0, 82, 48, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 48, 81, 48, 82, 48, 0, 1, 32, 5, 0,
    
        1, 32, 9, 0, 46, 21, 0, 0, 0, 8, 0, 8, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, // 18
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 94, 0, 53, 94,
   
        0, 101, 94, 0, 102, 94, 0, 80, 0, 48, 0, 80, 0, 48, 0, 2, 4, 8, 46, 0, 1, 1, 5, 0, 1, 1,
    
        9, 0, 0, 81, 100, 0, 82, 100, 0, 80, 81, 80, 82, 46, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
