using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score480 : MonoBehaviour
{
    //    18, 20, 19 (FixedHeartPack)   
    //    30, 31 (Sweep)     32 (Enemy_Stopper)     34 (PonyDiamond)    40 (SplitBomb)       45 [109, 110, 111, 112] (4-Key)      60 (Circle2)
    //    71, 70 (ItemStrikeWithItem3)     72, 73 (QuickPickUpItem)     74 (SplitBombWithItem3)     75 (QuickDodgeWithItem3)      76 (MultipleStarHit)
    //    80 [115, 116] (BoomStopStar)      88 (Eight)        91, 94, 92 (FixedAirAttack)      96, 97 (FixedAttack)
    //    100 (JumpAcrossTheOtherSide)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 2, 2, 100, 8, 8, 0, 80, 80, 0, 100, 2, 100, 8, 0, 80, 80,

        94, 0, 76, 94, 96, 0, 76, 94, 97, 97, 0, 0, 32, 32, 80, 0, 32, 32, 80, 0, 76, 0, 76, 0, 30, 0,

        30, 0, 31, 0, 31, 0, 0, 0, 94, 80, 20, 0, 0, 0, 1, 0, 71, 1, 0, 71, 18, 0, 111, 112, 116, 0, // 3
  
        7, 80, 0, 0, 88, 0, 20, 0, 60, 0, 0, 0, 80, 0, 80, 0, 0, 109, 110, 109, 110, 80, 112, 111, 112, 111,

        80, 0, 93, 32, 80, 0, 7, 7, 0, 109, 80, 0, 112, 80, 0, 109, 80, 112, 80, 0, 7, 7, 0, 5, 0, 71,

        5, 0, 71, 5, 0, 111, 112, 116, 0, 0, 93, 0, 93, 0, 0, 2, 0, 71, 8, 0, 71, 0, 109, 80, 112, 0, // 6
  
        0, 0, 93, 0, 109, 110, 111, 112, 73, 18, 18, 91, 0, 100, 1, 0, 100, 1, 0, 88, 0, 0, 0, 94, 0, 0,

        0, 0, 30, 19, 20, 18, 31, 18, 20, 19, 0, 80, 80, 0, 115, 96, 0, 116, 97, 0, 2, 2, 71, 8, 70, 8,

        74, 0, 0, 0, 0, 30, 0, 19, 30, 0, 0, 31, 0, 18, 31, 0, 0, 0, 111, 80, 0, 115, 96, 20, 97, 0, // 9
  
        2, 2, 75, 8, 75, 80, 0, 0, 0, 0, 93, 2, 2, 2, 93, 8, 8, 8, 40, 2, 2, 2, 80, 0, 3, 0,

        2, 0, 3, 0, 8, 0, 75, 80, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 80, 0, 34, 18, 20, 19,

        0, 34, 18, 20, 19, 0, 109, 110, 111, 109, 110, 112, 0, 80, 80, 0, 94, 0, 0, 0, 0, 0, 18, 20, 18, 20, // 12
  
        109, 0, 18, 94, 19, 18, 94, 111, 0, 80, 31, 20, 31, 0, 94, 0, 80, 80, 0, 0, 7, 0, 3, 0, 0, 19,

        20, 19, 20, 112, 112, 0, 19, 94, 18, 19, 94, 110, 0, 80, 30, 0, 30, 0, 94, 0, 80, 80, 0, 0, 7, 7,

        0, 0, 18, 80, 19, 80, 0, 94, 111, 0, 100, 0, 100, 0, 80, 0, 5, 5, 9, 5, 5, 0, 1, 1, 5, 9, // 15
  
        0, 0, 40, 0, 0, 91, 80, 92, 80, 0, 94, 111, 0, 100, 2, 100, 8, 80, 0, 0, 1, 5, 1, 9, 0, 7,

        7, 3, 80, 0, 80, 94, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 1, 0, 5, 0, 1, 0, 80, 0, 0, 109, 110, 111, 112, 111, 110, 0, 1, 20, 1, 20, 0, 0, 0, // 18
  
        2, 2, 2, 0, 8, 8, 8, 0, 3, 2, 2, 3, 8, 8, 80, 0, 0, 0, 0, 0, 76, 0, 5, 9, 0, 76,

        0, 5, 9, 0, 100, 8, 100, 0, 100, 1, 100, 0, 80, 0, 0, 3, 0, 0, 20, 94, 0, 0, 1, 1, 20, 0,

        1, 1, 94, 0, 109, 20, 110, 94, 111, 116, 0, 0, 0, 2, 93, 0, 8, 93, 0, 1, 0, 93, 93, 93, 0, 0, // 21
   
        93, 2, 0, 93, 8, 0, 93, 93, 93, 5, 0, 0, 1, 2, 2, 2, 5, 8, 8, 8, 5, 0, 0, 3, 2, 2,

        2, 40, 8, 8, 8, 5, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 3, 0, 7, 0, 3, 0, 0, 1, 1, 5,

        0, 1, 1, 9, 0, 3, 0, 7, 0, 3, 0, 4, 5, 5, 0, 1, 1, 1, 9, 0, 0, 3, 0, 0, 7, 0, // 24
  
        0, 3, 0, 0, 80, 0, 0, 60, 0, 0, 0, 88, 0, 0, 0, 20, 20, 94, 0, 0, 0, 80, 80, 0, 0, 0,

        0, 0, 115, 115, 0, 0, 0, 0, 0, 0, 116, 116, 0, 0, 0, 0, 0, 80, 0, 80, 0, 0, 0, 31, 0, 7,

        31, 0, 18, 0, 30, 0, 7, 30, 0, 19, 0, 1, 1, 5, 1, 1, 9, 100, 2, 100, 8, 100, 94, 0, 0, 0, // 27
  
        0, 88, 31, 0, 0, 88, 30, 0, 0, 0, 111, 112, 111, 80, 0, 72, 72, 0, 73, 73, 0, 20, 20, 94, 94, 0,

        0, 0, 0, 0, 0, 30, 0, 0, 72, 30, 0, 0, 72, 0, 116, 116, 20, 0, 0, 3, 0, 0, 3, 0, 0, 80,

        80, 0, 5, 5, 9, 0, 0, 93, 0, 0, 80, 80, 0, 18, 20, 19, 18, 20, 19, 73, 7, 0, 0, 0, 0, 34, // 30
  
        18, 18, 0, 19, 19, 0, 30, 0, 30, 0, 31, 0, 31, 0, 0, 19, 20, 18, 20, 19, 20, 20, 94, 0, 0, 0,

        0, 34, 88, 0, 18, 20, 19, 0, 31, 0, 31, 0, 30, 0, 30, 0, 0, 19, 20, 18, 20, 19, 20, 94, 0, 7,

        0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 33
  
        0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 80, 0, 0, 76, 0, 80, 0, 0, 76, 76, 94, 0, 0, 76, 76,
  
        94, 0, 1, 5, 9, 0, 1, 5, 9, 80, 0, 0, 96, 94, 97, 0, 94, 96, 94, 0, 97, 94, 96, 0, 94, 97,
  
        94, 0, 80, 0, 1, 1, 5, 1, 1, 80, 80, 0, 0, 0, 88, 18, 20, 19, 73, 88, 18, 20, 19, 73, 115, 0, // 3
  
        80, 116, 0, 0, 34, 0, 18, 0, 34, 0, 19, 0, 20, 20, 80, 0, 0, 88, 31, 18, 20, 88, 30, 19, 20, 0,
  
        115, 0, 80, 116, 94, 0, 7, 7, 0, 80, 115, 0, 80, 116, 94, 96, 96, 0, 93, 0, 7, 7, 0, 34, 31, 18,
  
        20, 30, 18, 20, 0, 94, 94, 80, 0, 0, 93, 0, 93, 0, 0, 34, 88, 18, 20, 19, 20, 0, 80, 109, 80, 0, // 6
  
        0, 0, 93, 0, 80, 115, 80, 34, 31, 18, 31, 7, 0, 34, 30, 19, 30, 7, 0, 60, 0, 0, 0, 80, 0, 0,
  
        0, 0, 32, 32, 100, 7, 115, 0, 32, 32, 100, 7, 116, 0, 5, 76, 0, 80, 80, 0, 3, 71, 0, 70, 0, 75,
   
        80, 0, 0, 0, 0, 31, 60, 0, 0, 0, 80, 0, 60, 0, 0, 0, 80, 0, 76, 94, 0, 100, 8, 8, 100, 8, // 9
  
        0, 71, 115, 70, 116, 74, 0, 0, 0, 0, 40, 112, 111, 110, 40, 109, 110, 111, 40, 112, 80, 80, 80, 0, 93, 0,
  
        71, 0, 93, 0, 70, 0, 45, 80, 0, 0, 0, 1, 1, 60, 30, 0, 0, 0, 0, 80, 7, 60, 31, 0, 0, 0,
  
        0, 80, 109, 110, 20, 112, 111, 94, 0, 18, 20, 19, 18, 94, 19, 7, 74, 0, 0, 0, 0, 0, 109, 110, 20, 111, // 12
  
        112, 0, 109, 110, 94, 111, 112, 80, 0, 72, 72, 19, 73, 73, 18, 0, 80, 115, 0, 0, 7, 0, 3, 0, 0, 109,
 
        18, 110, 94, 111, 19, 112, 0, 116, 111, 20, 110, 80, 0, 73, 73, 18, 72, 72, 19, 0, 80, 116, 0, 0, 7, 7,
  
        0, 0, 109, 91, 110, 94, 111, 92, 112, 0, 116, 116, 20, 115, 115, 0, 72, 72, 94, 73, 73, 0, 115, 80, 80, 115, // 15
  
        0, 0, 75, 0, 0, 112, 92, 111, 94, 110, 91, 109, 0, 100, 8, 80, 8, 100, 0, 0, 116, 80, 80, 116, 0, 7,
  
        7, 3, 1, 1, 1, 5, 0, 0, 75, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 9, 0, 0, 0, 1, 1, 5,
  
        0, 1, 1, 9, 0, 76, 7, 76, 7, 76, 7, 0, 45, 110, 109, 45, 111, 112, 0, 20, 20, 94, 94, 0, 0, 0, // 18
  
        96, 94, 97, 0, 0, 97, 94, 96, 0, 0, 75, 3, 75, 3, 80, 0, 0, 0, 0, 0, 80, 100, 1, 0, 100, 80,
   
        0, 80, 100, 5, 0, 100, 80, 0, 45, 115, 45, 116, 0, 0, 76, 20, 0, 0, 76, 20, 0, 0, 94, 96, 94, 0,

        94, 97, 94, 0, 45, 18, 45, 19, 45, 80, 0, 0, 0, 93, 93, 93, 93, 0, 93, 93, 93, 93, 0, 93, 93, 93, // 21
   
        93, 75, 0, 0, 93, 93, 93, 93, 7, 93, 93, 93, 93, 7, 93, 93, 93, 93, 75, 0, 0, 1, 8, 2, 93, 1,
  
        8, 2, 93, 1, 8, 2, 75, 0, 0, 93, 0, 93, 0, 3, 0, 93, 0, 3, 0, 93, 75, 0, 0, 1, 2, 8,
   
        40, 1, 2, 8, 40, 0, 80, 0, 75, 0, 20, 20, 94, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 100, 1, 100, // 24
  
        1, 100, 0, 80, 0, 0, 7, 0, 0, 3, 0, 0, 93, 0, 93, 0, 80, 0, 0, 0, 0, 5, 0, 0, 0, 0,
  
        5, 5, 0, 0, 0, 0, 5, 0, 0, 5, 0, 0, 5, 0, 0, 9, 0, 0, 0, 3, 0, 0, 0, 31, 18, 18,

        31, 18, 18, 0, 30, 19, 19, 30, 19, 19, 0, 115, 0, 100, 2, 8, 100, 1, 1, 100, 80, 80, 94, 0, 0, 0, // 27
  
        0, 88, 31, 0, 0, 88, 30, 0, 0, 0, 111, 112, 111, 80, 0, 72, 72, 0, 73, 73, 0, 20, 20, 94, 94, 0,

        0, 0, 0, 0, 0, 30, 0, 0, 72, 30, 0, 0, 72, 0, 116, 116, 20, 0, 0, 3, 0, 0, 93, 0, 0, 80,

        80, 0, 5, 5, 9, 0, 0, 93, 0, 0, 80, 80, 0, 18, 20, 19, 18, 20, 19, 73, 7, 0, 0, 0, 0, 34, // 30
  
        18, 18, 0, 19, 19, 0, 30, 0, 30, 0, 31, 0, 31, 0, 0, 19, 20, 18, 20, 19, 20, 20, 94, 0, 0, 0,

        0, 34, 88, 0, 18, 20, 19, 0, 31, 0, 31, 0, 30, 0, 30, 0, 0, 19, 20, 18, 20, 19, 20, 94, 0, 7,

        0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 33
  
        0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
