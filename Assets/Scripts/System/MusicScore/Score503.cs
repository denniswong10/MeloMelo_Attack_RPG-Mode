using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score503 : MonoBehaviour
{
    //       51, 52 (HalfArrow)      18 [101] [300, 301] Eight       62, 63 (DoubleCrestHeart)
    //       110, 80, 111 (BoomStopStar)       103, 104 (BowCurve)      47, 48 (RootDraw)
    //       53, 54 (SingleFishStar)     43, 44 (DobuleFishStar)      72, 73 (LightSlideItem)
    //       76 (MultipleHitStar)    100 (CenterHitStar)      94 (FixedAirAttack)       88, 89 (DoubleCombatMode)
    //       85, 86 [87] (RatingFog)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 0, 1, 5,

        0, 8, 8, 8, 0, 1, 9, 0, 87, 0, 0, 0, 80, 80, 0, 0, 2, 2, 8, 0, 5, 0, 8, 2, 2, 0,

        5, 5, 5, 0, 87, 0, 0, 0, 80, 80, 80, 0, 0, 2, 2, 2, 0, 1, 5, 0, 8, 8, 8, 0, 1, 5, // 3
  
        0, 1, 1, 9, 0, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 1, 2, 0, 1, 8, 0,

        1, 1, 5, 0, 0, 0, 72, 72, 0, 80, 0, 73, 73, 0, 80, 80, 0, 80, 0, 51, 0, 0, 0, 52, 0, 0,

        0, 94, 0, 0, 94, 0, 0, 0, 0, 0, 2, 4, 2, 0, 8, 4, 8, 0, 1, 1, 0, 5, 0, 5, 0, 76, // 6
 
        0, 5, 5, 5, 0, 9, 0, 2, 8, 0, 4, 0, 80, 80, 0, 0, 0, 73, 73, 0, 72, 72, 0, 110, 0, 80,

        0, 111, 0, 80, 0, 1, 1, 5, 0, 1, 1, 9, 0, 5, 4, 5, 0, 0, 0, 93, 0, 2, 2, 3, 0, 8,

        0, 8, 0, 93, 0, 8, 8, 3, 0, 2, 0, 2, 0, 1, 2, 5, 0, 1, 8, 5, 0, 0, 9, 0, 2, 93, // 9
  
        0, 8, 93, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 47, 0, 0, 48, 0, 0, 1, 0, 5, 0, 80, 80, 0,

        93, 2, 2, 0, 4, 0, 4, 0, 80, 0, 80, 0, 2, 4, 0, 8, 4, 0, 0, 93, 93, 0, 80, 0, 80, 0,

        1, 1, 5, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 7, 0, 3, 2, 2, 0, 3, 8, 8, 0, 93, // 12
  
        0, 93, 0, 2, 2, 0, 8, 0, 5, 0, 0, 0, 300, 0, 0, 101, 0, 0, 301, 0, 0, 0, 80, 80, 0, 0,

        1, 1, 0, 5, 0, 2, 0, 8, 0, 47, 0, 48, 0, 47, 0, 48, 0, 0, 80, 80, 0, 0, 110, 80, 0, 111,

        80, 0, 111, 80, 0, 110, 80, 0, 0, 2, 2, 5, 0, 8, 8, 5, 0, 9, 0, 0, 0, 3, 300, 0, 0, 101, // 15
  
        0, 301, 0, 0, 0, 80, 80, 80, 0, 100, 0, 100, 0, 0, 0, 3, 2, 2, 0, 93, 2, 2, 0, 3, 8, 8,

        0, 93, 8, 8, 0, 5, 5, 0, 9, 0, 101, 0, 0, 0, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 0,

        4, 0, 80, 111, 0, 111, 80, 0, 0, 2, 0, 2, 0, 0, 8, 8, 8, 0, 0, 2, 0, 2, 0, 0, 80, 110, // 18
   
        0, 110, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 110, 80, 111, 80, 0, 54,
 
        72, 0, 43, 73, 0, 101, 0, 0, 4, 1, 1, 5, 0, 48, 0, 0, 111, 80, 110, 80, 0, 53, 73, 0, 44, 72,
 
        0, 101, 0, 0, 6, 1, 1, 5, 0, 103, 0, 3, 0, 104, 0, 3, 0, 5, 0, 0, 76, 76, 0, 80, 0, 76, // 3
  
        76, 0, 80, 100, 0, 0, 0, 0, 93, 0, 0, 0, 3, 0, 0, 0, 93, 0, 0, 0, 2, 2, 4, 0, 8, 8,
  
        4, 0, 5, 0, 0, 0, 51, 0, 62, 0, 52, 0, 63, 0, 0, 94, 0, 94, 0, 76, 5, 0, 76, 9, 0, 80,
  
        110, 80, 111, 0, 18, 0, 0, 0, 0, 0, 1, 1, 80, 0, 88, 0, 1, 1, 5, 5, 0, 76, 0, 76, 0, 3, // 6
 
        0, 1, 1, 80, 0, 89, 0, 1, 1, 9, 5, 0, 80, 80, 0, 0, 0, 72, 0, 53, 73, 0, 44, 0, 80, 80,
 
        0, 1, 1, 80, 0, 88, 0, 1, 1, 80, 0, 89, 0, 111, 80, 110, 0, 0, 0, 2, 0, 8, 8, 8, 0, 2,
 
        0, 93, 0, 2, 0, 8, 8, 8, 0, 3, 0, 0, 1, 1, 5, 0, 0, 1, 1, 9, 0, 0, 3, 0, 2, 4, // 9
  
        0, 8, 4, 0, 0, 87, 0, 0, 80, 80, 0, 1, 1, 5, 0, 1, 1, 9, 0, 87, 0, 0, 110, 80, 111, 0,
  
        2, 4, 8, 4, 0, 0, 85, 0, 0, 80, 80, 0, 1, 5, 0, 1, 9, 0, 0, 86, 0, 0, 110, 80, 111, 0,
  
        111, 80, 110, 0, 0, 2, 4, 8, 4, 0, 0, 3, 0, 0, 7, 93, 0, 0, 7, 93, 0, 0, 3, 0, 0, 5, // 12
  
        0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 0, 0, 100, 80, 80, 110, 80, 111, 0, 47, 0, 101, 0, 48, 0, 0,
  
        1, 5, 1, 9, 0, 0, 3, 0, 0, 88, 88, 0, 80, 0, 89, 89, 0, 0, 80, 80, 0, 0, 89, 89, 0, 111,
  
        80, 0, 88, 88, 0, 110, 80, 0, 0, 1, 1, 5, 9, 0, 1, 5, 1, 9, 0, 0, 0, 100, 80, 80, 111, 80, // 15
  
        110, 0, 47, 0, 101, 0, 48, 0, 0, 5, 5, 9, 0, 0, 0, 3, 0, 0, 80, 80, 0, 0, 3, 0, 0, 80,
  
        80, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 94, 0, 0, 0, 0, 3, 300, 0, 0, 0, 3, 301, 0, 0, 0,
   
        54, 72, 0, 43, 73, 0, 80, 80, 0, 0, 0, 3, 0, 0, 0, 93, 93, 0, 0, 2, 0, 0, 8, 0, 0, 80, // 18
   
        80, 80, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
