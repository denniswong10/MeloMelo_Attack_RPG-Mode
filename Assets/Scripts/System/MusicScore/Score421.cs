using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score421 : MonoBehaviour
{
    //   40, 42, 43 (MiniRect)    50, 51 (Shower)   11, 12, 13 (Number)   30, 31 (Sweep)   52, 121, 122 (Circle2)    41, 44, 45 (DiaRect)
    //   71 (MultipleHitStar)   91, 92, 94 (Fixed Attack)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 1, 0, 5, 0, 71, 0, 5, 0, 5, 0, 0, 1, 0, 9, 0, 71, 0, 5, 0, 5, 0, 9,

        5, 0, 0, 40, 0, 0, 41, 0, 0, 5, 0, 5, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 40, 0, 41,

        0, 9, 0, 5, 4, 0, 5, 9, 0, 0, 41, 0, 0, 41, 0, 0, 5, 0, 40, 0, 0, 40, 0, 0, 5, 0, // 3
  
        2, 2, 0, 8, 8, 0, 45, 0, 44, 0, 0, 5, 0, 0, 30, 0, 0, 0, 1, 0, 5, 0, 31, 0, 0, 0,

        1, 0, 5, 0, 41, 0, 40, 0, 0, 71, 0, 5, 0, 71, 0, 9, 5, 0, 121, 0, 0, 0, 122, 0, 0, 0,

        1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 4, 0, 2, 2, 0, // 6
  
        4, 0, 8, 8, 0, 4, 0, 2, 0, 2, 0, 5, 0, 8, 0, 8, 0, 5, 0, 4, 0, 2, 2, 0, 4, 0,

        8, 8, 0, 4, 0, 2, 8, 0, 4, 0, 2, 8, 0, 4, 0, 41, 0, 0, 1, 1, 0, 5, 0, 5, 0, 0,

        1, 1, 0, 71, 0, 5, 0, 1, 1, 0, 5, 9, 0, 40, 0, 1, 0, 1, 0, 41, 0, 5, 0, 9, 0, 40, // 9
  
        0, 1, 0, 9, 0, 41, 0, 1, 0, 5, 9, 0, 41, 0, 40, 0, 0, 5, 0, 2, 2, 0, 5, 0, 30, 0,

        0, 0, 31, 0, 0, 30, 0, 0, 31, 0, 0, 0, 43, 0, 40, 0, 42, 0, 44, 0, 41, 0, 45, 0, 0, 1,

        5, 0, 1, 9, 0, 41, 0, 41, 0, 41, 0, 40, 0, 40, 0, 40, 0, 0, 30, 0, 0, 31, 0, 0, 30, 0, // 12 
  
        0, 0, 1, 5, 0, 1, 9, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0,

        0, 0, 12, 0, 0, 11, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 9, 0, 0, 121, 0, 0, 0, 122, 0, // 15
  
        0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        2, 0, 8, 0, 1, 1, 0, 5, 0, 0, 40, 0, 0, 2, 2, 0, 8, 8, 0, 5, 5, 0, 41, 0, 0, 5,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 18
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 30, 0, 0, 0,

        31, 0, 0, 0, 1, 1, 0, 5, 40, 0, 41, 0, 40, 0, 0, 5, 4, 0, 0, 1, 5, 0, 1, 4, 0, 1,

        5, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 5, 0, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 2, 0, 2, // 21
  
        0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0,

        0, 1, 0, 1, 0, 9, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 1, 0, 5, 0, 5,

        0, 9, 0, 42, 0, 43, 0, 30, 0, 0, 31, 0, 0, 0, 5, 0, 9, 0, 0, 1, 1, 0, 5, 5, 0, 9, // 24
  
        0, 5, 5, 0, 1, 1, 0, 30, 0, 0, 31, 0, 0, 0, 1, 2, 0, 1, 8, 0, 4, 5, 0, 0, 0, 0,

        0, 0, 0, 0, 1, 0, 71, 9, 0, 5, 0, 0, 1, 0, 71, 9, 0, 71, 0, 0, 121, 0, 0, 0, 122, 0,

        0, 0, 0, 5, 0, 0, 0, 1, 5, 0, 1, 9, 0, 2, 2, 0, 8, 8, 0, 5, 0, 71, 0, 71, 0, 9, // 27
   
        0, 1, 5, 0, 1, 9, 0, 1, 1, 0, 5, 9, 0, 0, 2, 0, 3, 0, 8, 0, 3, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 1, 0, 5, 0, 40, 0, 42, 0, 43, 0, 0, 1, 0, 9, 0, 40, 0, 43, 0, 42, 0, 0,
   
        91, 0, 0, 1, 1, 5, 5, 0, 0, 1, 1, 5, 0, 42, 0, 40, 0, 0, 1, 1, 9, 0, 43, 0, 40, 0,
  
        2, 8, 0, 1, 4, 0, 1, 5, 0, 0, 31, 0, 0, 94, 91, 94, 92, 0, 44, 0, 41, 0, 5, 0, 0, 30, // 3
  
        0, 0, 94, 92, 94, 91, 0, 45, 0, 41, 0, 9, 0, 0, 30, 0, 0, 31, 0, 0, 43, 40, 42, 0, 44, 41,
  
        45, 0, 0, 1, 5, 1, 5, 0, 40, 0, 41, 0, 1, 5, 1, 5, 9, 0, 121, 0, 0, 0, 122, 0, 0, 0,
  
        92, 0, 0, 94, 0, 0, 0, 71, 0, 5, 5, 9, 0, 71, 0, 2, 0, 71, 0, 8, 0, 5, 0, 0, 71, 0, // 6
  
        71, 0, 1, 1, 5, 0, 71, 71, 0, 5, 4, 5, 0, 71, 0, 71, 0, 5, 6, 5, 0, 93, 0, 1, 1, 5,
  
        5, 0, 4, 0, 1, 1, 71, 0, 1, 1, 71, 0, 5, 5, 4, 94, 0, 0, 41, 0, 1, 1, 5, 0, 40, 0,
  
        0, 1, 1, 5, 0, 93, 0, 42, 0, 1, 5, 9, 0, 43, 0, 1, 5, 9, 0, 44, 0, 1, 5, 9, 0, 45, // 9
  
        0, 71, 0, 9, 0, 71, 0, 9, 0, 71, 9, 71, 9, 0, 1, 1, 5, 5, 0, 1, 1, 5, 9, 0, 40, 0,
   
        42, 0, 41, 0, 43, 0, 31, 0, 0, 30, 0, 0, 41, 0, 43, 0, 40, 0, 42, 0, 30, 0, 0, 31, 0, 0,
   
        40, 0, 44, 0, 41, 0, 45, 0, 31, 0, 0, 30, 0, 0, 41, 0, 45, 0, 40, 0, 44, 0, 30, 0, 0, 31, // 12 
  
        0, 0, 0, 71, 9, 0, 71, 9, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
  
        0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 13, 0, 0, 0, 0, 0,
  
        0, 0, 12, 0, 0, 11, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 1, 9, 0, 0, 121, 0, 0, 0, 122, 0, // 15
  
        0, 0, 0, 2, 4, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        1, 0, 5, 0, 1, 1, 0, 5, 9, 0, 40, 0, 0, 1, 0, 9, 0, 1, 1, 0, 42, 0, 45, 0, 0, 5,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 71, 0, 0, // 18
  
        1, 0, 71, 0, 0, 4, 0, 71, 0, 71, 0, 91, 71, 0, 92, 71, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 41, 0, 0, 40, 0, 0, 1, 1,
  
        5, 5, 0, 44, 0, 0, 43, 0, 0, 1, 1, 1, 5, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 93, 0, 93, // 21
  
        0, 0, 0, 93, 0, 0, 0, 5, 0, 0, 0, 93, 0, 0, 0, 9, 0, 0, 0, 93, 0, 93, 0, 5, 0, 0,
  
        0, 93, 0, 93, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 40, 0, 0, 1, 5,
  
        1, 9, 0, 40, 0, 42, 0, 9, 0, 0, 41, 0, 0, 1, 5, 1, 9, 0, 41, 0, 45, 0, 0, 50, 0, 0, // 24
  
        0, 0, 94, 92, 94, 91, 0, 51, 0, 0, 0, 0, 94, 91, 94, 92, 0, 1, 5, 1, 5, 9, 0, 0, 75, 0,
   
        0, 74, 0, 0, 1, 1, 5, 5, 0, 40, 0, 0, 1, 1, 5, 5, 0, 41, 0, 0, 121, 0, 0, 0, 122, 0,
   
        0, 0, 0, 92, 0, 0, 0, 71, 0, 9, 0, 71, 0, 9, 0, 40, 0, 0, 71, 9, 0, 71, 9, 0, 1, 1, // 27
   
        5, 0, 1, 1, 9, 0, 7, 0, 1, 5, 1, 9, 0, 0, 71, 71, 71, 0, 71, 71, 71, 7, 0, 0, 0, 0,
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database3 =
    {
        0,

        0, 0, 0, 0, 1, 1, 5, 0, 40, 0, 40, 0, 9, 5, 5, 0, 71, 0, 1, 1, 5, 5, 0, 42, 0, 43,

        0, 9, 5, 5, 0, 71, 0, 71, 0, 1, 5, 1, 0, 9, 0, 40, 0, 42, 0, 40, 0, 43, 0, 9, 5, 5,

        71, 0, 4, 0, 71, 0, 4, 4, 0, 0, 31, 0, 0, 30, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 30, // 3
  
        0, 0, 31, 0, 0, 0, 5, 6, 5, 0, 5, 9, 5, 0, 30, 0, 0, 30, 0, 0, 31, 0, 0, 31, 0, 0,

        42, 0, 40, 0, 43, 0, 1, 1, 0, 5, 0, 1, 1, 0, 5, 1, 9, 0, 121, 0, 0, 0, 122, 0, 0, 0,

        0, 1, 1, 4, 0, 0, 0, 71, 0, 2, 4, 2, 0, 5, 0, 5, 0, 71, 0, 8, 4, 8, 0, 71, 0, 94, // 6
  
        71, 0, 94, 0, 1, 1, 71, 0, 71, 0, 71, 0, 5, 5, 0, 5, 0, 71, 94, 5, 0, 2, 2, 4, 0, 8,

        8, 4, 0, 1, 1, 71, 0, 1, 1, 71, 0, 9, 5, 5, 0, 94, 5, 5, 5, 0, 42, 0, 40, 0, 42, 0,

        40, 0, 0, 5, 0, 9, 0, 5, 0, 71, 0, 71, 0, 1, 5, 1, 9, 0, 43, 0, 40, 0, 43, 0, 40, 0, // 9
  
        0, 1, 5, 9, 0, 71, 0, 1, 5, 9, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 7, 0, 3, 0, 7,

        42, 40, 43, 0, 44, 41, 45, 0, 43, 40, 42, 0, 45, 41, 44, 0, 0, 1, 1, 5, 5, 0, 0, 42, 40, 43,

        44, 41, 45, 0, 45, 41, 44, 43, 40, 42, 0, 0, 1, 1, 5, 9, 0, 40, 0, 41, 0, 30, 0, 0, 31, 0, // 12 
  
        0, 0, 5, 9, 5, 0, 71, 94, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0,

        0, 0, 93, 0, 2, 0, 2, 0, 2, 0, 93, 0, 8, 0, 8, 0, 8, 0, 93, 0, 13, 0, 0, 0, 0, 0,

        0, 0, 12, 0, 0, 11, 0, 0, 0, 0, 3, 1, 5, 0, 3, 1, 5, 9, 0, 0, 76, 0, 121, 0, 0, 122, // 15
  
        0, 0, 0, 0, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        71, 0, 71, 0, 9, 5, 5, 0, 42, 0, 43, 0, 1, 1, 0, 4, 0, 1, 1, 0, 6, 0, 71, 0, 9, 5,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, // 18
  
        1, 1, 71, 0, 4, 0, 71, 0, 4, 0, 5, 9, 5, 0, 71, 0, 94, 5, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 40, 0, 0, 5,

        5, 4, 0, 5, 5, 9, 0, 41, 0, 0, 76, 0, 76, 0, 0, 93, 0, 0, 0, 2, 2, 5, 0, 0, 0, 93, // 21
  
        0, 0, 0, 8, 8, 5, 0, 0, 0, 3, 0, 93, 0, 0, 1, 1, 5, 0, 0, 3, 0, 7, 0, 3, 0, 0,

        1, 1, 5, 1, 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 74, 0, 1, 1, 5, 0, 42,

        41, 43, 0, 45, 40, 44, 0, 94, 0, 0, 75, 0, 74, 0, 1, 1, 9, 0, 42, 43, 0, 45, 44, 0, 40, 41, // 24
  
        0, 0, 94, 92, 94, 91, 0, 52, 0, 0, 0, 0, 94, 91, 94, 92, 0, 1, 1, 5, 0, 1, 1, 9, 0, 7,

        0, 3, 0, 0, 1, 4, 5, 0, 40, 0, 0, 1, 6, 5, 0, 41, 0, 0, 71, 0, 71, 0, 122, 0, 0, 121,

        0, 0, 0, 7, 0, 7, 0, 1, 4, 9, 0, 41, 0, 0, 1, 6, 9, 0, 40, 0, 71, 94, 71, 94, 0, 1, // 27
   
        1, 5, 0, 1, 1, 9, 0, 2, 2, 8, 8, 5, 0, 0, 93, 93, 0, 93, 93, 0, 93, 93, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium", score_database3, "Medium");
    }
}
