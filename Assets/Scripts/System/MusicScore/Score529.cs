using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score529 : MonoBehaviour
{
    //      95, 97 (FixedAttack)      90 (ItemEqualSplitHill)      101, 14, 102 (Ribbon)     18 (RomeTwo)
    //      103, 104 (BowCurve)     91, 94, 92 (FixedAirAttack)      35, 36 (WeridZ)      46 (6-Keys)
    //      110, 80, 111 (BoomStopStar)      100 (PatternAirAttackWithBomb)     40 (SplitBomb)
    //      116 (WideItem3)      81, 82 (FixedItem3)       107, 108 (FlowerTorch)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 2, 2, 2, 0, 5, 0, 5, 0, 9, 0, 0, 7, 0, 0, 8, 8, 8, 0, 5, 0, 5, 0, 9, 0,

        0, 7, 0, 7, 0, 1, 1, 0, 5, 0, 5, 0, 100, 0, 0, 100, 0, 0, 8, 8, 4, 0, 2, 2, 4, 0,

        1, 1, 5, 0, 1, 1, 9, 0, 46, 0, 46, 0, 0, 81, 0, 0, 81, 0, 0, 81, 0, 0, 82, 0, 0, 82, // 3
   
        0, 0, 82, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 80, 0, 0, 81, 0, 0, 94, 0, 0, 82,

        0, 0, 94, 0, 0, 81, 0, 0, 1, 5, 0, 80, 0, 1, 9, 0, 80, 14, 0, 0, 0, 2, 0, 0, 4, 0,

        0, 8, 0, 0, 4, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 0, 1, 0, 5, 0, 1, 0, 9, 0, 14, // 6
   
        0, 94, 0, 110, 0, 81, 0, 0, 80, 0, 116, 0, 0, 111, 0, 82, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0,

        18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 93, 0, 0, 93, 0, 0, 2, 0, 2,

        0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 2, 0, 0, 8, 0, 0, // 9
  
        0, 116, 0, 0, 2, 0, 2, 0, 8, 8, 0, 2, 0, 2, 0, 0, 4, 0, 0, 4, 0, 0, 1, 5, 0, 80,

        0, 80, 0, 116, 0, 0, 101, 0, 14, 0, 102, 0, 0, 0, 7, 0, 7, 0, 0, 1, 9, 0, 80, 0, 80, 0,

        116, 116, 0, 0, 102, 0, 14, 0, 101, 0, 7, 0, 0, 3, 0, 2, 2, 0, 8, 8, 0, 1, 5, 0, 0, 7, // 12
  
        0, 0, 2, 4, 2, 0, 8, 4, 8, 0, 80, 0, 90, 0, 90, 0, 95, 95, 0, 90, 0, 97, 97, 0, 7, 0,

        3, 0, 7, 0, 40, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80,

        0, 80, 0, 0, 100, 2, 0, 8, 8, 8, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 9, 0, 0, 2, 2, // 15
  
        40, 0, 8, 8, 40, 0, 1, 0, 5, 0, 9, 0, 7, 0, 100, 0, 2, 4, 5, 0, 8, 4, 5, 0, 103, 0,

        0, 104, 0, 0, 0, 103, 0, 0, 104, 0, 0, 0, 0, 40, 0, 0, 0, 40, 0, 0, 18, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 14, 0, 102, // 18
  
        0, 107, 0, 0, 107, 0, 0, 0, 102, 0, 14, 0, 101, 0, 108, 0, 0, 108, 0, 0, 0, 1, 0, 0, 5, 0,

        0, 1, 0, 0, 9, 0, 0, 80, 0, 0, 110, 0, 0, 80, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 100, 0, 5, 5, 0, 0, 0, 100, 5, 0, 9, 0, 9, 0, // 21
  
        0, 0, 5, 9, 5, 0, 100, 0, 100, 80, 0, 0, 0, 80, 0, 80, 90, 80, 0, 0, 0, 1, 5, 0, 1, 9,

        0, 0, 0, 3, 0, 2, 0, 0, 40, 0, 8, 0, 0, 7, 0, 1, 2, 5, 0, 1, 8, 5, 0, 0, 93, 0,

        0, 93, 0, 0, 101, 0, 14, 0, 94, 0, 0, 102, 0, 14, 0, 94, 0, 0, 1, 2, 5, 0, 1, 8, 5, 0, // 24
  
        0, 93, 0, 0, 93, 0, 0, 0, 0, 5, 9, 5, 0, 9, 5, 9, 0, 5, 9, 5, 0, 0, 2, 4, 2, 0,

        8, 4, 8, 0, 93, 2, 0, 5, 0, 93, 8, 0, 5, 0, 1, 0, 5, 0, 5, 80, 0, 1, 0, 5, 0, 5,

        80, 0, 101, 14, 102, 0, 94, 94, 0, 0, 0, 102, 14, 101, 0, 94, 94, 0, 1, 9, 5, 0, 1, 5, 9, 0, // 27
   
        14, 0, 14, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 80, 0, 0, 7, 0, 3, 0, 7, 0,

        40, 0, 2, 2, 4, 0, 8, 8, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 110, 94, 0, 111, 94,

        0, 0, 0, 0, 1, 1, 1, 5, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 30
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 2, 0, 8, 0, 2, 0, 1, 1, 5, 0, 1, 1, 9, 0, 8, 0,
   
        2, 0, 8, 7, 0, 100, 1, 1, 0, 5, 1, 1, 0, 2, 0, 93, 0, 8, 0, 93, 0, 100, 1, 5, 0, 9,
   
        1, 5, 0, 5, 80, 0, 0, 1, 1, 5, 5, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, // 3
   
        0, 0, 3, 0, 0, 5, 5, 80, 0, 0, 93, 0, 0, 1, 1, 9, 5, 0, 0, 3, 0, 0, 40, 0, 0, 3,
   
        0, 0, 40, 0, 0, 3, 0, 0, 5, 9, 5, 80, 0, 0, 93, 0, 0, 18, 0, 0, 0, 95, 0, 95, 0, 95,
   
        0, 90, 0, 97, 0, 97, 0, 97, 0, 90, 0, 95, 0, 90, 0, 97, 0, 46, 46, 0, 80, 0, 14, 0, 0, 1, // 6
   
        1, 5, 0, 2, 0, 2, 0, 1, 1, 9, 0, 8, 0, 8, 0, 35, 0, 91, 0, 36, 0, 92, 0, 102, 0, 14,
   
        0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 2, 0, 2,
   
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 93, 0, 0, 8, 8, 0, // 9
  
        0, 93, 0, 0, 8, 8, 8, 0, 2, 2, 0, 8, 8, 8, 0, 3, 2, 0, 3, 8, 0, 0, 1, 1, 5, 0,
   
        104, 0, 0, 0, 0, 95, 90, 97, 101, 0, 91, 91, 0, 0, 3, 0, 40, 0, 0, 1, 1, 9, 0, 103, 0, 0,
  
        0, 0, 97, 90, 95, 102, 0, 92, 92, 0, 80, 0, 2, 4, 0, 2, 8, 4, 0, 1, 1, 5, 9, 0, 0, 93, // 12
  
        0, 0, 2, 2, 2, 80, 0, 8, 8, 8, 80, 0, 1, 5, 1, 9, 0, 1, 9, 1, 5, 0, 2, 0, 8, 0,
  
        2, 0, 4, 0, 4, 0, 46, 46, 80, 46, 46, 0, 103, 0, 104, 0, 0, 94, 103, 0, 104, 0, 0, 94, 0, 1,
  
        1, 5, 0, 1, 1, 9, 0, 1, 1, 5, 0, 0, 1, 1, 0, 3, 0, 5, 5, 0, 3, 0, 0, 1, 1, 0, // 15
  
        40, 0, 5, 5, 0, 40, 0, 0, 1, 5, 5, 0, 93, 0, 93, 0, 1, 9, 5, 0, 93, 0, 93, 0, 101, 0,
  
        14, 0, 102, 0, 0, 101, 0, 14, 0, 102, 0, 0, 92, 80, 0, 91, 80, 0, 94, 94, 0, 18, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 81, 0, 81, // 18
  
        0, 81, 81, 0, 107, 0, 0, 0, 82, 0, 82, 0, 82, 0, 82, 82, 0, 108, 0, 0, 0, 81, 0, 0, 46, 0,
  
        0, 82, 0, 0, 80, 0, 0, 81, 0, 0, 94, 0, 0, 82, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 100, 0, 80, 0, 0, 0, 100, 0, 80, 80, 0, 0, 0, 100, 90, 0, 80, 0, 80, 0, // 21
  
        0, 0, 100, 46, 100, 0, 46, 0, 80, 80, 0, 0, 0, 100, 0, 80, 100, 90, 0, 0, 0, 46, 100, 0, 46, 100,
  
        0, 0, 0, 93, 0, 2, 2, 0, 93, 0, 8, 8, 0, 0, 0, 6, 2, 2, 5, 0, 6, 8, 8, 5, 0, 116,
   
        0, 116, 0, 0, 2, 2, 2, 0, 8, 8, 8, 0, 116, 0, 116, 0, 0, 0, 100, 2, 2, 5, 0, 9, 8, 8, // 24
  
        5, 0, 14, 91, 94, 92, 0, 0, 0, 110, 110, 0, 80, 80, 0, 111, 111, 0, 0, 93, 0, 0, 1, 1, 5, 0,
   
        1, 1, 9, 0, 2, 4, 0, 8, 0, 8, 4, 0, 2, 0, 80, 0, 103, 0, 103, 0, 0, 104, 0, 104, 0, 0,
   
        0, 0, 94, 94, 110, 94, 94, 80, 0, 0, 0, 94, 94, 111, 94, 94, 80, 0, 1, 5, 1, 9, 0, 2, 4, 8, // 27
   
        0, 0, 1, 0, 5, 0, 1, 0, 5, 0, 0, 9, 0, 1, 0, 5, 0, 9, 0, 0, 3, 0, 40, 0, 3, 0,
   
        40, 0, 5, 9, 5, 0, 80, 92, 0, 90, 95, 95, 0, 0, 80, 91, 0, 90, 97, 97, 0, 7, 7, 0, 18, 0,
   
        0, 0, 0, 0, 2, 2, 8, 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 30
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
