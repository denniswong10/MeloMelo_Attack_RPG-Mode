using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score475 : MonoBehaviour
{
    //    34 (PonyDiamond)     52 (Circle2)     110, 111 (ItemModifyPattern)     50 [101] (Diamond)
    //    14, 15 (CurveLeft/Right)     70 (ItemStrikeWithItem3)     80 (BoomStopStar)
    //    11, 12, 13 (Numbers)      22, 23 (Bow_Twist_v2)
    //    18, 20, 19 (FixedHeartPack)         94 (FixedAirAttack)     40 (SplitBomb)

    //    25 (Item3Bar)

    public int difficulty;

    private int[] score_database2 =
    {
        0,

        0, 0, 34, 52, 0, 0, 94, 0, 0, 0, 2, 2, 2, 50, 0, 8, 8, 8, 50, 0, 1, 0, 5, 0, 1, 0,
  
        99, 0, 50, 8, 8, 0, 50, 2, 2, 0, 94, 0, 0, 0, 1, 1, 2, 50, 0, 1, 1, 8, 50, 0, 4, 0,
  
        2, 0, 4, 0, 8, 0, 50, 2, 8, 0, 50, 8, 2, 0, 94, 0, 0, 0, 14, 0, 20, 15, 0, 20, 14, 0, // 3
  
        0, 20, 94, 0, 14, 0, 20, 15, 0, 94, 0, 14, 0, 20, 20, 94, 0, 80, 0, 80, 0, 14, 0, 20, 15, 0,
  
        20, 14, 0, 20, 20, 94, 0, 0, 1, 1, 5, 1, 1, 5, 0, 99, 1, 1, 5, 1, 1, 5, 0, 0, 80, 0,
  
        101, 0, 70, 0, 101, 0, 70, 0, 0, 101, 0, 70, 222, 0, 0, 70, 0, 101, 0, 0, 70, 0, 101, 0, 0, 70, // 6
  
        0, 20, 0, 0, 80, 80, 0, 110, 110, 110, 50, 0, 111, 111, 111, 50, 0, 4, 0, 50, 4, 5, 0, 50, 4, 5,
  
        0, 80, 80, 0, 94, 0, 0, 11, 0, 18, 0, 0, 12, 0, 20, 20, 0, 13, 0, 20, 20, 19, 0, 222, 99, 50,
  
        0, 222, 99, 50, 0, 3, 80, 0, 94, 0, 0, 22, 0, 0, 0, 0, 0, 25, 25, 25, 0, 25, 25, 25, 0, 23, // 9
  
        0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 25, 25, 25, 0, 22, 19, 0, 0, 0, 0, 0, 25, 25, 25, 0, 25,
  
        25, 25, 0, 23, 18, 0, 0, 0, 0, 0, 25, 25, 0, 25, 25, 0, 20, 94, 0, 0, 70, 0, 40, 0, 80, 0,
  
        0, 0, 0, 2, 8, 50, 19, 0, 0, 3, 0, 40, 0, 0, 8, 2, 50, 18, 0, 0, 3, 0, 40, 0, 0, 0, // 12
   
        0, 0, 0, 0, 1, 2, 8, 0, 5, 50, 0, 0, 3, 0, 40, 40, 0, 0, 1, 8, 2, 0, 5, 50, 0, 0,
  
        3, 0, 40, 0, 0, 80, 80, 0, 18, 80, 19, 0, 0, 80, 80, 0, 19, 80, 18, 0, 70, 0, 0, 1, 1, 5,
  
        0, 110, 111, 0, 5, 0, 111, 110, 0, 99, 0, 0, 70, 0, 0, 111, 110, 0, 80, 0, 110, 111, 0, 80, 0, 1, // 15
  
        1, 5, 99, 0, 0, 22, 94, 0, 0, 0, 26, 25, 26, 0, 26, 25, 26, 0, 0, 23, 94, 0, 0, 0, 25, 26,
  
        25, 0, 25, 26, 25, 94, 0, 0, 22, 40, 0, 0, 0, 26, 25, 26, 0, 26, 25, 26, 0, 0, 1, 5, 1, 99,
  
        0, 0, 25, 25, 0, 26, 26, 0, 25, 25, 0, 70, 0, 70, 0, 22, 0, 17, 0, 23, 0, 17, 0, 25, 25, 0, // 18
  
        23, 0, 17, 0, 22, 0, 17, 0, 26, 26, 0, 70, 0, 70, 0, 50, 18, 0, 8, 8, 50, 19, 0, 8, 8, 0,
  
        80, 80, 50, 0, 0, 1, 99, 1, 5, 0, 0, 3, 0, 40, 0, 0, 1, 1, 5, 0, 1, 1, 99, 0, 80, 0,
  
        1, 1, 5, 0, 1, 1, 99, 0, 80, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database =
    {
        0,

        0, 0, 34, 0, 0, 20, 0, 20, 0, 0, 1, 0, 0, 50, 0, 1, 1, 0, 50, 0, 0, 8, 8, 0, 1, 0,

        8, 8, 0, 50, 0, 0, 50, 0, 0, 20, 20, 0, 0, 0, 1, 1, 0, 50, 0, 1, 5, 0, 50, 0, 18, 0,

        0, 8, 8, 8, 8, 0, 1, 5, 0, 50, 0, 1, 9, 0, 50, 0, 0, 0, 1, 0, 4, 0, 1, 0, 6, 0, // 3
  
        2, 8, 2, 0, 1, 1, 0, 4, 0, 1, 1, 0, 6, 0, 2, 8, 2, 8, 0, 80, 0, 1, 1, 5, 0, 1,

        1, 9, 0, 80, 0, 80, 0, 0, 14, 0, 15, 0, 14, 0, 15, 0, 20, 0, 20, 20, 0, 94, 0, 0, 40, 0,

        0, 0, 2, 0, 2, 0, 4, 0, 0, 70, 0, 0, 70, 0, 0, 8, 0, 8, 0, 4, 0, 0, 70, 0, 70, 0, // 6
  
        70, 0, 0, 80, 0, 80, 0, 2, 8, 0, 5, 5, 0, 1, 1, 0, 50, 4, 0, 50, 4, 0, 1, 1, 5, 9,

        0, 1, 6, 0, 80, 0, 0, 2, 2, 2, 0, 110, 110, 110, 0, 8, 8, 8, 0, 111, 111, 111, 0, 80, 0, 50,

        0, 94, 8, 8, 0, 94, 110, 111, 110, 0, 0, 1, 5, 80, 0, 1, 9, 80, 0, 14, 0, 15, 0, 20, 0, 5, // 9
  
        1, 80, 0, 9, 1, 80, 0, 15, 0, 14, 0, 18, 94, 0, 19, 94, 0, 0, 40, 0, 0, 1, 5, 5, 0, 9,

        5, 5, 0, 1, 80, 5, 0, 1, 80, 9, 0, 14, 0, 15, 0, 20, 20, 94, 0, 0, 80, 0, 80, 0, 80, 0,

        0, 0, 0, 1, 1, 5, 5, 0, 0, 2, 0, 8, 0, 0, 1, 5, 1, 9, 0, 0, 8, 0, 2, 0, 0, 0, // 12
   
        0, 0, 0, 0, 2, 4, 2, 0, 8, 5, 0, 0, 80, 0, 1, 5, 0, 0, 8, 4, 8, 0, 5, 80, 0, 0,

        93, 0, 93, 0, 0, 5, 5, 0, 2, 8, 4, 0, 0, 93, 93, 0, 5, 5, 9, 0, 80, 0, 0, 2, 4, 5,

        0, 93, 0, 5, 5, 0, 8, 4, 5, 0, 80, 0, 80, 0, 0, 93, 0, 1, 5, 0, 1, 9, 0, 80, 0, 8, // 15
  
        2, 8, 2, 0, 0, 22, 0, 0, 0, 0, 80, 0, 80, 0, 1, 1, 4, 0, 0, 23, 0, 0, 0, 0, 80, 0,

        80, 0, 1, 5, 1, 9, 0, 0, 22, 0, 0, 0, 0, 80, 0, 80, 0, 5, 4, 5, 0, 0, 2, 8, 2, 99,

        0, 0, 93, 2, 0, 93, 8, 0, 1, 5, 0, 70, 0, 1, 9, 0, 40, 7, 0, 23, 0, 0, 0, 0, 80, 80, // 18
  
        14, 0, 19, 15, 0, 18, 14, 0, 19, 15, 0, 18, 14, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 70, 0, 70,

        0, 50, 20, 0, 0, 2, 4, 2, 5, 0, 70, 0, 70, 0, 0, 8, 4, 8, 5, 0, 70, 0, 40, 0, 70, 0,

        2, 2, 4, 0, 8, 8, 4, 0, 94, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
