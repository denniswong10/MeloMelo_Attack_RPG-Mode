using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score419 : MonoBehaviour
{ 
    // 105, 33, 106 (M)   18, 19  16, 17 (Hammer)   107, 108   111, 112   113, 114   115, 116 (Mod/Hammer)
    // 14 (Ribbon)  101, 102 (Mod/Ribbon)   51, 52 (HalfArrow)   20 (FixedHeart)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 33, 0, 0, 33, 0, 0, 0,

        101, 0, 102, 0, 0, 17, 0, 0, 0, 1, 0, 5, 0, 33, 0, 0, 0, 1, 0, 9, 0, 0, 33, 0, 0, 0,

        5, 0, 5, 0, 5, 0, 9, 0, 0, 17, 0, 0, 17, 0, 0, 5, 0, 5, 0, 5, 0, 14, 0, 0, 16, 0, // 3
  
        0, 16, 0, 0, 5, 0, 5, 0, 5, 0, 14, 0, 0, 18, 0, 0, 18, 0, 0, 5, 0, 5, 0, 5, 0, 14,

        0, 0, 19, 0, 0, 19, 0, 0, 5, 0, 5, 0, 5, 0, 101, 0, 102, 0, 0, 20, 0, 0, 8, 0, 0, 4,

        0, 20, 0, 8, 0, 8, 0, 101, 0, 14, 0, 102, 0, 1, 0, 5, 0, 1, 0, 9, 0, 101, 0, 101, 0, 14, // 6
  
        0, 14, 0, 102, 0, 102, 0, 20, 0, 20, 0, 20, 0, 5, 0, 20, 0, 9, 0, 0, 93, 0, 0, 5, 0, 0,

        5, 0, 0, 9, 0, 0, 2, 0, 2, 0, 5, 0, 0, 93, 0, 0, 5, 0, 0, 5, 0, 0, 9, 0, 0, 8,

        0, 8, 0, 5, 0, 0, 16, 0, 0, 17, 0, 0, 20, 0, 20, 0, 17, 0, 0, 16, 0, 0, 5, 0, 0, 9, // 9
   
        0, 0, 0, 0, 51, 0, 0, 0, 0, 5, 0, 5, 0, 20, 0, 20, 0, 1, 0, 0, 9, 0, 52, 0, 0, 0,

        0, 5, 0, 5, 0, 20, 0, 20, 0, 1, 0, 0, 9, 0, 0, 76, 0, 1, 0, 76, 0, 1, 0, 5, 0, 76,

        0, 20, 0, 101, 0, 0, 14, 0, 0, 102, 0, 0, 105, 0, 0, 33, 0, 0, 106, 0, 0, 5, 0, 5, 0, 14, // 12
  
        0, 14, 0, 0, 33, 0, 33, 0, 0, 5, 0, 5, 0, 93, 0, 93, 0, 93, 0, 1, 0, 0, 9, 0, 0, 16,

        0, 0, 17, 0, 0, 1, 0, 76, 0, 0, 1, 0, 0, 5, 0, 5, 0, 0, 76, 0, 76, 0, 5, 0, 5, 0,

        76, 0, 76, 0, 5, 0, 9, 0, 101, 0, 102, 0, 14, 0, 105, 0, 0, 106, 0, 20, 0, 0, 0, 3, 0, 0, // 15
  
        7, 0, 0, 3, 0, 5, 0, 5, 0, 76, 0, 76, 0, 0, 1, 0, 1, 0, 5, 0, 5, 0, 3, 0, 0, 7,

        0, 0, 33, 0, 0, 33, 0, 0, 76, 0, 5, 0, 0, 9, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 5,

        0, 93, 0, 0, 1, 0, 0, 9, 0, 0, 1, 0, 0, 9, 0, 93, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, // 18
  
        0, 9, 0, 93, 0, 0, 101, 0, 102, 0, 14, 0, 20, 0, 105, 0, 106, 0, 33, 0, 20, 0, 0, 115, 0, 116,

        0, 17, 0, 20, 0, 20, 0, 14, 0, 0, 0, 0, 5, 0, 5, 0, 76, 0, 5, 0, 5, 0, 76, 0, 1, 0,

        9, 0, 76, 0, 76, 0, 101, 0, 102, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 105, 0, 0, 33, 0, 0, 106, 0, 0, 33, 0, 0, 105, 0, 0, 33, 0, 0, 106, 0, 0, 33, 0, 0, 0,
  
        1, 1, 5, 0, 0, 105, 0, 0, 0, 1, 5, 5, 0, 106, 0, 0, 0, 1, 5, 9, 0, 0, 33, 0, 0, 0,
  
        0, 1, 1, 5, 5, 0, 9, 0, 0, 107, 0, 0, 17, 0, 0, 108, 0, 0, 17, 0, 0, 1, 5, 0, 111, 0, // 3
  
        0, 18, 0, 0, 112, 0, 0, 18, 0, 0, 1, 5, 0, 113, 0, 0, 19, 0, 0, 114, 0, 0, 19, 0, 0, 1,
   
        5, 0, 115, 0, 0, 16, 0, 0, 116, 0, 0, 16, 0, 0, 1, 5, 9, 0, 0, 101, 0, 0, 1, 1, 6, 0,
   
        102, 0, 0, 1, 1, 6, 0, 101, 0, 14, 0, 102, 0, 1, 1, 6, 0, 1, 1, 9, 0, 14, 0, 9, 0, 14, // 6
  
        0, 9, 0, 14, 0, 9, 0, 14, 0, 9, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 1, 2, 2, 5, 0, 5,
  
        0, 107, 0, 0, 112, 0, 0, 1, 1, 5, 9, 0, 0, 1, 8, 8, 5, 0, 5, 0, 111, 0, 0, 108, 0, 0,

        1, 1, 5, 9, 0, 0, 14, 0, 0, 14, 0, 0, 1, 5, 1, 5, 0, 6, 0, 2, 2, 4, 8, 8, 0, 5, // 9
   
        0, 0, 0, 0, 51, 0, 0, 0, 1, 1, 5, 5, 0, 4, 2, 4, 8, 0, 1, 1, 9, 0, 52, 0, 0, 0,

        1, 5, 1, 5, 0, 4, 8, 4, 8, 0, 1, 1, 9, 0, 0, 2, 4, 0, 8, 4, 0, 1, 1, 5, 0, 0,

        115, 0, 0, 116, 0, 0, 1, 1, 5, 5, 0, 113, 0, 0, 114, 0, 0, 1, 1, 5, 9, 0, 105, 0, 0, 106, // 12
  
        0, 0, 107, 0, 0, 108, 0, 0, 1, 1, 5, 5, 0, 111, 0, 0, 112, 0, 0, 1, 1, 5, 9, 0, 0, 106,

        0, 0, 105, 0, 0, 1, 1, 1, 5, 0, 1, 1, 1, 9, 0, 5, 0, 0, 2, 4, 2, 0, 5, 9, 5, 0,
  
        8, 4, 8, 0, 5, 9, 5, 0, 16, 0, 0, 18, 0, 0, 17, 0, 0, 19, 0, 9, 0, 0, 0, 1, 1, 5, // 15
  
        5, 0, 14, 0, 0, 1, 1, 5, 76, 0, 76, 0, 14, 0, 0, 1, 1, 76, 0, 9, 0, 0, 3, 0, 0, 7,
  
        0, 0, 107, 0, 0, 18, 0, 0, 108, 0, 0, 1, 1, 5, 0, 0, 111, 0, 0, 19, 0, 0, 112, 0, 0, 1,
  
        1, 5, 0, 0, 113, 0, 0, 16, 0, 0, 114, 0, 0, 1, 1, 5, 0, 0, 115, 0, 0, 17, 0, 0, 106, 0, // 18
  
        0, 1, 1, 5, 0, 0, 1, 5, 1, 9, 0, 105, 0, 0, 106, 0, 0, 1, 5, 1, 9, 0, 0, 106, 0, 20,
   
        105, 0, 20, 0, 1, 1, 1, 1, 5, 0, 0, 0, 76, 0, 1, 1, 76, 0, 5, 9, 5, 0, 76, 0, 1, 1,
   
        76, 0, 5, 9, 5, 0, 1, 1, 6, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database3 =
    {
        0,

        0, 1, 5, 1, 5, 0, 33, 0, 0, 1, 9, 1, 9, 0, 33, 0, 0, 1, 5, 1, 9, 0, 106, 0, 1, 5,

        1, 9, 0, 105, 0, 0, 2, 4, 2, 0, 1, 6, 0, 8, 4, 8, 0, 1, 9, 0, 33, 20, 106, 20, 33, 20,

        0, 105, 20, 33, 20, 105, 20, 0, 0, 3, 2, 2, 4, 8, 8, 3, 0, 1, 1, 5, 5, 0, 9, 0, 101, 14, // 3
  
        102, 0, 102, 14, 101, 0, 20, 18, 0, 20, 0, 5, 0, 3, 2, 2, 4, 8, 8, 3, 0, 1, 5, 1, 9, 0,

        18, 0, 19, 0, 18, 0, 0, 1, 1, 5, 5, 0, 1, 5, 1, 9, 0, 0, 3, 16, 0, 0, 17, 0, 0, 20,

        20, 0, 5, 5, 9, 5, 0, 18, 0, 19, 0, 18, 0, 4, 2, 5, 0, 4, 8, 5, 0, 101, 14, 102, 0, 102, // 6
  
        14, 101, 0, 0, 1, 1, 5, 1, 1, 9, 0, 3, 0, 5, 0, 3, 0, 9, 0, 0, 51, 0, 0, 52, 0, 0,

        0, 1, 1, 5, 5, 0, 76, 0, 76, 0, 9, 0, 0, 51, 0, 0, 52, 0, 0, 0, 1, 5, 1, 5, 0, 76,

        0, 9, 1, 1, 5, 0, 101, 0, 20, 0, 102, 0, 20, 0, 1, 5, 9, 0, 1, 5, 6, 0, 2, 4, 8, 5, // 9
   
        0, 0, 0, 51, 0, 102, 0, 0, 2, 4, 8, 5, 0, 1, 5, 1, 5, 0, 76, 9, 0, 52, 0, 101, 0, 0,

        8, 4, 2, 5, 0, 1, 9, 1, 9, 0, 76, 76, 0, 4, 5, 5, 0, 6, 5, 5, 0, 9, 5, 5, 0, 0,

        101, 14, 102, 14, 101, 0, 0, 76, 9, 76, 9, 0, 113, 0, 114, 0, 16, 0, 16, 0, 0, 76, 0, 76, 0, 76, // 12
  
        0, 0, 102, 14, 101, 14, 102, 0, 0, 76, 9, 5, 0, 76, 9, 5, 5, 0, 2, 4, 8, 0, 9, 0, 0, 105,

        0, 106, 0, 0, 1, 1, 0, 5, 9, 0, 14, 0, 1, 1, 0, 9, 5, 0, 101, 102, 0, 1, 5, 1, 5, 0,

        76, 76, 0, 5, 5, 9, 0, 5, 5, 9, 0, 2, 4, 0, 8, 4, 0, 20, 20, 20, 0, 0, 0, 5, 5, 5, // 15
  
        5, 0, 76, 0, 101, 14, 102, 101, 14, 102, 0, 20, 20, 20, 0, 5, 9, 5, 9, 0, 76, 76, 0, 76, 76, 0,

        9, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 1, 1, 5, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 0, 1,

        1, 9, 0, 0, 16, 0, 0, 4, 0, 0, 17, 0, 0, 4, 1, 5, 0, 0, 18, 0, 0, 4, 0, 0, 19, 0, // 18
  
        0, 4, 1, 5, 0, 0, 76, 76, 0, 9, 0, 0, 101, 14, 102, 0, 0, 76, 5, 76, 9, 0, 0, 102, 14, 101,

        0, 0, 76, 9, 76, 5, 0, 20, 20, 0, 0, 0, 3, 2, 2, 2, 3, 5, 5, 5, 3, 76, 0, 76, 0, 76,

        3, 0, 1, 5, 4, 0, 1, 5, 6, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium", score_database3, "Medium");
    }
}
