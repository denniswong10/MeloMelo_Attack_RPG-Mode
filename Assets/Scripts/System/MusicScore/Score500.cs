using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score500 : MonoBehaviour
{
    //     41, 42 (SingleFishHit)      43, 44 (DoubleFishHit)      18, 20, 19 (FixedHeartPack)
    //     91, 94, 92 (FixedAirAttack)      47, 48 (Root_Draw)     52 [123] Cirlce_2
    //     62, 63 (LightSlideItem)    101, 14, 102 (Ribbon)      82, 81 (CombinePickStar)      100 (JumpAcrossOtherSide)
    //     80 (BoomStopStar)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 93, 0, 0, 2, 2, 0, 0, 93, 0, 0, 93, 0, 0,

        8, 8, 0, 0, 1, 0, 5, 0, 0, 2, 2, 0, 8, 8, 0, 5, 0, 14, 0, 0, 0, 0, 0, 1, 0, 5, // 3
   
        0, 1, 0, 5, 0, 8, 8, 0, 5, 0, 0, 133, 0, 0, 1, 0, 9, 0, 1, 0, 9, 0, 8, 8, 0, 14,

        0, 0, 977, 0, 0, 1, 2, 0, 5, 0, 1, 8, 0, 5, 0, 5, 0, 14, 0, 0, 20, 0, 0, 1, 1, 0,

        5, 5, 0, 80, 0, 80, 0, 62, 0, 62, 0, 0, 80, 0, 0, 0, 2, 1, 0, 5, 0, 5, 0, 0, 8, 1, // 6
  
        0, 5, 0, 5, 0, 0, 2, 4, 0, 14, 0, 0, 8, 4, 0, 1, 0, 5, 0, 1, 0, 9, 0, 0, 93, 0,

        0, 1, 6, 0, 1, 6, 0, 2, 8, 0, 80, 14, 0, 0, 0, 133, 0, 0, 133, 0, 0, 2, 2, 0, 5, 0,

        8, 8, 0, 5, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 8, 0, // 9
  
        8, 0, 0, 0, 977, 0, 0, 14, 0, 0, 4, 0, 4, 0, 14, 0, 0, 4, 0, 4, 0, 14, 0, 0, 9, 0,

        9, 0, 14, 0, 0, 9, 0, 9, 0, 2, 8, 0, 4, 1, 0, 8, 2, 0, 14, 0, 0, 94, 0, 0, 0, 82,

        0, 81, 0, 0, 82, 0, 81, 0, 14, 0, 0, 82, 0, 81, 0, 0, 82, 0, 81, 0, 14, 0, 0, 0, 2, 2, // 12
  
        0, 123, 0, 20, 0, 0, 977, 0, 0, 47, 0, 0, 48, 0, 0, 81, 0, 82, 0, 0, 81, 0, 82, 0, 14, 0,

        0, 20, 0, 0, 977, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 0, 0, 82, 0, 81, 0, 62,

        0, 62, 0, 82, 0, 81, 0, 63, 0, 63, 0, 80, 80, 0, 18, 20, 0, 19, 20, 0, 100, 0, 14, 0, 0, 977, // 15
   
        0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 80, 0, 80, 80, 0, 0, 0, 133, 0, 0, 133, 0,

        0, 14, 0, 18, 18, 0, 14, 0, 19, 19, 0, 80, 0, 80, 0, 0, 3, 0, 0, 1, 1, 0, 5, 5, 0, 9,

        0, 5, 5, 0, 93, 0, 93, 0, 93, 0, 5, 5, 0, 1, 0, 9, 5, 0, 14, 0, 0, 20, 123, 0, 0, 0, // 18
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 5, 0, 5, 0, 8, 8, 0, 5, 0,

        5, 0, 0, 133, 0, 977, 0, 0, 47, 0, 0, 20, 20, 0, 48, 0, 0, 20, 20, 0, 47, 0, 0, 94, 0, 48,

        0, 0, 94, 0, 2, 4, 0, 5, 0, 8, 4, 0, 5, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 8, 0, 0, 8, 2, 8, 0, 0, 2, 8, 8, 0, 0, 8,
   
        2, 2, 0, 0, 8, 2, 8, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, 0, 0, 0, 0, 0, 0, 0, 1, // 3
   
        2, 2, 5, 0, 1, 8, 8, 5, 0, 0, 93, 0, 0, 93, 0, 0, 6, 2, 2, 5, 0, 6, 8, 8, 5, 0,
  
        14, 0, 0, 0, 0, 1, 6, 5, 0, 2, 8, 2, 0, 6, 1, 5, 0, 8, 2, 8, 0, 0, 82, 81, 0, 100,
  
        2, 2, 5, 8, 8, 0, 80, 1, 1, 14, 0, 0, 94, 0, 0, 0, 1, 1, 5, 5, 0, 80, 18, 80, 0, 1, // 6
  
        4, 5, 14, 0, 0, 0, 1, 1, 5, 9, 0, 80, 19, 80, 0, 1, 4, 5, 14, 0, 0, 94, 0, 0, 2, 8,
  
        2, 0, 1, 1, 5, 0, 8, 2, 8, 0, 1, 1, 9, 0, 0, 93, 0, 0, 93, 0, 0, 1, 1, 5, 5, 0,
  
        1, 1, 5, 9, 0, 80, 14, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, // 9
  
        0, 93, 0, 93, 0, 0, 0, 1, 2, 8, 0, 5, 5, 0, 80, 0, 0, 0, 47, 0, 0, 18, 94, 19, 0, 48,
  
        0, 0, 19, 94, 18, 0, 47, 0, 20, 48, 0, 20, 0, 4, 2, 2, 0, 4, 8, 8, 0, 0, 977, 0, 0, 41,
  
        63, 0, 42, 42, 62, 0, 41, 41, 63, 0, 44, 44, 62, 0, 43, 43, 0, 80, 0, 1, 1, 5, 5, 0, 0, 82, // 12
  
        81, 100, 14, 0, 0, 977, 977, 0, 0, 123, 0, 0, 0, 0, 42, 62, 0, 41, 63, 0, 42, 0, 1, 1, 5, 9,
  
        0, 14, 0, 0, 94, 0, 0, 1, 2, 2, 3, 0, 1, 8, 8, 3, 0, 80, 0, 0, 0, 43, 63, 0, 44, 62,
  
        0, 43, 63, 0, 44, 62, 0, 43, 41, 63, 0, 44, 42, 62, 0, 43, 41, 0, 82, 81, 100, 0, 14, 0, 0, 977, // 15
   
        0, 0, 0, 47, 0, 0, 18, 94, 19, 0, 48, 0, 0, 19, 94, 18, 0, 14, 0, 0, 0, 93, 0, 0, 93, 0,
   
        0, 1, 1, 5, 5, 0, 2, 0, 1, 1, 9, 5, 0, 8, 0, 0, 3, 0, 0, 2, 2, 8, 0, 1, 0, 5,
   
        0, 1, 0, 9, 0, 8, 8, 2, 0, 1, 0, 5, 0, 1, 0, 9, 0, 80, 18, 80, 0, 80, 19, 80, 0, 0, // 18
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 0, 2, 0, 8, 0, 0, 1, 1,
  
        9, 0, 0, 8, 0, 2, 0, 0, 123, 0, 20, 0, 94, 0, 1, 1, 5, 0, 1, 1, 9, 0, 0, 2, 8, 2,
  
        0, 0, 123, 0, 94, 0, 20, 0, 0, 0, 93, 0, 0, 93, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
