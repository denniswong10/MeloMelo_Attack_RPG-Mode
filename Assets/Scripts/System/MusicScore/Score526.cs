using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score526 : MonoBehaviour
{
    //      300, 302, 301 [18] (Eight)      118, 119 (FixedAllHeartPack)     60, 61, 62 (FixedHeartPack)
    //      52 (Circle2)        91, 94, 92 (FixedAirAttack)      100 [121, 122] MultipleHitStar
    //      80 (BoomStopStar)      82, 83 (DoubleCombatWithStar)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 8, 0, 8, 0, 8, 0, 0,

        1, 2, 0, 1, 8, 0, 0, 4, 5, 0, 80, 0, 80, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 7, 8, 0,

        0, 80, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 5, 5, 0, 3, 0, 2, // 3
  
        3, 0, 8, 0, 1, 5, 0, 0, 1, 1, 0, 80, 80, 0, 1, 5, 0, 1, 9, 0, 80, 0, 80, 0, 0, 2,

        4, 4, 0, 8, 4, 4, 0, 302, 0, 60, 0, 302, 0, 62, 0, 0, 0, 3, 0, 7, 0, 3, 0, 1, 1, 0,

        9, 0, 0, 0, 2, 2, 0, 8, 0, 8, 0, 1, 0, 82, 0, 1, 0, 83, 0, 0, 4, 0, 4, 0, 4, 0, // 6
   
        1, 1, 0, 5, 5, 0, 80, 0, 0, 1, 0, 5, 5, 0, 4, 4, 0, 1, 1, 0, 5, 5, 0, 9, 9, 0,

        80, 0, 80, 0, 18, 0, 60, 0, 62, 0, 0, 0, 0, 0, 1, 1, 0, 80, 0, 1, 1, 0, 80, 0, 2, 2,

        0, 8, 8, 0, 4, 0, 4, 0, 5, 0, 5, 0, 1, 1, 0, 80, 0, 0, 0, 5, 5, 5, 0, 9, 0, 9, // 9
  
        0, 1, 1, 0, 5, 0, 1, 1, 0, 94, 0, 300, 0, 0, 302, 0, 0, 301, 0, 0, 61, 61, 61, 0, 5, 5,

        0, 5, 5, 0, 80, 0, 0, 80, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 2, 8, 0, 2, 8,

        0, 1, 0, 1, 0, 5, 5, 0, 9, 0, 0, 2, 2, 4, 0, 8, 8, 4, 0, 5, 0, 9, 5, 5, 0, 80, // 12
  
        0, 1, 1, 0, 5, 100, 0, 5, 100, 0, 94, 94, 0, 0, 7, 0, 0, 302, 118, 0, 0, 0, 100, 0, 100, 0,

        1, 1, 5, 0, 80, 80, 0, 2, 4, 2, 0, 8, 4, 8, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0,

        93, 0, 2, 0, 2, 0, 1, 1, 5, 0, 8, 0, 8, 0, 1, 1, 9, 0, 0, 0, 2, 0, 8, 0, 2, 0, // 15
  
        52, 0, 0, 0, 0, 1, 1, 5, 0, 0, 9, 0, 302, 119, 0, 0, 0, 100, 7, 0, 2, 4, 0, 2, 4, 0,

        8, 4, 0, 8, 4, 0, 0, 60, 61, 62, 0, 60, 61, 62, 0, 5, 5, 0, 62, 61, 60, 0, 62, 61, 60, 0,

        0, 0, 0, 0, 7, 0, 3, 0, 7, 0, 1, 1, 5, 0, 0, 0, 3, 0, 2, 0, 2, 0, 0, 3, 0, 8, // 18
  
        0, 8, 0, 5, 0, 0, 3, 0, 2, 0, 8, 8, 0, 7, 3, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9,

        0, 300, 0, 0, 302, 0, 0, 301, 0, 0, 80, 0, 80, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 2, 0,

        8, 0, 4, 0, 5, 0, 0, 93, 0, 0, 2, 1, 0, 8, 1, 0, 4, 0, 4, 0, 0, 93, 0, 0, 93, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 2, 0, 2, 0, 2, 0, 93, 0, 93, 0, 0, 2, 2, 0, 2, 0, 93, 0, 93, 0, 0, 2, 2, 2, 0,
  
        8, 0, 93, 0, 93, 0, 0, 1, 1, 1, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0,
  
        5, 9, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 300, 0, 94, 0, 94, 0, 100, 0, 80, 80, 0, 3, 0, 3, // 3
  
        0, 2, 93, 0, 8, 93, 0, 0, 1, 1, 5, 0, 80, 0, 80, 0, 1, 1, 9, 0, 80, 0, 80, 0, 0, 302,
  
        91, 0, 94, 0, 92, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 0, 93, 0, 0, 93, 0, 1, 5, 8, 9,
  
        5, 0, 0, 1, 1, 82, 0, 1, 1, 83, 0, 5, 0, 82, 0, 5, 0, 83, 0, 2, 4, 2, 0, 8, 4, 8, // 6
   
        0, 1, 1, 0, 5, 80, 80, 0, 0, 3, 0, 1, 2, 5, 0, 4, 0, 1, 8, 5, 0, 4, 0, 1, 1, 0,
  
        5, 5, 0, 100, 122, 0, 100, 122, 61, 0, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 80, 80, 0,
  
        83, 1, 5, 0, 2, 4, 2, 0, 82, 1, 5, 0, 8, 4, 8, 80, 0, 0, 0, 121, 0, 94, 0, 122, 0, 94, // 9
  
        0, 2, 2, 8, 8, 0, 302, 60, 61, 0, 302, 62, 61, 0, 1, 1, 5, 5, 0, 80, 80, 0, 121, 121, 100, 100,
  
        0, 122, 122, 100, 100, 0, 0, 94, 0, 0, 3, 0, 2, 0, 2, 0, 2, 0, 3, 0, 8, 0, 8, 0, 8, 0,
  
        3, 0, 2, 0, 8, 0, 1, 1, 5, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 2, 8, 2, 0, 80, // 12
  
        0, 80, 7, 0, 121, 121, 60, 100, 100, 61, 122, 122, 0, 0, 7, 0, 0, 52, 0, 0, 0, 80, 0, 0, 1, 1,
  
        0, 5, 0, 9, 5, 5, 0, 9, 5, 5, 0, 2, 4, 2, 0, 8, 4, 8, 5, 0, 100, 0, 100, 0, 1, 1,
  
        0, 5, 5, 0, 1, 1, 0, 5, 0, 9, 0, 61, 60, 0, 61, 62, 80, 0, 0, 0, 3, 0, 0, 93, 0, 0, // 15
  
        52, 0, 94, 0, 80, 0, 0, 1, 1, 5, 9, 0, 1, 1, 82, 0, 1, 1, 83, 0, 2, 4, 2, 0, 8, 4,
  
        8, 0, 5, 0, 5, 0, 0, 300, 91, 0, 0, 302, 94, 0, 0, 301, 92, 0, 0, 302, 94, 0, 0, 300, 91, 0,
  
        0, 0, 0, 0, 3, 0, 3, 0, 2, 93, 0, 8, 93, 0, 0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 0, 1, // 18
  
        1, 5, 0, 100, 0, 0, 3, 0, 3, 0, 2, 93, 0, 8, 93, 0, 0, 1, 2, 2, 5, 0, 1, 8, 8, 5,
  
        0, 302, 118, 0, 0, 302, 119, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 1, 1, 6, 0, 0, 1, 0,
  
        1, 0, 5, 0, 2, 0, 0, 2, 0, 0, 1, 1, 0, 5, 5, 0, 9, 0, 8, 0, 0, 8, 0, 0, 4, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
