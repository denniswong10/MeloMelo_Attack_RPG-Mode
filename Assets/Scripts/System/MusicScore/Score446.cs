using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score446 : MonoBehaviour
{
    //   71, 72 (Wandering_Wand)    29 (SailFlag)    17, 16 (Hammer)    115, 116 (Hammer_DOWN)    107, 108 (Hammer_UP)
    //   54, 55 (ScratchMark)    18, 20, 19 (FixedHeartPacK)    81, 80, 82 (CombinePickStar)   101, 14, 102 (Ribbon)
    
    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 5, 0,

        9, 0, 8, 8, 0, 5, 0, 9, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 29, 0, 0, 29, 0, 0,

        29, 0, 0, 54, 0, 54, 0, 55, 0, 55, 0, 20, 0, 20, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, // 3
  
        0, 81, 0, 0, 81, 0, 0, 1, 1, 0, 5, 80, 0, 7, 0, 3, 0, 7, 0, 1, 0, 9, 5, 0, 0, 82,

        0, 0, 82, 0, 0, 1, 1, 0, 80, 80, 0, 5, 0, 9, 0, 5, 0, 2, 4, 0, 8, 4, 0, 5, 0, 5,

        0, 5, 9, 0, 0, 3, 0, 5, 0, 3, 0, 9, 0, 1, 1, 0, 5, 0, 0, 0, 0, 0, 0, 2, 0, 2, // 6
  
        0, 2, 0, 4, 0, 1, 5, 0, 2, 0, 2, 0, 8, 0, 5, 0, 9, 0, 1, 1, 0, 5, 0, 80, 0, 0,

        1, 0, 80, 0, 1, 0, 80, 0, 2, 2, 0, 5, 0, 101, 0, 0, 102, 0, 0, 14, 0, 0, 20, 0, 1, 5,

        0, 1, 9, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 93, 2, 0, 5, 0, 93, 8, 0, 5, 0, // 9
  
        115, 0, 0, 108, 0, 0, 1, 1, 0, 55, 54, 0, 55, 54, 0, 20, 0, 20, 0, 5, 0, 0, 3, 0, 0, 7,

        0, 0, 3, 0, 2, 2, 0, 5, 0, 8, 8, 0, 5, 0, 1, 1, 0, 80, 80, 0, 9, 0, 0, 29, 0, 0,

        29, 0, 0, 29, 0, 0, 1, 1, 0, 80, 0, 1, 1, 0, 80, 9, 0, 1, 0, 5, 0, 1, 0, 9, 0, 107, // 12
   
        0, 0, 16, 0, 0, 108, 0, 0, 1, 1, 0, 5, 9, 0, 80, 0, 80, 0, 1, 1, 0, 5, 9, 0, 0, 0,

        0, 0, 101, 0, 0, 14, 0, 0, 102, 0, 0, 0, 102, 0, 0, 14, 0, 0, 101, 0, 0, 1, 1, 0, 5, 0,

        1, 1, 0, 20, 0, 20, 0, 101, 0, 102, 0, 0, 107, 0, 108, 0, 0, 115, 0, 116, 0, 0, 1, 1, 0, 80, // 15
   
        0, 5, 0, 9, 0, 0, 81, 0, 80, 0, 82, 0, 80, 0, 9, 0, 18, 0, 20, 0, 19, 0, 20, 0, 101, 0,

        14, 0, 102, 0, 0, 81, 0, 82, 0, 0, 80, 5, 0, 80, 9, 0, 2, 4, 0, 8, 4, 0, 1, 1, 0, 5,

        5, 0, 80, 0, 1, 5, 0, 1, 9, 0, 80, 80, 0, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 14, 0, 0, // 18
   
        0, 0, 1, 0, 9, 0, 1, 0, 5, 0, 14, 0, 20, 0, 0, 0, 80, 0, 80, 0, 14, 0, 20, 0, 14, 0,

        20, 20, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 0, 1, 4, 0, 80, 80, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 20, 0, 20,
  
        29, 0, 20, 0, 20, 0, 1, 1, 5, 0, 107, 20, 0, 108, 20, 20, 0, 115, 20, 0, 1, 1, 6, 0, 54, 0,
  
        55, 0, 71, 0, 0, 0, 72, 0, 0, 0, 29, 0, 20, 20, 0, 29, 0, 20, 20, 0, 80, 80, 80, 80, 0, 20, // 3
  
        0, 1, 1, 0, 80, 0, 0, 1, 1, 5, 0, 80, 0, 0, 20, 0, 20, 0, 1, 1, 5, 9, 0, 80, 0, 1,
  
        1, 0, 80, 80, 0, 2, 4, 81, 0, 8, 4, 82, 0, 1, 4, 81, 0, 1, 6, 82, 0, 5, 5, 9, 0, 0,
  
        80, 0, 80, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 1, 5, 1, 9, 0, 193, 0, 0, 0, 0, 1, 0, 193, // 6
  
        0, 5, 0, 193, 0, 1, 1, 0, 193, 0, 5, 0, 0, 1, 5, 0, 1, 9, 0, 1, 1, 0, 193, 5, 0, 0,
   
        1, 1, 80, 0, 1, 1, 80, 0, 80, 0, 5, 5, 9, 0, 101, 14, 102, 0, 19, 20, 18, 20, 92, 0, 5, 5,
   
        5, 5, 0, 115, 0, 0, 1, 1, 116, 0, 0, 1, 1, 9, 0, 3, 0, 1, 4, 5, 0, 1, 6, 5, 0, 80, // 9
  
        2, 80, 8, 9, 0, 1, 1, 54, 0, 55, 0, 1, 1, 55, 0, 54, 0, 20, 20, 5, 0, 0, 193, 0, 0, 193,
  
        0, 0, 2, 3, 8, 3, 0, 29, 0, 20, 0, 29, 0, 20, 0, 1, 80, 1, 80, 0, 9, 0, 0, 29, 0, 20,
  
        20, 29, 0, 20, 20, 0, 1, 80, 1, 80, 0, 3, 0, 2, 4, 5, 0, 8, 4, 5, 0, 82, 82, 80, 0, 17, // 12
   
        0, 71, 0, 0, 0, 16, 0, 72, 0, 0, 0, 54, 55, 0, 54, 55, 0, 4, 2, 4, 8, 0, 9, 0, 0, 0,
   
        0, 0, 54, 0, 102, 0, 20, 18, 20, 80, 0, 0, 55, 0, 101, 0, 20, 19, 20, 80, 0, 1, 4, 5, 0, 1,
   
        6, 5, 0, 20, 20, 20, 0, 108, 0, 107, 0, 0, 115, 0, 116, 0, 0, 20, 18, 20, 0, 20, 19, 20, 0, 80, // 15
   
        0, 5, 5, 9, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 81, 0, 1, 1, 5, 0, 1, 1, 9, 0, 82, 0,
   
        54, 55, 0, 14, 101, 14, 102, 14, 0, 0, 1, 5, 5, 9, 0, 3, 2, 2, 0, 3, 8, 8, 0, 81, 0, 1,
   
        5, 1, 9, 0, 2, 4, 8, 4, 0, 81, 81, 80, 0, 0, 0, 1, 1, 5, 0, 101, 0, 102, 0, 20, 0, 0, // 18
   
        0, 0, 1, 1, 9, 0, 102, 0, 101, 0, 20, 20, 20, 0, 0, 0, 81, 18, 82, 0, 19, 81, 20, 0, 82, 19,
  
        81, 0, 80, 0, 80, 0, 5, 5, 9, 0, 81, 81, 82, 82, 0, 1, 1, 5, 1, 1, 9, 0, 193, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
