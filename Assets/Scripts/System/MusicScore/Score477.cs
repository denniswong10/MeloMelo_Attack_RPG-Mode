using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score477 : MonoBehaviour
{
    //     21 [107, 108] (TapWithAirAttack)     52 [123] (Circle2)     53 [103, 104] (Circle)
    //     70 (ItemStrike3WithItem3)     72, 73 (QuickPickUpItem)      77, 78 [61, 62] (HalfPickUpItem)
    //     80 [110, 111] (BoomStopStar)    81, 82 (CombinePickStar)
    //     91, 94, 92 (FixedAirAttack)      20 (FixedHeartPack)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 103, 0, 1, 1, 0, 5, 0, 0, 7, 0, 104, 0, 1, 1, 0, 5, 0, 9, 0, 5, 5, 0, 80, 0, 0,

        0, 0, 0, 1, 5, 0, 1, 9, 0, 0, 93, 0, 93, 0, 53, 0, 53, 0, 110, 110, 0, 80, 0, 80, 0, 20,

        0, 94, 0, 0, 0, 0, 0, 1, 0, 5, 4, 0, 5, 9, 0, 1, 1, 0, 70, 0, 70, 0, 70, 0, 123, 0, // 3
   
        0, 20, 0, 0, 0, 0, 1, 0, 5, 0, 0, 2, 2, 0, 8, 8, 0, 1, 0, 1, 0, 5, 0, 53, 0, 20,

        0, 5, 0, 0, 7, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 1, 1, 0, 5, 5, 0, 1, 1, 0, 5, 5,

        0, 21, 0, 80, 0, 110, 0, 80, 0, 111, 0, 21, 0, 53, 0, 94, 0, 0, 0, 0, 103, 0, 53, 0, 104, 0, // 6
   
        53, 0, 1, 1, 0, 5, 0, 7, 0, 80, 80, 0, 0, 93, 0, 0, 2, 2, 0, 8, 8, 0, 9, 0, 0, 0,

        1, 0, 5, 0, 1, 0, 9, 0, 2, 4, 0, 8, 4, 0, 5, 0, 5, 0, 80, 0, 7, 0, 1, 0, 5, 0,

        1, 0, 9, 0, 2, 6, 0, 8, 6, 0, 5, 0, 5, 0, 21, 0, 0, 1, 1, 0, 5, 53, 0, 0, 80, 0, // 9
   
        94, 0, 1, 1, 0, 5, 0, 1, 0, 5, 4, 0, 2, 8, 0, 5, 0, 0, 0, 1, 0, 5, 0, 103, 0, 103,

        20, 0, 104, 0, 104, 0, 94, 0, 1, 0, 9, 0, 53, 0, 103, 0, 53, 0, 104, 0, 20, 94, 0, 7, 7, 0,

        1, 1, 0, 5, 5, 0, 80, 0, 80, 0, 77, 0, 77, 77, 0, 78, 0, 78, 78, 0, 0, 80, 0, 0, 21, 0, // 12
  
        81, 0, 81, 0, 82, 0, 82, 0, 0, 3, 0, 0, 81, 80, 0, 82, 80, 0, 53, 0, 103, 0, 104, 0, 0, 0,

        80, 80, 0, 107, 0, 0, 110, 110, 0, 21, 0, 0, 111, 111, 0, 21, 0, 1, 5, 0, 2, 4, 0, 8, 4, 0,

        3, 0, 3, 0, 0, 103, 0, 104, 0, 103, 0, 104, 0, 123, 0, 20, 20, 0, 94, 0, 0, 93, 0, 93, 0, 1, // 15
  
        1, 0, 9, 0, 81, 61, 0, 61, 81, 0, 2, 4, 0, 5, 0, 1, 0, 9, 0, 82, 62, 0, 62, 82, 0, 20,

        0, 94, 0, 0, 2, 2, 0, 8, 8, 0, 1, 5, 0, 70, 0, 81, 61, 0, 61, 81, 0, 1, 1, 0, 5, 70,

        0, 82, 62, 0, 62, 82, 0, 80, 0, 21, 94, 0, 0, 0, 1, 2, 5, 0, 53, 0, 53, 0, 0, 1, 9, 0, // 18
   
        70, 0, 1, 5, 0, 6, 0, 1, 5, 0, 9, 53, 0, 103, 0, 104, 0, 103, 53, 0, 20, 0, 0, 2, 0, 5,

        0, 8, 0, 5, 0, 0, 123, 20, 0, 20, 0, 21, 0, 123, 20, 0, 20, 20, 21, 0, 0, 93, 0, 93, 0, 0,

        2, 2, 0, 8, 0, 1, 0, 1, 0, 5, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 103, 0, 70, 1, 5, 6, 0, 0, 93, 0, 53, 94, 0, 1, 2, 5, 0, 1, 8, 5, 0, 80, 21, 0, 0,
  
        7, 0, 0, 104, 0, 70, 1, 5, 9, 0, 0, 93, 0, 53, 94, 94, 94, 0, 110, 21, 0, 0, 81, 80, 0, 82,
  
        80, 21, 0, 0, 0, 0, 0, 1, 1, 5, 5, 0, 70, 0, 1, 1, 5, 9, 0, 70, 80, 80, 0, 107, 52, 0, // 3
   
        0, 20, 0, 0, 0, 0, 1, 1, 5, 0, 0, 3, 0, 0, 3, 0, 0, 1, 1, 4, 0, 53, 0, 1, 1, 6,
   
        0, 5, 0, 0, 3, 0, 0, 3, 0, 0, 0, 80, 0, 0, 0, 82, 82, 80, 0, 81, 81, 80, 0, 107, 0, 70,
   
        0, 70, 0, 81, 81, 21, 0, 82, 82, 21, 0, 80, 107, 0, 80, 108, 0, 0, 0, 0, 1, 2, 1, 4, 0, 5, // 6
   
        5, 0, 1, 8, 1, 4, 0, 5, 0, 21, 80, 0, 0, 3, 0, 0, 103, 0, 70, 104, 0, 70, 5, 0, 0, 0,
   
        1, 1, 5, 70, 0, 62, 82, 62, 82, 62, 82, 0, 80, 2, 2, 80, 8, 8, 21, 0, 7, 0, 1, 1, 5, 70,
   
        0, 61, 81, 61, 81, 61, 81, 0, 80, 2, 8, 80, 2, 8, 21, 0, 0, 1, 4, 5, 0, 53, 20, 0, 1, 4, // 9
   
        5, 0, 53, 94, 0, 80, 0, 3, 0, 81, 78, 80, 82, 77, 80, 7, 0, 0, 0, 1, 1, 5, 0, 53, 103, 91,
   
        0, 53, 104, 92, 53, 0, 20, 0, 1, 1, 9, 0, 53, 104, 92, 0, 53, 103, 91, 53, 20, 20, 0, 7, 7, 0,
  
        1, 1, 5, 0, 80, 80, 80, 0, 21, 0, 77, 77, 78, 78, 0, 0, 3, 0, 0, 93, 7, 0, 0, 110, 80, 0, // 12
  
        108, 0, 73, 0, 110, 110, 107, 0, 0, 3, 0, 0, 111, 80, 0, 107, 0, 72, 92, 0, 111, 111, 108, 0, 0, 0,
  
        81, 80, 82, 0, 21, 0, 82, 80, 81, 0, 21, 21, 0, 1, 5, 4, 0, 1, 5, 6, 0, 1, 1, 5, 9, 0,
  
        3, 0, 3, 0, 0, 103, 123, 104, 0, 20, 20, 0, 104, 123, 103, 0, 20, 20, 94, 0, 0, 70, 0, 70, 0, 1, // 15
  
        5, 1, 5, 0, 80, 77, 80, 78, 0, 3, 0, 0, 0, 110, 21, 0, 111, 21, 0, 81, 80, 82, 80, 81, 0, 20,
  
        20, 94, 0, 0, 93, 0, 3, 0, 0, 1, 1, 5, 70, 0, 61, 81, 61, 92, 61, 81, 92, 0, 1, 1, 5, 70,
   
        0, 62, 82, 62, 91, 62, 82, 91, 0, 80, 21, 0, 0, 0, 1, 1, 5, 0, 53, 0, 70, 103, 0, 70, 104, 0, // 18
   
        70, 0, 80, 80, 0, 3, 0, 110, 53, 0, 21, 103, 0, 107, 53, 104, 92, 53, 103, 0, 80, 0, 0, 93, 0, 93,
   
        0, 93, 0, 93, 0, 0, 103, 123, 53, 104, 0, 21, 0, 104, 123, 53, 103, 0, 21, 0, 0, 2, 2, 8, 8, 0,
   
        0, 3, 0, 7, 0, 3, 0, 7, 0, 3, 0, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
