using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score497 : MonoBehaviour
{
    //     101, 14, 102 (Ribbon)      54, 55 (ScratchMark)      57, 58 (CurveClosedPattern)      88 (Eight)
    //     76 (MultipleHitStar)     18, 20, 19 (FixedHeartPack)      72, 73 (QuickPickUpItem)     67, 68 (QuickSlideStar)
    //     21 (RomeTwo)      94 (FixedHeartPack)      89 (ShieldCoverStar)      110, 111 (SideOfChoice)
    //     71, 70 [78, 77] (ItemStrikeWithItem3)      112, 113 (HiddenItemHunt)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 101, 0, 18, 20, 0, 58, 0, 0, 0, 102, 0, 19, 20, 0, 57, 0, 0, 0, 1, 0, 5, 0,

        1, 0, 4, 0, 14, 0, 102, 0, 14, 0, 101, 0, 0, 76, 0, 1, 0, 5, 5, 0, 76, 0, 1, 0, 9, 0,

        21, 0, 0, 18, 20, 0, 19, 20, 0, 0, 5, 0, 0, 0, 0, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, // 3
 
        14, 0, 0, 1, 2, 0, 4, 0, 1, 8, 0, 4, 0, 2, 8, 0, 5, 0, 8, 2, 0, 5, 5, 0, 76, 0,

        93, 0, 93, 0, 54, 0, 54, 0, 20, 20, 0, 55, 0, 55, 0, 20, 20, 0, 101, 0, 14, 0, 102, 0, 14, 0,

        0, 76, 20, 0, 76, 94, 0, 5, 0, 0, 0, 0, 2, 0, 8, 0, 2, 0, 8, 0, 1, 1, 0, 5, 0, 5, // 6
  
        0, 1, 1, 0, 5, 0, 66, 0, 1, 4, 0, 5, 0, 0, 3, 0, 0, 101, 0, 14, 0, 20, 0, 102, 0, 14,

        0, 94, 0, 101, 0, 0, 5, 76, 0, 1, 5, 0, 1, 5, 0, 977, 0, 3, 0, 2, 2, 0, 4, 8, 0, 2,

        2, 0, 93, 2, 2, 0, 93, 8, 8, 0, 1, 0, 5, 0, 1, 0, 9, 0, 71, 2, 2, 0, 71, 8, 8, 0, // 9
  
        0, 89, 0, 20, 0, 20, 0, 20, 5, 0, 0, 0, 977, 0, 0, 3, 0, 0, 977, 0, 0, 2, 0, 8, 0, 0,

        76, 0, 2, 0, 0, 76, 0, 8, 0, 0, 1, 5, 0, 1, 9, 0, 0, 0, 1, 1, 5, 0, 14, 0, 1, 1,

        9, 0, 14, 0, 0, 20, 20, 0, 94, 94, 0, 0, 977, 977, 0, 0, 101, 0, 14, 0, 102, 0, 19, 94, 18, 0, // 12
  
        101, 0, 14, 0, 102, 0, 19, 94, 18, 0, 72, 0, 14, 0, 20, 0, 20, 0, 0, 0, 14, 0, 0, 1, 1, 5,

        0, 14, 0, 0, 1, 1, 9, 0, 88, 0, 0, 0, 5, 0, 5, 0, 0, 76, 0, 1, 1, 5, 0, 0, 3, 0,

        2, 4, 2, 0, 93, 0, 8, 4, 8, 0, 93, 0, 1, 4, 5, 0, 93, 0, 1, 4, 9, 0, 977, 14, 0, 0, // 15
  
        0, 1, 89, 0, 0, 1, 89, 0, 0, 57, 0, 20, 58, 0, 20, 0, 1, 1, 5, 0, 1, 1, 9, 0, 5, 5,

        9, 0, 0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 1, 0, 1, 0, 5, 0, 9, 0, 0, 101, 0, 14, 0, 102,

        0, 19, 0, 0, 0, 0, 2, 4, 0, 0, 8, 4, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 102, 0, // 18 
  
        14, 0, 101, 0, 18, 0, 0, 76, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 1, 1, 5, 99, 0, 88, 0, 0, 0, 1, 5, 1, 99, 0, 88, 0, 0, 0, 1, 1, 4, 0,
  
        1, 1, 66, 0, 21, 0, 20, 20, 20, 0, 3, 0, 0, 101, 0, 0, 20, 58, 0, 0, 19, 0, 102, 0, 0, 20,
  
        57, 0, 0, 18, 0, 14, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 72, 0, 19, 19, 73, 0, 18, 18, 0, // 3
 
        67, 0, 0, 19, 19, 68, 0, 0, 18, 18, 0, 14, 0, 0, 1, 1, 5, 0, 76, 0, 1, 1, 99, 0, 76, 0,
 
        89, 0, 89, 0, 54, 0, 55, 0, 54, 0, 55, 0, 72, 0, 19, 73, 0, 54, 0, 55, 0, 54, 0, 55, 0, 72,
  
        0, 19, 73, 0, 18, 14, 0, 94, 0, 0, 0, 0, 112, 8, 8, 8, 0, 113, 8, 8, 8, 0, 112, 101, 0, 18, // 6
  
        0, 113, 102, 0, 19, 0, 88, 0, 0, 20, 20, 94, 0, 0, 93, 0, 0, 1, 5, 2, 0, 14, 0, 0, 1, 5,

        8, 0, 14, 0, 0, 76, 0, 76, 0, 1, 5, 1, 5, 99, 0, 0, 977, 0, 0, 1, 2, 2, 71, 2, 2, 2,

        71, 0, 70, 2, 2, 2, 70, 2, 2, 2, 0, 78, 2, 2, 71, 8, 8, 0, 77, 2, 2, 70, 8, 8, 0, 89, // 9
  
        0, 89, 0, 21, 0, 0, 18, 20, 19, 0, 0, 0, 3, 0, 0, 3, 0, 0, 76, 0, 0, 2, 93, 8, 0, 0,

        76, 0, 76, 0, 0, 8, 93, 2, 0, 0, 76, 76, 0, 0, 76, 0, 0, 0, 1, 1, 5, 0, 20, 57, 0, 18,

        20, 58, 0, 19, 0, 102, 14, 101, 0, 94, 0, 0, 977, 977, 0, 0, 1, 1, 5, 99, 0, 88, 0, 0, 20, 0, // 12
  
        1, 5, 1, 99, 0, 88, 0, 0, 94, 0, 54, 0, 55, 0, 19, 20, 18, 0, 0, 0, 110, 8, 2, 8, 0, 111,

        8, 2, 8, 0, 110, 101, 0, 18, 0, 111, 102, 0, 19, 0, 88, 0, 0, 20, 20, 94, 20, 20, 0, 0, 3, 0,
  
        1, 1, 5, 0, 72, 0, 1, 1, 5, 0, 73, 0, 1, 5, 4, 0, 78, 0, 1, 5, 4, 0, 78, 77, 0, 0, // 15
  
        0, 71, 54, 0, 55, 0, 0, 70, 54, 0, 55, 0, 0, 20, 20, 0, 67, 0, 20, 68, 0, 20, 0, 1, 5, 1,
  
        99, 0, 0, 0, 1, 1, 2, 0, 93, 0, 93, 0, 1, 1, 8, 0, 93, 0, 93, 0, 88, 0, 0, 20, 20, 94,
   
        94, 14, 0, 0, 0, 0, 93, 93, 0, 0, 93, 93, 0, 0, 1, 5, 5, 0, 1, 99, 5, 0, 89, 0, 89, 0, // 18 
  
        1, 2, 93, 0, 1, 8, 93, 0, 76, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
