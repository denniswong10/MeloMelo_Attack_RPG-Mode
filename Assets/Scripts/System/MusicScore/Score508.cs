using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score508 : MonoBehaviour
{
    //      101, 14, 102 (Ribbon)        115, 100, 116 (OnRailTrack)       110, 80, 111 (BoomStopStar)
    //      34 [340] (PonyDiamond)       30, 31 (Sweep)       120 (FlyAndHitTheAir)        23, 24 (Left, Right)
    //      215, 121, 216 (GhostRail)      70 [77] ItemStrikeWithItem3
    //      18, 20, 19 (FixedHeartPack)       91, 94, 92 (FixedAirAttack)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 99, 0, 5, 0, 0, 0, 0, 101, 0, 101, 0, 0,

        14, 0, 14, 0, 0, 102, 0, 102, 0, 0, 80, 80, 0, 20, 0, 0, 0, 0, 0, 9, 0, 8, 0, 8, 0, 9,

        0, 2, 0, 2, 0, 34, 0, 0, 0, 0, 0, 20, 0, 20, 0, 100, 0, 0, 0, 0, 94, 80, 0, 0, 9, 0,  // 3

        2, 0, 9, 0, 8, 8, 0, 14, 0, 14, 0, 0, 101, 0, 101, 0, 0, 14, 0, 91, 14, 0, 92, 14, 0, 94,

        0, 0, 0, 100, 0, 0, 0, 0, 5, 0, 5, 100, 0, 0, 0, 0, 9, 0, 5, 100, 0, 0, 0, 0, 80, 0,

        80, 0, 0, 0, 115, 0, 0, 0, 0, 14, 116, 0, 0, 0, 0, 80, 115, 0, 0, 0, 0, 94, 80, 0, 7, 0,  // 6

        3, 0, 2, 4, 0, 5, 0, 5, 0, 8, 4, 0, 5, 0, 5, 0, 0, 14, 0, 20, 94, 0, 77, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 100, 0,

        0, 0, 18, 115, 0, 0, 0, 94, 100, 0, 0, 0, 19, 116, 0, 0, 0, 20, 94, 0, 80, 0, 110, 0, 80, 0,  // 9

        111, 0, 14, 0, 94, 0, 77, 0, 0, 340, 101, 0, 14, 0, 340, 102, 0, 14, 0, 0, 20, 94, 0, 77, 77, 0,

        110, 80, 0, 111, 80, 0, 0, 0, 0, 1, 0, 2, 0, 2, 0, 5, 5, 0, 9, 5, 0, 80, 14, 0, 0, 0,

        93, 0, 93, 0, 93, 0, 0, 80, 0, 0, 0, 1, 0, 8, 0, 8, 0, 5, 5, 0, 9, 5, 0, 80, 14, 0,  // 12

        0, 94, 0, 0, 2, 4, 0, 8, 4, 0, 0, 93, 0, 93, 0, 0, 1, 2, 0, 80, 0, 101, 0, 0, 70, 14,

        0, 0, 70, 102, 0, 0, 70, 0, 77, 0, 115, 0, 0, 0, 216, 0, 0, 0, 0, 31, 0, 0, 30, 0, 0, 0,

        80, 0, 80, 0, 2, 4, 0, 8, 4, 0, 110, 110, 0, 80, 0, 111, 111, 0, 0, 7, 7, 0, 0, 1, 8, 0,  // 15

        80, 0, 102, 0, 0, 70, 14, 0, 0, 70, 101, 0, 0, 116, 0, 0, 0, 215, 0, 0, 0, 0, 30, 0, 0, 31,

        0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 0, 0, 0, 0, 0, 0, 0, 5,

        0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 2, 2, 0, 8, 0, 8, 0, 5, 0,  // 18

        0, 0, 3, 0, 0, 0, 8, 8, 0, 5, 0, 5, 0, 0, 1, 2, 0, 4, 0, 5, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 101, 0, 101, 0, 101, 0, 0, 110, 80, 0, 102, 0, 102, 0, 102, 0, 0, 7, 3, 7, 340, 0, 0, 0,

        0, 0, 340, 0, 101, 102, 0, 31, 101, 0, 30, 102, 0, 20, 0, 0, 0, 0, 0, 120, 0, 8, 8, 8, 0, 120,

        0, 8, 8, 8, 0, 100, 0, 0, 0, 0, 0, 80, 0, 80, 0, 34, 0, 0, 20, 0, 0, 20, 0, 0, 120, 0,  // 3

        8, 0, 120, 0, 8, 8, 0, 100, 0, 0, 3, 0, 0, 80, 20, 80, 0, 34, 0, 30, 0, 20, 31, 0, 0, 94,

        0, 0, 0, 111, 116, 0, 0, 0, 0, 80, 110, 115, 0, 0, 0, 0, 110, 80, 94, 80, 14, 0, 0, 7, 0, 3,

        0, 7, 0, 0, 110, 115, 0, 0, 18, 0, 80, 111, 116, 0, 0, 19, 0, 80, 80, 94, 94, 14, 0, 0, 7, 0,  // 6

        3, 0, 101, 18, 14, 102, 0, 92, 0, 102, 19, 14, 101, 0, 91, 0, 0, 80, 80, 80, 0, 0, 24, 0, 0, 0,

        0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 215, 0,

        0, 0, 0, 77, 0, 216, 0, 0, 0, 0, 77, 0, 215, 102, 0, 19, 0, 77, 0, 216, 101, 0, 18, 0, 110, 20,  // 9

        80, 92, 0, 0, 23, 0, 0, 0, 0, 216, 115, 0, 0, 0, 77, 0, 215, 116, 0, 0, 0, 77, 77, 0, 100, 0,

        18, 94, 19, 0, 80, 80, 0, 0, 0, 120, 0, 1, 2, 8, 0, 120, 0, 5, 8, 2, 0, 5, 0, 5, 0, 5,

        0, 80, 0, 94, 0, 80, 91, 0, 0, 7, 0, 120, 0, 1, 8, 2, 0, 120, 0, 5, 2, 8, 0, 5, 0, 99,  // 12

        0, 5, 0, 80, 0, 94, 0, 80, 92, 14, 0, 0, 3, 7, 0, 0, 101, 91, 14, 102, 0, 20, 110, 101, 0, 14,

        102, 0, 0, 215, 3, 0, 3, 0, 77, 0, 216, 0, 110, 0, 110, 20, 80, 0, 0, 7, 0, 30, 94, 0, 31, 94,

        0, 30, 20, 0, 91, 31, 20, 0, 92, 0, 110, 80, 111, 80, 110, 80, 94, 0, 0, 3, 7, 0, 0, 102, 92, 14,  // 15

        101, 0, 20, 111, 102, 0, 14, 0, 101, 0, 0, 216, 0, 110, 110, 0, 77, 0, 215, 0, 111, 111, 0, 77, 0, 5,

        0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93,

        0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 2, 4, 8, 0, 0, 1, 0, 5, 0,  // 18

        0, 0, 3, 0, 0, 0, 2, 4, 5, 0, 0, 3, 0, 0, 1, 0, 0, 8, 4, 5, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
