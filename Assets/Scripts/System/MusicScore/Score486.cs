using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score486 : MonoBehaviour
{
    //   14 (Ribbon)     53 (Circle)    54 (Cross)     100 (ItemAirAttack)      45 [109, 110, 111, 112] (4-Key)
    //   81 (BoomStopStar)    52 [123] (Circle2)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 14, 0, 0, 80, 0, 0, 0, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 14, 0, 0, 100, 0, 1, 1,

        0, 9, 0, 0, 3, 0, 1, 0, 5, 0, 1, 6, 0, 5, 0, 0, 14, 0, 0, 100, 14, 0, 0, 100, 0, 2, // 3
   
        0, 8, 6, 0, 0, 3, 0, 0, 2, 8, 0, 4, 0, 1, 5, 0, 1, 9, 0, 0, 3, 0, 0, 7, 0, 0,

        3, 0, 0, 1, 0, 0, 5, 0, 0, 1, 1, 0, 14, 0, 0, 14, 0, 0, 81, 0, 0, 53, 0, 0, 53, 0,

        0, 53, 0, 0, 100, 0, 0, 54, 0, 0, 54, 0, 0, 54, 0, 0, 100, 0, 2, 0, 5, 0, 0, 2, 8, 2, // 6
  
        0, 1, 0, 5, 5, 0, 1, 0, 9, 0, 0, 0, 0, 93, 0, 0, 0, 2, 4, 0, 0, 0, 1, 0, 0, 5,

        0, 0, 4, 0, 0, 1, 5, 0, 1, 9, 0, 2, 2, 0, 8, 8, 0, 0, 1, 0, 0, 5, 0, 0, 4, 0,

        0, 1, 1, 0, 8, 4, 0, 0, 0, 2, 0, 2, 0, 100, 0, 2, 0, 2, 0, 100, 0, 8, 0, 8, 0, 1, // 9
   
        5, 0, 0, 0, 3, 0, 0, 1, 2, 0, 100, 0, 1, 8, 0, 100, 0, 0, 80, 0, 1, 1, 0, 4, 0, 0,

        0, 2, 8, 0, 2, 4, 0, 8, 0, 5, 0, 0, 45, 110, 0, 45, 111, 0, 0, 4, 0, 8, 0, 4, 0, 2,

        0, 1, 81, 0, 1, 0, 81, 0, 0, 0, 3, 0, 0, 0, 2, 4, 0, 0, 0, 3, 0, 0, 0, 1, 0, 5, // 12
  
        0, 9, 0, 0, 14, 0, 0, 14, 0, 0, 14, 0, 0, 100, 0, 0, 1, 0, 5, 4, 0, 0, 0, 2, 0, 2,

        0, 8, 0, 8, 0, 93, 0, 93, 0, 0, 1, 5, 0, 4, 0, 0, 0, 14, 0, 0, 14, 0, 0, 14, 0, 0,

        80, 0, 0, 0, 0, 123, 0, 0, 0, 1, 0, 5, 0, 14, 0, 0, 0, 123, 0, 0, 0, 1, 1, 0, 5, 9, // 15
  
        0, 1, 100, 0, 81, 0, 0, 0, 53, 0, 0, 14, 0, 0, 53, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9,

        0, 0, 2, 0, 0, 8, 0, 0, 5, 0, 1, 9, 0, 0, 0, 1, 1, 0, 2, 0, 8, 8, 0, 14, 0, 0,

        0, 1, 1, 0, 5, 0, 53, 0, 0, 1, 1, 0, 9, 0, 2, 4, 0, 0, 3, 0, 0, 1, 0, 14, 0, 0, // 18
   
        1, 14, 0, 0, 1, 0, 14, 0, 0, 1, 14, 0, 0, 100, 0, 1, 0, 81, 0, 0, 14, 0, 0, 14, 0, 0,

        14, 0, 0, 0, 2, 0, 2, 0, 0, 8, 0, 8, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0,

        0, 5, 0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 5, 0, 93, 0, 93, 0, 123, 0, 0, 0, 14, // 21
   
        0, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0, 80, 0, 0, 110, 45, 0, 111, 45, 0, 80, 80, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 2, 2, 8, 0, 4, 0, 0, 8, 8, 2, 0, 4, 0, 0, 1, 0, 5, 0, 1, 0, 5, 0, 2, 2, 8,
  
        8, 0, 1, 1, 1, 5, 0, 0, 0, 14, 0, 0, 100, 14, 0, 0, 100, 14, 0, 14, 0, 0, 100, 1, 1, 5,
  
        0, 100, 14, 0, 0, 100, 14, 0, 0, 5, 5, 0, 6, 0, 0, 93, 0, 93, 0, 5, 0, 93, 0, 93, 0, 1, // 3
   
        1, 5, 6, 0, 0, 93, 0, 93, 0, 5, 0, 93, 0, 93, 0, 5, 5, 9, 0, 0, 1, 1, 0, 53, 0, 0,
   
        0, 100, 53, 0, 0, 0, 100, 53, 0, 0, 0, 100, 53, 0, 0, 4, 1, 5, 0, 0, 93, 0, 93, 0, 2, 2,
  
        9, 0, 0, 1, 1, 0, 54, 0, 0, 0, 100, 54, 0, 0, 0, 54, 0, 0, 0, 100, 54, 0, 0, 4, 1, 5, // 6
  
        0, 8, 8, 9, 0, 1, 1, 1, 9, 0, 0, 0, 0, 3, 0, 0, 0, 93, 5, 0, 0, 0, 45, 100, 45, 0,
   
        1, 2, 4, 0, 45, 100, 45, 0, 1, 8, 6, 0, 2, 8, 2, 81, 0, 0, 3, 0, 0, 3, 0, 0, 93, 5,
   
        0, 0, 1, 1, 5, 9, 0, 0, 45, 100, 45, 0, 1, 1, 14, 0, 0, 4, 2, 8, 0, 81, 0, 4, 1, 1, // 9
   
        81, 0, 0, 0, 3, 0, 0, 109, 110, 111, 0, 123, 0, 0, 0, 4, 2, 2, 80, 0, 4, 8, 8, 81, 0, 0,
  
        93, 0, 5, 0, 93, 0, 5, 2, 8, 5, 0, 0, 112, 111, 110, 0, 123, 0, 0, 0, 4, 8, 8, 80, 0, 4,
  
        2, 2, 81, 0, 1, 1, 9, 0, 0, 0, 3, 0, 0, 0, 93, 3, 0, 0, 0, 2, 2, 8, 0, 3, 0, 2, // 12
  
        4, 2, 0, 3, 0, 14, 0, 0, 100, 14, 0, 0, 100, 0, 0, 1, 5, 0, 1, 9, 0, 0, 0, 2, 2, 0,
   
        93, 3, 0, 8, 8, 0, 93, 3, 0, 0, 100, 2, 81, 0, 4, 0, 0, 14, 0, 4, 53, 0, 4, 54, 0, 0,
  
        100, 0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, 0, 0, 80, 54, 0, 0, 100, 1, 1, 6, 0, 81, // 15
  
        5, 0, 80, 1, 9, 0, 0, 0, 123, 0, 0, 0, 14, 0, 4, 1, 5, 0, 53, 0, 0, 4, 1, 1, 0, 81,
  
        0, 0, 3, 0, 0, 3, 0, 0, 93, 0, 5, 9, 0, 0, 0, 1, 1, 0, 14, 0, 4, 2, 8, 0, 54, 0,
  
        0, 4, 1, 1, 5, 0, 93, 0, 93, 0, 1, 6, 0, 1, 5, 9, 0, 0, 3, 0, 0, 1, 5, 14, 0, 0, // 18
   
        100, 14, 0, 0, 100, 54, 0, 0, 100, 54, 0, 0, 100, 53, 0, 0, 100, 53, 0, 0, 1, 1, 5, 0, 1, 1,
   
        9, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 93, 3, 0, 0, 0, 0, 93, 3, 0, 0, 0,
   
        0, 4, 0, 0, 0, 1, 5, 1, 9, 0, 3, 0, 1, 1, 5, 5, 0, 93, 0, 93, 0, 1, 5, 9, 0, 123, // 21
   
        0, 0, 0, 1, 2, 4, 0, 1, 8, 4, 0, 81, 0, 0, 45, 110, 109, 0, 45, 111, 112, 0, 80, 0, 0, 0,
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
