using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score471 : MonoBehaviour
{
    //    12 (HookS)     13 [105,106] (CurveS)     28 (Flag)    29 (SailFlag)
    //    70 (ItemStrikeOf3)     71 (ItemStrikeOf2)    72, 73 (QuickSlidePick)
    //    50, 51 (WideTapItemDash)      107, 108, 109, 110 (WideTapItemDash_Modded)     30, 31 (QuickTapJumpAttack)
    //    53, 54 (MultipleDropItem)     76 (MultipleHitStar)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0,

        5, 0, 93, 0, 8, 0, 5, 0, 93, 0, 1, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 2, 2,

        0, 54, 0, 0, 0, 2, 0, 5, 0, 71, 0, 8, 0, 5, 0, 71, 0, 53, 0, 54, 0, 53, 0, 0, 1, 1,  // 3
   
        0, 9, 0, 28, 0, 18, 0, 0, 0, 0, 5, 5, 0, 53, 0, 5, 0, 1, 1, 0, 54, 0, 5, 12, 0, 0,

        17, 0, 0, 0, 2, 2, 0, 8, 8, 0, 0, 54, 0, 54, 0, 0, 1, 1, 0, 5, 9, 0, 1, 1, 0, 13,

        0, 18, 13, 0, 18, 0, 28, 0, 0, 0, 0, 0, 93, 0, 0, 2, 8, 0, 5, 0, 0, 0, 0, 0, 29, 0,  // 6
   
        0, 0, 0, 29, 18, 0, 19, 0, 0, 0, 0, 76, 0, 1, 5, 0, 76, 0, 1, 9, 0, 13, 0, 28, 0, 0,

        0, 0, 1, 1, 0, 5, 28, 0, 0, 18, 105, 0, 0, 19, 106, 0, 0, 1, 5, 0, 1, 9, 0, 5, 0, 0,

        0, 50, 0, 0, 51, 0, 0, 1, 1, 0, 5, 4, 0, 1, 1, 0, 5, 16, 0, 70, 0, 0, 0, 0, 2, 4,  // 9
   
        0, 93, 0, 8, 4, 0, 93, 0, 0, 28, 0, 0, 0, 0, 0, 93, 0, 93, 0, 28, 0, 18, 28, 0, 19, 0,

        0, 1, 1, 0, 5, 0, 5, 0, 5, 9, 0, 0, 0, 0, 71, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 333,

        0, 0, 0, 28, 0, 0, 0, 0, 0, 53, 54, 0, 53, 54, 0, 5, 9, 0, 93, 0, 93, 0, 0, 29, 0, 0,  // 12
   
        28, 0, 18, 0, 19, 0, 13, 0, 0, 0, 333, 0, 93, 0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0,

        53, 54, 0, 53, 54, 0, 13, 0, 18, 0, 19, 54, 0, 0, 50, 0, 0, 51, 0, 0, 72, 0, 0, 73, 0, 18,

        0, 1, 0, 9, 0, 0, 50, 0, 50, 0, 0, 51, 0, 51, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0,  // 15
    
        0, 0, 2, 8, 0, 5, 0, 76, 0, 53, 0, 54, 0, 0, 0, 333, 0, 0, 0, 0, 333, 0, 5, 0, 0, 0,

        17, 0, 9, 0, 0, 0, 105, 0, 0, 13, 0, 0, 106, 0, 0, 28, 0, 0, 0, 1, 5, 0, 1, 9, 0, 53,

        0, 54, 53, 0, 0, 93, 0, 93, 0, 93, 0, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 53, 54, 0,  // 18
   
        1, 5, 0, 1, 9, 0, 76, 0, 28, 0, 0, 0, 0, 72, 19, 0, 73, 18, 0, 50, 0, 51, 0, 50, 0, 51,

        0, 1, 1, 0, 5, 0, 5, 0, 9, 0, 76, 0, 53, 0, 76, 0, 54, 0, 1, 1, 0, 5, 9, 0, 0, 0,

        333, 0, 0, 17, 0, 0, 0, 76, 0, 12, 0, 0, 0, 76, 0, 13, 0, 0, 0, 1, 1, 9, 0, 53, 53, 0,   // 21
    
        54, 0, 54, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4,
   
        5, 0, 93, 0, 1, 6, 5, 0, 93, 0, 1, 1, 9, 28, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 53, 53,
   
        0, 93, 0, 0, 0, 1, 4, 5, 0, 71, 0, 1, 6, 5, 0, 70, 0, 105, 0, 13, 0, 106, 0, 0, 30, 0,  // 3
   
        31, 0, 1, 1, 5, 9, 0, 0, 0, 0, 50, 0, 105, 0, 0, 29, 0, 0, 51, 0, 106, 0, 0, 29, 0, 0,
   
        4, 0, 0, 0, 53, 0, 0, 54, 54, 0, 0, 53, 0, 93, 0, 0, 1, 1, 5, 0, 12, 0, 0, 1, 1, 9,  
  
        0, 13, 0, 0, 4, 1, 28, 0, 0, 0, 0, 0, 54, 0, 0, 53, 54, 0, 70, 0, 0, 2, 8, 2, 8, 4,  // 6
   
        2, 8, 2, 8, 76, 0, 28, 0, 0, 0, 0, 1, 9, 1, 5, 71, 53, 54, 0, 76, 0, 76, 0, 28, 0, 0,
   
        0, 0, 1, 1, 5, 0, 29, 0, 0, 105, 0, 0, 29, 0, 0, 106, 0, 0, 30, 0, 31, 0, 28, 0, 0, 0,
   
        0, 93, 0, 0, 93, 0, 0, 1, 5, 6, 0, 50, 0, 51, 0, 12, 0, 105, 0, 18, 0, 0, 0, 0, 1, 5,  // 9
   
        9, 0, 51, 0, 50, 0, 12, 0, 0, 19, 19, 0, 0, 0, 0, 1, 5, 1, 9, 0, 28, 0, 18, 18, 28, 0,
   
        0, 19, 19, 28, 0, 0, 28, 0, 0, 28, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9,
   
        0, 0, 0, 0, 12, 0, 0, 0, 0, 1, 5, 5, 4, 0, 53, 54, 53, 0, 1, 5, 5, 6, 0, 28, 0, 18,  // 12
   
        28, 0, 19, 0, 0, 5, 9, 0, 105, 0, 13, 0, 106, 0, 0, 0, 1, 1, 6, 5, 0, 54, 54, 0, 1, 1,
    
        4, 5, 0, 12, 0, 106, 0, 19, 0, 53, 0, 54, 0, 0, 72, 0, 73, 0, 18, 0, 50, 0, 0, 73, 0, 72,
    
        0, 19, 0, 51, 0, 0, 72, 19, 73, 18, 0, 50, 0, 51, 0, 1, 1, 5, 0, 1, 1, 9, 0, 28, 0, 0,  // 15
    
        0, 0, 1, 1, 5, 5, 0, 93, 0, 93, 0, 54, 0, 0, 0, 3, 0, 0, 0, 0, 76, 0, 5, 0, 0, 0,
   
        76, 0, 9, 0, 0, 0, 1, 5, 5, 4, 0, 72, 72, 19, 0, 73, 73, 18, 0, 30, 0, 31, 0, 30, 0, 31,
   
        0, 53, 53, 0, 0, 105, 0, 13, 0, 106, 0, 0, 0, 1, 6, 1, 5, 0, 54, 54, 0, 1, 4, 1, 4, 0,  // 18
   
        53, 54, 53, 0, 1, 5, 1, 9, 28, 0, 0, 0, 0, 72, 72, 73, 72, 19, 0, 73, 73, 72, 73, 18, 0, 50,
    
        51, 0, 1, 1, 5, 0, 1, 1, 9, 0, 76, 0, 53, 0, 76, 0, 54, 0, 1, 1, 5, 5, 9, 0, 0, 0,
    
        93, 0, 0, 93, 0, 0, 0, 30, 0, 31, 0, 12, 0, 0, 105, 0, 18, 0, 106, 0, 19, 0, 1, 1, 5, 0,   // 21
    
        1, 1, 9, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
