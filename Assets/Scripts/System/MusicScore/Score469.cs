using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score469 : MonoBehaviour
{
    //     41, 42 (CurveHat_Left)     43, 44 (CurveHat_Right)     76 (MultipleHitStar)     77 (MulitpleHitStar_Air)
    //     15  [101, 105, 102] (Note)      15 [103, 106, 104] (Note_EX)
    //     23, 24 (Left/Right)      21, 22 (Up/Down)
    //     80 [110, 111] (BoomStopStar)     81 (BoomStopStar_Random)
    //     12 [201, 202] (HookS)

    //     14 [120, 122] Ribbon

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 93, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0,

        0, 93, 0, 0, 93, 0, 0, 80, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0,

        1, 0, 1, 0, 9, 0, 0, 80, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 3
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 76, 0, 0, 1, 0, 81, 0, 76, 0,

        0, 93, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 103, 0, 0, 104, 0, 0, 0, 1, 5, 0, 1, 9, 0,

        81, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 4, 0, 1, 0, 5, 0, 0, 8, 0, 8, 0, 4, 0, 1, 0, // 6
  
        9, 0, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 80, 0, 76, 0, 81, 0, 0, 80, 80, 0, 5, 9, 0, 76,

        0, 0, 1, 1, 0, 5, 1, 0, 9, 0, 8, 4, 0, 2, 4, 0, 0, 0, 0, 1, 1, 0, 2, 2, 0, 4,

        0, 5, 0, 0, 1, 1, 0, 8, 8, 0, 5, 5, 0, 15, 0, 0, 0, 0, 0, 1, 81, 0, 5, 81, 0, 76, // 9
  
        0, 0, 1, 81, 0, 9, 81, 0, 76, 0, 0, 1, 5, 0, 1, 6, 0, 5, 4, 0, 5, 9, 0, 0, 0, 0,

        7, 0, 0, 0, 0, 2, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 4, 0, 0, 2, 2, 0, 5, 0, 0,

        80, 0, 94, 0, 0, 0, 1, 1, 0, 76, 0, 5, 4, 0, 81, 0, 81, 0, 1, 5, 0, 1, 9, 0, 2, 2, // 12
  
        0, 8, 8, 0, 76, 0, 76, 0, 1, 81, 0, 1, 81, 0, 80, 0, 80, 0, 0, 0, 201, 0, 0, 94, 202, 0,

        0, 94, 0, 1, 0, 1, 80, 0, 0, 0, 0, 201, 0, 0, 94, 202, 0, 0, 94, 0, 80, 0, 1, 81, 0, 0,

        0, 103, 0, 0, 106, 0, 0, 104, 0, 0, 94, 0, 104, 0, 0, 106, 0, 0, 103, 0, 0, 6, 1, 0, 4, 5, // 15
  
        0, 0, 0, 0, 1, 1, 0, 5, 5, 0, 8, 4, 0, 8, 4, 0, 1, 5, 0, 1, 9, 0, 93, 0, 93, 0,

        93, 0, 1, 1, 0, 5, 5, 0, 9, 0, 0, 1, 0, 5, 0, 1, 81, 0, 0, 0, 0, 0, 0, 3, 0, 3,

        0, 3, 0, 3, 0, 0, 80, 80, 0, 81, 0, 0, 0, 1, 2, 0, 1, 8, 0, 5, 0, 9, 0, 5, 5, 0, // 18
  
        94, 0, 0, 0, 103, 0, 0, 15, 0, 0, 104, 0, 0, 0, 80, 0, 80, 0, 0, 104, 0, 0, 15, 0, 0, 103,

        0, 0, 80, 80, 0, 1, 5, 0, 1, 81, 0, 0, 93, 0, 0, 2, 4, 0, 8, 8, 0, 5, 0, 0, 94, 0,

        0, 80, 80, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 23, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 93, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0,

        0, 81, 2, 2, 81, 2, 2, 80, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 41, 0, 0, 42, 0, 0, 0,

        43, 0, 0, 44, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 3
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 94, 0, 76, 0, 0, 111, 0, 94, 0, 76, 0,

        0, 93, 0, 81, 1, 2, 81, 1, 8, 0, 103, 0, 0, 106, 0, 0, 104, 0, 0, 0, 1, 1, 5, 1, 1, 9,

        0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 0, 1, 1, 9, 0, 0, 1, 0, 8, 0, 4, 0, 1, 1, // 6
  
        9, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 80, 94, 0, 76, 0, 0, 1, 1, 0, 80, 94, 0, 76,

        0, 0, 81, 1, 5, 0, 81, 1, 9, 0, 2, 8, 4, 0, 93, 0, 0, 0, 0, 1, 0, 5, 0, 4, 0, 1,

        5, 6, 0, 0, 1, 0, 5, 0, 4, 0, 1, 5, 9, 0, 15, 0, 0, 0, 0, 1, 5, 0, 80, 94, 0, 77, // 9
  
        0, 0, 1, 5, 0, 80, 94, 0, 77, 0, 0, 81, 5, 6, 0, 81, 5, 9, 0, 80, 80, 94, 0, 0, 0, 0,

        93, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8, 0, 0, 1, 2, 2, 5, 0, 1,

        8, 8, 9, 0, 0, 0, 80, 0, 76, 0, 77, 0, 1, 1, 5, 0, 93, 0, 1, 1, 9, 0, 93, 0, 2, 4, // 12
  
        2, 4, 81, 0, 76, 0, 77, 0, 80, 80, 0, 1, 5, 1, 9, 0, 80, 0, 0, 0, 41, 0, 0, 0, 43, 0,

        0, 0, 0, 80, 80, 0, 94, 0, 0, 0, 0, 42, 0, 0, 0, 44, 0, 0, 0, 0, 80, 80, 0, 94, 0, 0,

        0, 103, 0, 0, 80, 0, 0, 76, 0, 104, 0, 0, 80, 0, 0, 77, 0, 0, 80, 94, 0, 1, 5, 1, 9, 81, // 15
  
        0, 0, 0, 0, 2, 4, 8, 0, 5, 0, 8, 4, 2, 0, 80, 0, 1, 4, 1, 0, 93, 0, 1, 6, 1, 0,

        93, 0, 1, 5, 5, 0, 9, 5, 5, 0, 0, 93, 0, 93, 0, 93, 80, 0, 0, 0, 0, 0, 0, 201, 0, 0,

        12, 0, 0, 202, 0, 0, 1, 1, 5, 9, 0, 0, 0, 81, 1, 1, 81, 5, 5, 0, 93, 2, 2, 93, 8, 8, // 18
  
        9, 0, 0, 0, 81, 5, 9, 81, 5, 9, 0, 2, 2, 2, 0, 80, 94, 0, 0, 1, 5, 4, 0, 1, 5, 6,

        0, 93, 0, 81, 1, 5, 0, 81, 1, 9, 0, 93, 0, 93, 0, 1, 5, 0, 1, 9, 0, 80, 0, 0, 94, 94,

        94, 94, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database3 =
    {
        0,

        0, 101, 0, 15, 0, 102, 0, 0, 80, 110, 80, 0, 4, 0, 0, 102, 0, 15, 0, 101, 0, 0, 80, 111, 80, 0,
  
        0, 76, 4, 5, 76, 4, 5, 81, 0, 5, 0, 5, 0, 80, 0, 0, 0, 0, 0, 120, 14, 121, 0, 19, 20, 18,
 
        0, 120, 14, 121, 0, 92, 94, 91, 0, 0, 0, 2, 0, 0, 2, 0, 0, 8, 0, 8, 0, 8, 0, 0, 5, 0, // 3
  
        5, 0, 0, 2, 2, 8, 0, 4, 0, 5, 0, 0, 0, 94, 94, 2, 94, 94, 8, 0, 1, 1, 6, 0, 76, 0,
 
        0, 94, 94, 2, 94, 94, 8, 0, 1, 1, 4, 0, 1, 1, 6, 0, 80, 80, 0, 0, 81, 2, 80, 81, 8, 80,
  
        0, 0, 0, 3, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, 0, 0, 5, 1, 5, 0, 9, 1, 9, 0, // 6
  
        14, 0, 102, 19, 0, 0, 0, 0, 3, 0, 1, 5, 1, 9, 0, 94, 94, 94, 0, 5, 1, 5, 9, 0, 94, 94,
  
        94, 0, 2, 1, 4, 0, 8, 1, 4, 0, 5, 5, 9, 14, 0, 0, 0, 0, 0, 20, 94, 2, 0, 80, 14, 0,
  
        0, 81, 0, 0, 94, 20, 8, 0, 80, 14, 0, 0, 81, 14, 18, 0, 0, 0, 0, 1, 5, 1, 9, 0, 94, 94, // 9
  
        94, 0, 5, 1, 5, 9, 0, 20, 20, 20, 0, 1, 1, 6, 0, 1, 1, 4, 0, 20, 94, 20, 0, 0, 0, 0,
  
        93, 2, 2, 2, 93, 8, 8, 8, 3, 0, 93, 2, 2, 93, 8, 8, 3, 0, 1, 93, 5, 0, 1, 3, 5, 0,
  
        20, 20, 80, 0, 0, 0, 2, 0, 8, 0, 93, 0, 1, 5, 4, 0, 3, 0, 1, 5, 6, 0, 3, 0, 2, 2, // 12
  
        8, 8, 80, 0, 76, 76, 0, 80, 20, 80, 0, 76, 76, 0, 80, 94, 80, 0, 0, 0, 120, 0, 20, 14, 0, 3,
  
        122, 0, 94, 14, 0, 3, 120, 0, 0, 0, 0, 122, 0, 20, 14, 0, 3, 120, 0, 94, 14, 0, 3, 120, 0, 0,
  
        0, 80, 80, 1, 1, 80, 80, 0, 81, 81, 1, 1, 81, 81, 0, 7, 0, 0, 1, 5, 1, 9, 0, 81, 80, 81, // 15
  
        0, 0, 3, 0, 0, 1, 2, 1, 5, 0, 1, 8, 1, 5, 0, 94, 94, 2, 0, 94, 94, 2, 0, 1, 1, 5,
  
        0, 1, 1, 9, 0, 20, 94, 20, 94, 0, 0, 3, 0, 3, 0, 3, 80, 0, 0, 0, 0, 0, 0, 201, 0, 3,
  
        12, 0, 3, 202, 0, 3, 0, 1, 5, 9, 0, 0, 0, 1, 5, 1, 9, 0, 80, 80, 94, 94, 80, 80, 0, 93, // 18
  
        93, 0, 0, 0, 120, 0, 120, 3, 120, 0, 0, 0, 122, 0, 122, 3, 122, 0, 0, 5, 4, 5, 0, 5, 9, 5,
    
        0, 3, 0, 3, 0, 1, 1, 5, 1, 1, 9, 0, 3, 93, 0, 2, 4, 0, 8, 4, 0, 81, 0, 0, 20, 2,
   
        94, 2, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium", score_database3, "Medium");
    }
}
