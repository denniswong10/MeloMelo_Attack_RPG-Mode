using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score538 : MonoBehaviour
{
    //    91, 92 (FixedAttack)      911, 94, 912 (FixedAirAttack)      18, 20, 19 (FixedHeartPack)
    //    101, 14, 102 (Ribbon)       12 [204, 203, 205] HookS       85, 86 (RatingFogToggle)
    //    100 (JumpAcrossToOtherSide)     71, 70 (ItemStrikeWithItem3)      76 (MultipleHitStar)
    //    77 (MulitpleHitStar_Air)      110, 80, 111 (BoomStopStar)       83 (BoomStopStar_v2)
    //    58, 59 (Item3_Multiple)       74 (QuickDodgeWithItem3)      40 (SplitBomb)
    //    88 (ThirdHalf_MultipleHitStar)      52 (Circle2)       73 (SplitBombWithItem3)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 1, 1, 0, 5, 0, 5, 0, 2, 2, 93, 0, 3, 0, 71, 0, 0, 70, 0, 1, 5, 0, 9, 0, 83, 0,

        0, 80, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 100, 2, 100, 8, 0, 14, 0, 20, 94, 0, 3, 0, 93, 0,

        3, 0, 1, 5, 5, 0, 52, 0, 0, 0, 0, 1, 5, 6, 0, 1, 5, 9, 0, 100, 1, 100, 1, 0, 14, 0,  // 3
   
        94, 94, 0, 1, 1, 0, 5, 80, 0, 3, 0, 83, 0, 70, 0, 1, 1, 5, 5, 0, 6, 5, 5, 9, 0, 14,

        0, 0, 20, 14, 0, 94, 94, 0, 40, 0, 1, 5, 83, 0, 1, 9, 83, 0, 0, 0, 100, 91, 91, 0, 100, 92,

        92, 0, 19, 20, 18, 0, 94, 0, 76, 9, 5, 0, 83, 0, 1, 1, 5, 9, 0, 0, 3, 0, 40, 0, 0, 88,  // 6
  
        0, 5, 9, 5, 0, 93, 0, 93, 0, 93, 0, 80, 0, 88, 0, 77, 5, 9, 0, 93, 0, 93, 0, 93, 0, 80,

        0, 76, 9, 0, 77, 5, 0, 110, 0, 80, 0, 111, 0, 80, 0, 88, 0, 76, 9, 76, 0, 80, 0, 0, 52, 0,

        20, 0, 20, 0, 0, 0, 0, 1, 1, 5, 0, 83, 0, 80, 80, 0, 1, 1, 9, 0, 83, 0, 80, 80, 0, 76,  // 9
  
        0, 76, 0, 0, 93, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 6, 5, 6, 0, 5, 9, 5, 9, 0, 2,

        2, 8, 0, 14, 0, 0, 70, 0, 0, 0, 2, 1, 5, 0, 8, 1, 5, 0, 100, 91, 100, 0, 92, 100, 91, 91,

        0, 101, 0, 14, 0, 0, 102, 0, 14, 0, 0, 20, 20, 0, 80, 0, 0, 2, 8, 2, 0, 14, 0, 18, 19, 0,  // 12
   
        93, 0, 0, 8, 2, 8, 0, 14, 0, 20, 20, 0, 93, 0, 0, 2, 2, 2, 0, 14, 0, 19, 18, 0, 93, 0,

        0, 1, 8, 5, 0, 1, 2, 9, 0, 2, 2, 93, 8, 0, 83, 0, 101, 0, 102, 0, 102, 0, 101, 0, 1, 5,

        80, 0, 0, 0, 2, 2, 0, 0, 5, 0, 0, 0, 2, 4, 0, 8, 4, 0, 0, 0, 1, 2, 2, 0, 1, 8,  // 15
  
        8, 0, 74, 0, 0, 0, 74, 0, 0, 1, 1, 5, 5, 0, 74, 0, 0, 0, 74, 0, 0, 0, 74, 0, 0, 2,

        2, 8, 8, 0, 74, 0, 1, 1, 5, 0, 1, 1, 9, 0, 101, 0, 14, 0, 102, 0, 912, 14, 0, 101, 0, 911,

        0, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 911, 100, 912, 100, 0, 0, 0, 1, 1, 0, 5, 9, 0, 83,  // 18
  
        0, 80, 0, 2, 8, 8, 4, 0, 977, 0, 1, 5, 6, 0, 1, 5, 9, 0, 912, 100, 911, 100, 0, 14, 0, 94,

        94, 0, 4, 2, 0, 4, 8, 5, 0, 93, 0, 93, 0, 40, 1, 5, 0, 1, 1, 9, 0, 100, 100, 110, 0, 18,

        20, 19, 0, 14, 0, 0, 76, 9, 0, 77, 5, 0, 2, 8, 0, 2, 8, 5, 0, 0, 977, 0, 100, 2, 100, 1,  // 21
  
        0, 100, 8, 100, 1, 0, 5, 5, 5, 0, 80, 80, 0, 9, 5, 0, 14, 0, 0, 3, 40, 0, 52, 0, 0, 0,

        14, 0, 94, 101, 0, 94, 102, 0, 94, 101, 0, 94, 0, 0, 76, 9, 0, 77, 5, 0, 1, 1, 5, 5, 0, 80,

        0, 0, 40, 0, 100, 1, 100, 5, 0, 100, 1, 100, 9, 0, 14, 0, 0, 0, 1, 1, 0, 5, 0, 20, 0, 94,  // 24
   
        0, 0, 3, 0, 40, 0, 74, 0, 100, 18, 911, 0, 100, 19, 912, 0, 1, 5, 1, 9, 0, 76, 77, 0, 80, 0,

        83, 0, 80, 0, 1, 2, 0, 1, 8, 0, 0, 0, 100, 911, 911, 0, 100, 912, 912, 0, 102, 0, 14, 0, 101, 0,

        94, 0, 94, 0, 2, 2, 2, 0, 8, 8, 8, 0, 83, 80, 0, 0, 0, 0, 1, 2, 2, 5, 0, 1, 8, 8,  // 27
  
        5, 0, 93, 93, 0, 2, 0, 8, 0, 1, 1, 5, 0, 14, 0, 20, 0, 93, 0, 93, 0, 0, 1, 1, 5, 5,

        0, 83, 83, 0, 1, 1, 5, 9, 0, 14, 0, 0, 977, 0, 0, 83, 83, 0, 5, 0, 80, 80, 0, 5, 0, 14,

        14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  // 30
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 101, 0, 94, 102, 0, 94, 0, 2, 2, 8, 2, 2, 0, 86, 0, 91, 86, 0, 18, 20, 19, 20, 0, 12, 0,
   
        0, 83, 0, 0, 100, 92, 92, 0, 100, 91, 91, 0, 100, 91, 100, 92, 0, 14, 0, 18, 19, 0, 3, 0, 93, 0,
   
        71, 0, 18, 20, 19, 20, 18, 83, 0, 0, 0, 100, 911, 911, 0, 100, 912, 912, 0, 100, 911, 100, 912, 0, 14, 0,  // 3
   
        19, 18, 0, 1, 1, 5, 5, 9, 0, 3, 0, 93, 0, 70, 0, 100, 102, 19, 912, 0, 100, 101, 18, 911, 0, 83,
   
        83, 0, 1, 4, 2, 0, 1, 4, 8, 0, 94, 94, 91, 94, 92, 0, 12, 0, 0, 0, 100, 19, 912, 0, 100, 18,
  
        911, 0, 101, 911, 14, 0, 94, 0, 102, 912, 14, 0, 94, 0, 1, 5, 1, 9, 0, 0, 93, 0, 3, 0, 0, 76,  // 6
  
        76, 0, 76, 76, 0, 71, 0, 93, 0, 93, 0, 93, 0, 76, 76, 0, 76, 76, 0, 70, 0, 93, 0, 93, 0, 93,
  
        0, 76, 77, 0, 76, 77, 0, 70, 0, 93, 0, 93, 0, 93, 0, 77, 76, 0, 77, 76, 0, 70, 0, 0, 204, 0,
  
        203, 0, 205, 0, 0, 0, 0, 110, 94, 94, 0, 2, 2, 8, 8, 0, 111, 94, 94, 0, 8, 8, 2, 2, 0, 1,  // 9
  
        1, 5, 0, 0, 7, 0, 1, 1, 0, 76, 77, 83, 0, 101, 0, 102, 0, 912, 912, 0, 3, 1, 1, 5, 0, 1,
   
        1, 9, 0, 80, 0, 0, 85, 0, 0, 0, 1, 1, 5, 0, 100, 91, 911, 0, 100, 92, 912, 0, 18, 94, 19, 94,
   
        18, 0, 102, 0, 101, 0, 911, 911, 0, 3, 1, 5, 9, 0, 80, 0, 0, 59, 0, 91, 0, 58, 0, 92, 0, 0,  // 12
   
        71, 0, 58, 58, 0, 92, 0, 92, 0, 0, 71, 0, 59, 59, 59, 0, 91, 91, 0, 0, 70, 0, 58, 58, 0, 92,
   
        0, 59, 59, 0, 91, 0, 0, 70, 0, 1, 1, 5, 9, 0, 83, 0, 101, 14, 102, 0, 101, 14, 102, 0, 19, 18,
   
        80, 0, 0, 0, 3, 0, 0, 0, 40, 0, 0, 0, 2, 2, 93, 8, 8, 0, 0, 0, 74, 0, 0, 0, 74, 0,  // 15
  
        0, 0, 74, 0, 0, 0, 74, 101, 0, 74, 0, 8, 8, 74, 0, 102, 0, 74, 0, 8, 8, 74, 0, 14, 0, 74,
  
        0, 5, 5, 74, 0, 80, 110, 74, 0, 80, 111, 74, 0, 7, 88, 0, 88, 0, 77, 0, 88, 0, 88, 0, 14, 0,
   
        0, 0, 0, 0, 101, 18, 18, 100, 0, 102, 19, 19, 100, 0, 93, 52, 0, 0, 0, 2, 8, 0, 1, 5, 0, 83,  // 18
  
        83, 83, 0, 1, 2, 2, 9, 0, 7, 0, 100, 18, 20, 912, 0, 100, 19, 20, 911, 0, 110, 80, 111, 0, 94, 0,
  
        71, 2, 2, 0, 71, 8, 8, 5, 0, 93, 0, 40, 0, 73, 18, 911, 0, 100, 19, 912, 0, 100, 18, 911, 0, 18,
  
        94, 19, 0, 93, 3, 0, 77, 83, 0, 77, 83, 0, 1, 1, 5, 1, 1, 9, 0, 0, 7, 0, 100, 91, 911, 80,  // 21
  
        0, 100, 92, 912, 80, 0, 71, 2, 1, 0, 70, 8, 1, 0, 5, 5, 14, 0, 0, 7, 7, 0, 73, 52, 0, 0,
  
        0, 80, 0, 100, 19, 18, 110, 0, 100, 18, 19, 111, 0, 0, 2, 2, 93, 8, 8, 0, 1, 5, 5, 1, 9, 9,
   
        0, 0, 40, 0, 100, 911, 91, 71, 0, 100, 912, 92, 71, 0, 14, 0, 0, 0, 1, 1, 0, 5, 0, 14, 0, 94,  // 24
   
        0, 0, 71, 0, 70, 0, 73, 0, 911, 100, 912, 0, 92, 94, 91, 0, 101, 0, 18, 14, 0, 20, 102, 0, 19, 0,
   
        76, 0, 77, 0, 1, 1, 0, 83, 9, 0, 0, 0, 912, 100, 911, 0, 91, 94, 92, 0, 102, 0, 19, 14, 0, 20,
   
        101, 0, 18, 0, 76, 0, 77, 0, 83, 0, 1, 1, 5, 9, 0, 3, 40, 0, 74, 0, 0, 74, 0, 0, 74, 0,  // 27
  
        0, 1, 1, 5, 0, 2, 0, 2, 0, 8, 8, 8, 0, 14, 0, 20, 911, 94, 912, 111, 0, 0, 74, 8, 8, 74,
   
        2, 2, 74, 0, 76, 77, 0, 76, 77, 14, 0, 0, 3, 0, 0, 1, 2, 2, 5, 0, 1, 8, 8, 5, 0, 14,
    
        14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  // 30
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
