using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score462 : MonoBehaviour
{
    //    101, 103, 108, 106 (44) 4-Keys    81, 82 (CombinePickStar)    48 (4-KeyTap)
    //    30, 31 (Sweep)    18, 20, 19 (FixedHeartPack)    40 (SplitBomb)    46 (6-Key)
    //    94 (FixedAirAttack)
    //    70 (StrikeWithItem3)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 8, 8, 0, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0,

        9, 0, 0, 48, 0, 0, 1, 0, 0, 5, 4, 0, 1, 0, 0, 9, 5, 0, 0, 46, 0, 0, 1, 0, 5, 0,

        1, 0, 9, 0, 0, 2, 4, 0, 8, 4, 0, 46, 0, 1, 5, 0, 4, 0, 0, 1, 5, 0, 9, 0, 7, 0, // 3
  
        0, 30, 0, 0, 31, 0, 0, 30, 0, 0, 31, 0, 0, 0, 1, 5, 0, 1, 9, 0, 30, 0, 0, 31, 0, 0,

        20, 0, 20, 0, 0, 0, 1, 0, 5, 0, 2, 2, 0, 8, 8, 0, 9, 0, 0, 0, 1, 0, 9, 0, 2, 8,

        0, 2, 8, 0, 5, 0, 9, 0, 0, 0, 101, 0, 0, 108, 0, 0, 81, 0, 0, 82, 0, 0, 1, 1, 0, 5, // 6
  
        9, 0, 2, 0, 4, 0, 8, 0, 4, 0, 7, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 31,

        0, 0, 0, 46, 0, 48, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 5, 5, 0, 30, 0, 0, 20, 0, 0, 31,

        0, 0, 20, 0, 0, 1, 5, 0, 1, 9, 0, 2, 4, 0, 8, 4, 0, 7, 0, 0, 0, 3, 0, 0, 40, 0, // 9
  
        0, 2, 0, 2, 0, 2, 0, 5, 0, 0, 3, 0, 0, 40, 0, 0, 0, 1, 5, 0, 1, 9, 0, 46, 0, 1,

        0, 48, 0, 0, 0, 93, 0, 0, 5, 0, 0, 93, 0, 0, 2, 93, 0, 0, 5, 0, 0, 1, 1, 0, 9, 0,

        0, 1, 0, 5, 0, 0, 93, 8, 0, 93, 1, 0, 9, 0, 2, 2, 0, 5, 0, 8, 8, 0, 9, 0, 46, 0, // 12
  
        46, 48, 0, 46, 48, 0, 48, 48, 0, 94, 0, 1, 0, 5, 0, 1, 0, 9, 0, 2, 8, 0, 46, 0, 0, 0,

        0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 101, 0, 108, 0, 103, 0, 106, 0, 81, 0, 82, 0, 1, 1, 0,

        5, 0, 1, 1, 0, 6, 0, 46, 0, 48, 0, 94, 0, 0, 0, 0, 108, 0, 101, 0, 106, 0, 103, 0, 82, 0, // 15
 
        81, 0, 1, 1, 0, 46, 48, 0, 46, 48, 0, 5, 0, 9, 0, 0, 0, 0, 0, 1, 1, 0, 30, 0, 0, 0,

        1, 1, 0, 31, 0, 0, 0, 94, 0, 108, 0, 101, 0, 94, 0, 106, 0, 103, 0, 20, 0, 0, 48, 0, 0, 0,

        93, 0, 0, 0, 1, 4, 0, 1, 46, 0, 0, 1, 1, 0, 46, 48, 0, 0, 1, 1, 0, 5, 48, 0, 5, 46, // 18
 
        0, 20, 94, 0, 0, 3, 0, 0, 7, 0, 0, 2, 0, 8, 8, 0, 0, 40, 0, 0, 7, 0, 0, 46, 0, 46,

        0, 48, 0, 1, 46, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 0, 101, 0, 0, 82, 0, 0, 108, 0, 0,
  
        81, 0, 0, 48, 0, 0, 101, 0, 0, 82, 101, 0, 108, 0, 0, 81, 108, 0, 0, 5, 0, 0, 2, 4, 8, 0,
  
        5, 5, 48, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 101, 18, 0, 82, 0, 0, 108, 19, 0, 81, 0, 48, 0, // 3
  
        0, 30, 0, 0, 30, 0, 0, 31, 0, 0, 31, 0, 0, 94, 30, 0, 0, 30, 0, 0, 31, 0, 0, 31, 0, 0,
   
        101, 0, 48, 0, 0, 0, 1, 1, 5, 0, 101, 81, 0, 108, 82, 0, 94, 0, 0, 0, 1, 1, 9, 0, 108, 82,
  
        0, 101, 81, 0, 1, 5, 9, 0, 0, 0, 101, 101, 82, 0, 48, 0, 108, 108, 81, 0, 48, 0, 18, 0, 20, 0, // 6
  
        19, 0, 1, 1, 5, 0, 1, 1, 9, 0, 48, 0, 0, 30, 0, 20, 0, 31, 0, 20, 0, 30, 19, 20, 18, 0,
  
        31, 18, 20, 19, 0, 48, 0, 0, 1, 1, 0, 20, 0, 1, 1, 0, 20, 20, 0, 30, 0, 0, 30, 0, 0, 31,
  
        0, 0, 31, 0, 0, 108, 81, 0, 101, 82, 0, 18, 20, 19, 0, 48, 9, 0, 0, 0, 0, 40, 0, 0, 46, 0, // 9
  
        0, 40, 0, 46, 0, 40, 0, 46, 0, 5, 5, 0, 0, 48, 8, 8, 0, 40, 8, 8, 0, 46, 8, 48, 0, 1,
  
        5, 4, 0, 0, 0, 40, 0, 0, 48, 0, 0, 40, 0, 0, 46, 48, 0, 0, 40, 0, 0, 2, 8, 2, 5, 0,
  
        0, 1, 1, 5, 0, 0, 46, 2, 8, 0, 48, 2, 8, 0, 94, 94, 94, 103, 94, 94, 94, 106, 94, 94, 94, 0, // 12
  
        103, 94, 106, 94, 101, 94, 108, 94, 94, 94, 0, 30, 0, 20, 0, 31, 0, 94, 0, 1, 5, 1, 9, 0, 0, 0,
  
        0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 101, 0, 82, 0, 20, 108, 0, 81, 0, 20, 0, 46, 2, 8, 48,
 
        2, 8, 0, 1, 5, 4, 0, 1, 5, 6, 0, 30, 0, 0, 0, 0, 108, 0, 81, 0, 20, 101, 0, 82, 0, 20, // 15
 
        0, 46, 2, 8, 48, 2, 8, 0, 5, 9, 0, 1, 5, 4, 0, 0, 3, 0, 0, 1, 2, 4, 0, 46, 0, 1,
  
        8, 4, 0, 48, 0, 20, 20, 101, 0, 20, 20, 108, 0, 94, 94, 101, 0, 94, 94, 108, 0, 0, 48, 0, 0, 0,
  
        3, 0, 0, 0, 1, 1, 0, 5, 46, 0, 0, 1, 5, 0, 9, 46, 0, 0, 1, 5, 9, 0, 48, 48, 0, 1, // 18
 
        1, 5, 9, 0, 0, 3, 0, 0, 40, 0, 0, 2, 2, 8, 8, 0, 0, 3, 0, 0, 40, 0, 0, 46, 2, 8,
 
        48, 0, 1, 5, 1, 9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
