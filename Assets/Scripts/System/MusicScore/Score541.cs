using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score541 : MonoBehaviour
{
    // 100 (JumpArcossOtherSide)      110, 80, 111 (BoomStopStar)    32, 33 (Bump)
    // 18, 20, 19 (FixedHeartPack)     91, 94, 92 (FixedAirAttack)    58, 59 (Item3_Multiple)
    // 107, 21, 108 (TapWithAirAttack)   70 (ItemStrikeWithItem3)     74 (SplitBombWithItem3)
    // 45 [109, 112] 4-Keys     81, 82 (CombinePickStar)      40 (SplitBomb)      76 (MultipleHitStar)
    // 34 (PonyDiamond)    181, 182 (FixedItem3)       101, 14, 102 (Ribbon)     114, 115 (PatternFollowStar)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 1, 1, 5, 0, 1, 1, 9, 0, 1, 1, 5, 0, 80, 0, 58, 59, 0, 18, 20, 92, 0, 19, 20, 91, 0,

        18, 20, 92, 0, 80, 0, 0, 3, 0, 18, 18, 45, 0, 20, 94, 0, 19, 19, 45, 0, 3, 0, 1, 6, 1, 0,

        14, 0, 18, 19, 0, 0, 100, 1, 1, 0, 100, 1, 1, 0, 5, 5, 5, 0, 80, 0, 0, 100, 5, 100, 0, 100, // 3
  
        5, 100, 0, 76, 0, 76, 0, 80, 0, 0, 109, 45, 112, 45, 109, 80, 0, 1, 1, 5, 0, 9, 0, 0, 14, 0,

        18, 20, 18, 0, 14, 0, 19, 20, 19, 0, 977, 0, 70, 0, 0, 34, 0, 0, 0, 977, 0, 977, 0, 0, 110, 110,

        21, 0, 58, 0, 59, 0, 977, 0, 1, 5, 0, 1, 9, 9, 0, 0, 1, 0, 34, 0, 977, 0, 977, 0, 20, 0, // 6
   
        0, 111, 111, 21, 0, 59, 0, 58, 0, 977, 0, 1, 5, 0, 1, 9, 9, 0, 0, 45, 80, 45, 0, 0, 109, 80,

        112, 0, 0, 5, 9, 5, 0, 9, 5, 9, 0, 76, 0, 1, 5, 5, 0, 80, 80, 0, 1, 9, 9, 0, 80, 21,

        0, 1, 1, 5, 1, 1, 9, 0, 45, 109, 80, 112, 45, 80, 21, 0, 0, 14, 0, 18, 20, 19, 0, 0, 2, 0, // 9
   
        0, 8, 0, 0, 0, 1, 2, 5, 0, 9, 0, 1, 8, 5, 0, 9, 0, 0, 0, 14, 0, 0, 20, 20, 94, 0,

        80, 0, 0, 109, 94, 112, 0, 0, 2, 2, 93, 0, 0, 8, 8, 93, 0, 0, 5, 45, 5, 0, 14, 0, 0, 94,

        0, 0, 977, 0, 0, 8, 0, 0, 2, 0, 0, 0, 1, 1, 2, 0, 5, 0, 1, 1, 8, 0, 9, 0, 0, 0, // 12
  
        14, 0, 0, 20, 20, 94, 0, 80, 0, 0, 112, 94, 109, 0, 0, 2, 1, 3, 0, 0, 8, 1, 3, 0, 0, 5,

        80, 5, 0, 14, 0, 20, 94, 0, 0, 2, 1, 5, 0, 80, 0, 21, 0, 8, 1, 9, 0, 80, 0, 0, 1, 1,

        5, 9, 0, 14, 0, 91, 94, 92, 0, 34, 0, 0, 977, 0, 0, 0, 110, 80, 0, 111, 80, 0, 0, 1, 1, 5, // 15
  
        0, 1, 1, 9, 0, 101, 14, 102, 0, 0, 92, 0, 102, 14, 101, 0, 0, 91, 0, 0, 1, 1, 0, 5, 5, 5,

        0, 45, 109, 0, 45, 112, 0, 0, 14, 0, 0, 20, 0, 94, 94, 0, 1, 1, 5, 1, 1, 9, 0, 80, 0, 110,

        110, 110, 0, 80, 80, 80, 0, 111, 111, 111, 0, 19, 20, 18, 0, 18, 20, 19, 0, 14, 0, 94, 94, 0, 0, 1, // 18
  
        2, 2, 2, 0, 6, 2, 2, 2, 0, 9, 9, 5, 0, 14, 0, 14, 0, 0, 3, 0, 76, 0, 76, 0, 1, 1,

        0, 5, 5, 9, 0, 80, 80, 0, 82, 81, 0, 100, 0, 100, 0, 1, 1, 5, 5, 0, 14, 0, 0, 977, 977, 0,

        101, 0, 14, 92, 102, 0, 14, 91, 101, 0, 21, 21, 21, 0, 102, 0, 14, 91, 101, 0, 14, 92, 102, 0, 21, 21, // 21
  
        21, 0, 1, 1, 5, 0, 80, 107, 0, 80, 108, 0, 58, 0, 59, 0, 101, 0, 18, 91, 0, 102, 0, 19, 92, 0,

        0, 0, 76, 76, 0, 9, 5, 9, 0, 977, 0, 76, 76, 0, 6, 5, 6, 0, 1, 1, 5, 0, 1, 1, 9, 0,

        14, 0, 18, 20, 19, 0, 94, 20, 18, 0, 94, 20, 19, 0, 3, 70, 0, 74, 0, 1, 5, 6, 0, 1, 5, 9, // 24
   
        0, 76, 0, 80, 80, 0, 76, 76, 0, 9, 9, 0, 0, 0, 2, 0, 0, 0, 8, 0, 8, 0, 0, 0, 1, 0,

        0, 0, 0, 5, 0, 0, 0, 977, 0, 0, 977, 0, 0, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 8, 0, 8,

        0, 5, 0, 0, 0, 9, 0, 0, 0, 1, 1, 0, 0, 0, 5, 0, 0, 0, 2, 4, 0, 0, 8, 4, 0, 14, // 27
   
        0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 80, 0, 0, 2, 8, 0, 0, 110, 110, 0, 102, 0, 0, 111,

        111, 0, 101, 0, 0, 977, 0, 1, 5, 0, 1, 9, 0, 80, 0, 21, 0, 80, 0, 2, 2, 8, 8, 0, 0, 101,

        0, 0, 101, 0, 0, 0, 102, 0, 0, 102, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 1, 1, 5, 0, 0, // 30
  
        1, 1, 9, 0, 2, 0, 2, 0, 45, 0, 8, 0, 8, 0, 80, 0, 0, 93, 0, 0, 1, 2, 0, 1, 8, 0,

        1, 5, 0, 9, 0, 0, 45, 45, 0, 109, 0, 112, 0, 109, 0, 45, 80, 0, 0, 45, 45, 0, 112, 0, 109, 0,

        14, 0, 0, 94, 0, 1, 5, 1, 5, 9, 0, 14, 0, 14, 0, 0, 94, 0, 110, 80, 111, 21, 110, 0, 18, 94, // 33
   
        19, 0, 14, 0, 91, 94, 92, 0, 977, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 100, 2, 2, 100, 1, 5, 0, 100, 8, 8, 100, 1, 94, 0, 58, 59, 0, 100, 1, 1, 100, 1, 5, 0, 100,
  
        1, 1, 100, 1, 9, 0, 0, 32, 0, 18, 94, 33, 0, 19, 94, 0, 107, 80, 108, 0, 70, 0, 2, 8, 74, 0,
   
        1, 1, 5, 5, 0, 0, 109, 81, 45, 0, 76, 9, 5, 0, 5, 76, 9, 0, 80, 0, 0, 112, 82, 45, 0, 76, // 3
  
        9, 5, 0, 5, 76, 9, 0, 80, 0, 0, 110, 110, 80, 80, 111, 111, 0, 100, 1, 1, 5, 5, 0, 0, 110, 21,
  
        111, 80, 110, 21, 111, 0, 112, 109, 80, 0, 3, 0, 40, 0, 1, 34, 0, 18, 20, 19, 0, 91, 0, 0, 110, 80,
   
        111, 0, 58, 0, 59, 0, 58, 0, 80, 80, 0, 76, 76, 9, 0, 0, 1, 1, 34, 0, 19, 20, 18, 0, 92, 0, // 6
   
        0, 110, 21, 111, 0, 59, 0, 58, 0, 59, 0, 80, 80, 0, 76, 76, 9, 0, 0, 109, 112, 80, 0, 0, 112, 109,
  
        80, 0, 0, 76, 76, 94, 0, 76, 76, 20, 94, 0, 18, 20, 19, 20, 18, 80, 21, 0, 82, 82, 20, 20, 81, 81,
  
        0, 111, 92, 80, 94, 110, 91, 0, 82, 82, 20, 94, 20, 81, 81, 0, 0, 110, 21, 111, 0, 70, 0, 0, 181, 0, // 9
   
        0, 181, 0, 0, 0, 2, 2, 93, 0, 45, 0, 8, 8, 93, 0, 45, 0, 0, 0, 93, 0, 0, 1, 1, 5, 0,
   
        80, 0, 0, 109, 109, 80, 0, 0, 112, 112, 80, 0, 0, 82, 80, 82, 0, 0, 81, 80, 81, 0, 0, 20, 94, 0,
  
        3, 0, 40, 0, 0, 182, 0, 0, 182, 0, 0, 0, 1, 2, 93, 0, 45, 0, 1, 8, 93, 0, 45, 0, 0, 0, // 12
  
        93, 0, 0, 1, 1, 5, 0, 21, 0, 0, 109, 91, 80, 0, 0, 112, 92, 80, 0, 0, 91, 21, 111, 0, 0, 92,
  
        21, 110, 0, 0, 20, 94, 0, 0, 0, 1, 1, 5, 0, 45, 0, 80, 0, 1, 1, 9, 0, 80, 0, 0, 1, 5,
  
        1, 9, 0, 20, 91, 0, 20, 92, 0, 14, 0, 0, 3, 0, 0, 110, 110, 21, 0, 111, 111, 21, 0, 18, 19, 111, // 15
  
        0, 19, 18, 110, 0, 34, 0, 91, 20, 92, 20, 0, 9, 21, 0, 76, 9, 5, 0, 76, 9, 5, 0, 5, 9, 5,
  
        7, 0, 101, 0, 0, 14, 0, 0, 102, 0, 0, 3, 0, 3, 70, 0, 101, 18, 94, 19, 102, 19, 94, 18, 0, 110,
  
        80, 111, 80, 110, 21, 111, 0, 19, 20, 18, 94, 19, 20, 18, 0, 181, 182, 0, 80, 0, 0, 74, 0, 0, 0, 101, // 18
  
        14, 102, 0, 92, 102, 0, 14, 0, 0, 107, 80, 108, 0, 111, 21, 110, 94, 0, 3, 0, 2, 8, 0, 1, 4, 2,
  
        0, 1, 4, 8, 0, 76, 9, 0, 76, 9, 0, 1, 1, 5, 0, 100, 1, 100, 5, 100, 101, 0, 0, 59, 58, 0,
  
        102, 14, 101, 0, 91, 101, 0, 14, 0, 0, 108, 80, 107, 0, 110, 21, 111, 94, 0, 3, 0, 2, 8, 0, 6, 2, // 21
  
        1, 0, 6, 8, 1, 0, 76, 9, 0, 76, 9, 0, 100, 76, 0, 100, 76, 0, 14, 0, 0, 9, 80, 0, 58, 59,
   
        0, 0, 107, 114, 0, 0, 108, 115, 0, 0, 0, 82, 81, 0, 94, 109, 94, 112, 0, 76, 76, 9, 0, 76, 76, 9,
   
        0, 20, 109, 94, 112, 20, 0, 110, 80, 110, 0, 111, 80, 111, 0, 70, 0, 74, 0, 110, 21, 110, 0, 111, 21, 111, // 24
   
        0, 102, 0, 19, 94, 0, 1, 5, 1, 5, 9, 0, 0, 0, 2, 0, 0, 0, 8, 0, 8, 0, 0, 0, 93, 0,
   
        0, 0, 0, 93, 0, 0, 0, 4, 0, 0, 7, 0, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 8, 0, 8,
   
        0, 5, 0, 0, 0, 93, 0, 0, 0, 4, 4, 5, 0, 0, 7, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 14, // 27
   
        0, 0, 1, 6, 1, 0, 1, 1, 1, 0, 6, 5, 9, 0, 0, 7, 70, 0, 0, 110, 110, 82, 82, 0, 0, 111,
   
        111, 81, 81, 0, 0, 70, 2, 1, 5, 0, 70, 8, 1, 5, 0, 3, 0, 70, 0, 1, 1, 5, 9, 0, 0, 101,
  
        0, 0, 20, 20, 94, 0, 102, 0, 0, 20, 20, 94, 0, 0, 14, 0, 0, 18, 19, 94, 0, 0, 1, 2, 2, 0, // 30
  
        1, 8, 8, 0, 93, 0, 93, 0, 45, 0, 93, 0, 93, 0, 80, 0, 0, 3, 0, 0, 2, 2, 4, 8, 8, 0,
  
        1, 5, 0, 70, 0, 0, 2, 2, 0, 8, 0, 8, 0, 5, 0, 1, 1, 0, 2, 4, 8, 0, 5, 5, 9, 0,
  
        14, 0, 0, 7, 0, 110, 82, 80, 81, 111, 0, 102, 14, 101, 0, 0, 70, 0, 111, 81, 80, 82, 110, 0, 101, 14, // 33
   
        102, 0, 0, 70, 0, 70, 7, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
