using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score334 : MonoBehaviour
{
    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 21, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 8,

        5, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 5, 0, 0, 5, 0, 0,

        2, 0, 2, 0, 5, 0, 5, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 5, 0, 0, 2, 0, 2, 0, 4, 0, // 3
 
        8, 0, 8, 0, 4, 0, 0, 0, 21, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,

        5, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 0, 5, 0, 0,

        2, 8, 0, 4, 0, 0, 5, 0, 0, 5, 0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 5, 0, 0, 9, // 6
   
        0, 8, 0, 8, 0, 4, 0, 2, 0, 2, 0, 5, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 50, 0, 0, 50, 0, 0, 50, 0, 0, 5, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,

        0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, // 9
  
        0, 5, 0, 0, 0, 0, 0, 8, 0, 8, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,

        0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 8, 8, 0, 50, 0, 0, 0, 0,

        102, 0, 0, 0, 0, 0, 0, 0, 5, 0, 8, 8, 0, 2, 2, 0, 9, 0, 0, 0, 0, 0, 0, 5, 0, 0, // 12
  
        0, 0, 5, 0, 0, 0, 2, 0, 2, 0, 5, 0, 0, 8, 0, 8, 0, 5, 0, 0, 1, 0, 0, 5, 0, 0,

        1, 0, 0, 5, 0, 0, 2, 2, 0, 0, 4, 0, 0, 8, 8, 0, 0, 4, 0, 0, 5, 0, 0, 9, 0, 0,

        5, 0, 102, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 2, 0, 0, 8, // 15
  
        0, 5, 0, 1, 0, 1, 0, 2, 4, 0, 5, 0, 8, 4, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,

        0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 1, 0,

        0, 5, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 0, 0, 1, 0, 5, 0, 1, 0, 5, 102, 0, 0, 0, 0, // 18
  
        0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 2, 2, 0, 5, 0, 0, 8, 8, 0, 5, 0, 0, 4, 0,

        0, 2, 2, 0, 50, 0, 0, 8, 8, 0, 50, 0, 0, 5, 0, 0, 5, 0, 0, 2, 2, 0, 8, 8, 0, 5,

        5, 0, 0, 50, 0, 0, 0, 0, 2, 0, 8, 0, 4, 0, 2, 0, 8, 0, 4, 0, 0, 21, 0, 0, 0, 0, // 21
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0,

        0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 5, 0, 0, 102, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, // 24
  
        21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 50, 0, 0, 5, 0, 50, 0, 0, 5, 0, 0, 0, 2, 0, 2, 0, 2, 0, 50, 0, 0, 8, 0, 8, 0,
 
        50, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0,
 
        99, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 0, 1, 0, 1, 0, 99, 0, 0, 0, 2, 0, 2, 0, 4, 0, // 3
 
        8, 0, 8, 0, 4, 0, 0, 0, 50, 0, 0, 50, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,
 
        2, 2, 5, 0, 0, 0, 1, 0, 8, 8, 8, 5, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0,
 
        0, 8, 0, 0, 0, 50, 0, 0, 50, 0, 0, 2, 2, 2, 2, 0, 5, 0, 0, 1, 0, 0, 5, 0, 0, 4, // 6
   
        0, 8, 8, 0, 4, 0, 2, 2, 0, 0, 5, 5, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 1, 0, 5, 0, 1, 0, 5, 0, 0, 8, 8, 8, 50, 0, 0, 0, 102, 0, 0, 0, 0, 0, 2,
  
        2, 0, 2, 0, 50, 0, 2, 0, 2, 0, 2, 0, 2, 0, 1, 1, 0, 5, 0, 5, 0, 0, 0, 101, 0, 0, // 9
  
        0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 0, 50, 0,
  
        0, 8, 0, 8, 0, 50, 0, 8, 0, 8, 0, 8, 0, 8, 0, 50, 0, 0, 1, 1, 0, 5, 0, 5, 0, 0,
  
        50, 8, 0, 2, 2, 0, 5, 0, 5, 0, 50, 8, 0, 2, 2, 0, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, // 12
  
        0, 0, 5, 5, 0, 0, 0, 1, 0, 1, 0, 5, 0, 0, 0, 1, 0, 1, 0, 99, 0, 0, 2, 0, 2, 0,
  
        50, 0, 0, 8, 0, 8, 0, 50, 0, 0, 1, 0, 2, 4, 0, 8, 4, 0, 0, 50, 0, 8, 8, 0, 0, 0,
  
        0, 0, 50, 0, 0, 8, 8, 0, 0, 0, 2, 4, 0, 8, 4, 0, 0, 5, 0, 5, 0, 2, 2, 2, 0, 5, // 15
  
        0, 5, 0, 8, 8, 8, 0, 1, 1, 0, 5, 0, 1, 1, 0, 5, 0, 99, 0, 0, 0, 0, 0, 0, 0, 1,
  
        2, 8, 5, 0, 4, 2, 8, 5, 0, 99, 0, 0, 2, 2, 4, 0, 8, 8, 4, 0, 0, 1, 0, 0, 1, 0,
  
        0, 5, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0, 4, 0, 0, 1, 0, 5, 0, 1, 0, 11, 0, 0, 0, 0, // 18
  
        0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 99, 0, 0, 2, 2, 0, 0, 1, 0, 4, 0, 1, 0, 4, 0, 0,
  
        5, 0, 0, 0, 50, 0, 0, 1, 0, 0, 1, 0, 0, 50, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 99, 0,
  
        5, 0, 0, 102, 0, 0, 0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 4, 0, 1, 2, 1, 5, 0, 0, // 21
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 5, 0, 0, 50, 0, 0, 5, 0, 0,
  
        0, 2, 0, 4, 0, 8, 0, 4, 0, 2, 2, 5, 0, 8, 8, 5, 0, 0, 0, 0, 0, 50, 0, 8, 8, 8, // 24
  
        5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Small", score_database2, "Medium");
    }
}
