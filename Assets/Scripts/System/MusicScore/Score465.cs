using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score465 : MonoBehaviour
{
    //     71, 72 (GunnerPattern)     41, 42 (HourStand)     54, 55, 56, 57 (ScratchMark)     50, 51 (Shower)
    //     80 (BoomStopStar)      11 (RisingHeartRandom)     18, 20, 19 (FixedHeartPack)     94 (FixedAirAttack)
    //     77, 78 (HalfPickUp)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 1, 0, 0, 0, 5, 0, 0, 9, 0, 0, 0, 93, 0, 0, 0, 1, 0, 0, 0, 5, 5, 0, 9, 0, 0,

        93, 93, 0, 93, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 2, 8, 0, 0, 5, 4, 0, 5, 6, 0, 0, 77,

        78, 0, 80, 0, 80, 0, 0, 0, 1, 1, 0, 5, 0, 0, 1, 1, 0, 9, 0, 0, 20, 0, 94, 0, 0, 41, // 3
  
        0, 0, 42, 0, 0, 41, 0, 0, 42, 0, 0, 20, 0, 1, 1, 0, 5, 4, 0, 1, 1, 0, 5, 9, 0, 5,

        0, 11, 8, 0, 11, 8, 0, 0, 0, 2, 0, 8, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 6
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 80, 0, 0, 0, 0, 54,

        0, 55, 0, 56, 0, 57, 0, 20, 0, 20, 80, 0, 0, 54, 0, 19, 55, 0, 18, 56, 0, 20, 57, 0, 20, 0,

        0, 2, 8, 0, 80, 0, 0, 3, 0, 93, 0, 0, 0, 3, 0, 93, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, // 9
  
        2, 2, 0, 4, 0, 80, 0, 80, 0, 1, 0, 1, 0, 80, 0, 5, 0, 9, 0, 0, 11, 8, 0, 11, 8, 0,

        0, 3, 0, 0, 1, 0, 5, 0, 0, 80, 80, 0, 1, 0, 9, 0, 0, 80, 80, 0, 0, 11, 0, 11, 0, 11,

        0, 5, 0, 0, 93, 0, 0, 93, 0, 0, 1, 1, 0, 5, 0, 80, 0, 0, 1, 1, 0, 9, 0, 71, 0, 0, // 12
   
        0, 80, 72, 0, 0, 0, 80, 0, 0, 2, 0, 0, 8, 0, 0, 1, 5, 0, 1, 9, 0, 41, 0, 0, 42, 0,

        0, 20, 42, 0, 0, 20, 41, 0, 0, 11, 2, 0, 11, 8, 0, 5, 0, 80, 0, 80, 0, 0, 20, 18, 0, 20,

        19, 0, 80, 0, 0, 0, 2, 4, 0, 5, 0, 93, 0, 8, 4, 0, 5, 0, 93, 0, 0, 1, 1, 0, 6, 0, // 15
  
        80, 0, 1, 11, 0, 5, 0, 5, 0, 0, 1, 1, 0, 5, 0, 9, 5, 0, 2, 0, 2, 0, 8, 0, 8, 0,

        4, 0, 5, 9, 0, 5, 4, 0, 80, 0, 0, 0, 55, 0, 54, 0, 57, 0, 56, 0, 0, 55, 0, 18, 0, 54,

        19, 0, 41, 0, 0, 42, 0, 0, 20, 0, 94, 0, 80, 0, 0, 77, 78, 0, 0, 80, 0, 0, 1, 1, 0, 5, // 18
   
        1, 0, 9, 5, 0, 20, 0, 11, 0, 20, 0, 11, 0, 80, 0, 80, 0, 11, 5, 0, 11, 9, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0, 8, 4, 0, 0, 3, 0, 0, 93, 0, 0,

        0, 1, 1, 0, 5, 0, 0, 5, 0, 0, 1, 1, 0, 5, 5, 0, 9, 0, 0, 0, 77, 78, 0, 77, 78, 0, // 21
   
        0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 1, 1, 5, 0, 41, 0, 0, 42, 0, 0, 0, 93, 0, 0, 1, 1, 9, 0, 41, 18, 0, 42, 19, 0, 0,
  
        93, 93, 0, 0, 1, 1, 2, 0, 20, 0, 1, 1, 8, 0, 80, 94, 0, 0, 77, 94, 0, 78, 94, 0, 0, 77,
  
        80, 0, 78, 80, 0, 9, 0, 0, 1, 1, 5, 5, 0, 11, 1, 2, 11, 1, 8, 0, 1, 5, 6, 0, 0, 1, // 3
  
        2, 4, 0, 77, 94, 78, 94, 0, 5, 0, 9, 0, 0, 41, 20, 0, 42, 94, 0, 1, 1, 5, 0, 1, 1, 9,
  
        0, 11, 1, 8, 11, 1, 8, 0, 0, 93, 0, 93, 0, 93, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, // 6
  
        0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 5, 0, 0, 0, 0, 55,
  
        0, 18, 78, 0, 20, 77, 0, 94, 42, 0, 19, 0, 0, 54, 0, 19, 77, 0, 20, 78, 0, 94, 41, 0, 18, 0,
   
        0, 1, 1, 5, 9, 0, 0, 93, 0, 93, 0, 0, 0, 93, 0, 93, 0, 0, 56, 94, 0, 57, 94, 0, 1, 1, // 9
  
        5, 5, 9, 0, 0, 71, 0, 0, 0, 80, 80, 72, 0, 0, 0, 80, 80, 80, 0, 11, 5, 11, 5, 9, 0, 0,
  
        0, 3, 0, 0, 1, 1, 71, 0, 0, 0, 80, 94, 72, 0, 0, 0, 80, 94, 80, 0, 11, 5, 11, 5, 0, 1,
  
        1, 9, 0, 0, 3, 0, 0, 93, 0, 0, 1, 1, 5, 5, 0, 80, 80, 0, 1, 1, 5, 9, 0, 71, 0, 0, // 12
   
        0, 80, 72, 0, 0, 0, 80, 80, 80, 0, 0, 1, 1, 5, 0, 77, 0, 1, 1, 9, 0, 78, 0, 0, 41, 18,
  
        0, 20, 42, 19, 0, 20, 0, 11, 8, 11, 8, 0, 11, 1, 11, 5, 0, 80, 94, 80, 0, 0, 94, 77, 0, 94,
  
        78, 0, 80, 0, 0, 0, 11, 8, 11, 5, 0, 93, 0, 11, 1, 11, 5, 0, 80, 0, 0, 1, 1, 11, 5, 0, // 15
  
        93, 0, 1, 5, 11, 4, 0, 80, 0, 0, 1, 1, 5, 0, 11, 80, 11, 0, 1, 1, 9, 0, 77, 20, 0, 78,
  
        20, 0, 80, 77, 0, 80, 78, 0, 5, 0, 0, 0, 1, 1, 5, 0, 55, 18, 41, 0, 0, 1, 1, 9, 0, 54,
   
        19, 42, 0, 0, 80, 80, 0, 71, 0, 77, 78, 0, 80, 0, 72, 0, 78, 77, 0, 80, 0, 0, 1, 1, 5, 0, // 18
   
        1, 1, 9, 0, 94, 77, 0, 94, 78, 0, 80, 77, 80, 78, 0, 11, 77, 0, 11, 78, 0, 5, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 80, 80, 0, 0, 5, 0, 0, 9, 0, 0,
   
        0, 50, 0, 0, 0, 1, 1, 5, 0, 0, 51, 0, 0, 0, 1, 1, 9, 0, 0, 0, 41, 0, 94, 42, 0, 94, // 21
   
        0, 1, 5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
