using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score450 : MonoBehaviour
{
    // 54, 55 (ScratchMark)    91, 94, 92 (FixedAirAttack)    33 (M)    201, 12, 202 (HookS)
    // 22 (ItemOf2Pick)    222 (ItemOf3Pick)    18, 20, 19 (FixedHeartPack)    30, 31 (Sweep)
    // 80 (BoomStopStar)    34 (Strike3Item3)    71 (MultipleHitStar)   81, 82 (CombineStarPick)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 55,

        0, 54, 0, 55, 0, 0, 1, 1, 0, 9, 0, 54, 0, 20, 0, 55, 0, 20, 0, 1, 1, 0, 5, 0, 1, 1,

        0, 9, 0, 33, 0, 20, 0, 20, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 2, 4, 0, 8, 4, 0, // 3
   
        1, 1, 0, 0, 5, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, // 6
   
        4, 0, 0, 5, 0, 0, 22, 0, 5, 0, 5, 0, 1, 1, 0, 9, 0, 0, 222, 0, 5, 0, 5, 0, 1, 1,

        0, 9, 0, 0, 93, 0, 93, 0, 5, 0, 0, 30, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 31, 0, 0,

        0, 20, 20, 0, 5, 0, 93, 8, 0, 4, 0, 5, 0, 93, 8, 0, 4, 0, 5, 9, 0, 93, 0, 80, 0, 0, // 9
   
        1, 1, 0, 5, 5, 0, 1, 6, 0, 5, 5, 0, 33, 0, 0, 22, 222, 0, 33, 0, 0, 222, 22, 0, 1, 1,

        0, 5, 0, 0, 3, 0, 0, 3, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 80, 0, 0, 91, 0, 94, 0, 92,

        0, 20, 0, 18, 0, 20, 0, 0, 0, 3, 0, 0, 3, 0, 0, 1, 5, 0, 80, 0, 1, 1, 0, 5, 80, 0, // 12
   
        0, 1, 1, 0, 5, 9, 0, 0, 0, 93, 0, 0, 0, 2, 0, 8, 0, 4, 0, 0, 30, 0, 20, 0, 31, 0,

        20, 0, 94, 5, 0, 0, 3, 0, 0, 1, 1, 0, 5, 5, 0, 80, 20, 0, 80, 20, 0, 0, 93, 0, 93, 0,

        1, 1, 0, 20, 0, 1, 1, 0, 94, 0, 20, 0, 20, 0, 20, 0, 80, 0, 80, 0, 94, 80, 0, 0, 3, 0, // 15
   
        3, 0, 0, 1, 4, 0, 93, 0, 1, 1, 0, 4, 0, 93, 0, 1, 4, 0, 5, 93, 0, 1, 1, 0, 5, 5,

        0, 93, 0, 0, 3, 0, 0, 0, 22, 22, 0, 222, 222, 0, 80, 0, 22, 0, 222, 0, 20, 0, 0, 34, 0, 34,

        0, 1, 1, 0, 0, 5, 0, 0, 18, 0, 19, 0, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 80, 0, // 18
    
        1, 1, 0, 80, 0, 80, 0, 0, 94, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 5, 0, 1, 9, 0, 34, 0,

        2, 0, 8, 0, 22, 222, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 1, 0, 5, 0, 0, 0, 9, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 2, 4, 2, 0, 1, 1, 0, 8, 4, 8, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 92, 0,
   
        55, 91, 0, 1, 1, 5, 0, 1, 1, 9, 0, 54, 92, 33, 0, 0, 55, 91, 33, 0, 0, 0, 1, 1, 5, 0,
   
        1, 1, 9, 0, 12, 0, 20, 0, 0, 201, 0, 20, 0, 0, 202, 0, 20, 0, 0, 1, 1, 5, 0, 1, 1, 9, // 3
   
        54, 20, 0, 55, 20, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 4, 8, 8, 8, 8, 0, // 6
   
        1, 1, 5, 9, 0, 0, 22, 22, 22, 22, 4, 0, 1, 1, 5, 9, 0, 0, 222, 222, 222, 222, 4, 0, 1, 1,
   
        5, 0, 1, 1, 9, 0, 5, 5, 9, 0, 0, 30, 0, 20, 0, 31, 0, 94, 0, 30, 18, 20, 19, 0, 80, 0,
   
        0, 1, 2, 4, 0, 93, 0, 1, 8, 4, 0, 93, 0, 1, 22, 4, 0, 1, 222, 4, 0, 93, 0, 5, 0, 0, // 9
   
        5, 9, 5, 0, 80, 0, 5, 9, 5, 0, 80, 0, 54, 0, 33, 0, 55, 0, 33, 0, 20, 20, 20, 0, 1, 1,
   
        5, 9, 0, 0, 3, 2, 0, 3, 8, 0, 1, 1, 5, 80, 0, 1, 1, 9, 80, 0, 0, 8, 8, 22, 8, 8,
   
        222, 8, 8, 0, 5, 5, 9, 0, 0, 3, 22, 0, 3, 222, 0, 1, 1, 0, 80, 80, 0, 1, 5, 0, 80, 80, // 12
   
        0, 1, 5, 9, 0, 5, 0, 0, 0, 3, 0, 0, 0, 93, 0, 93, 0, 5, 0, 0, 1, 1, 20, 0, 1, 5,

        20, 0, 93, 5, 0, 0, 3, 0, 0, 1, 5, 9, 0, 18, 20, 19, 20, 0, 93, 5, 0, 0, 3, 8, 0, 0,

        54, 19, 0, 94, 0, 55, 18, 0, 94, 0, 30, 18, 20, 31, 19, 20, 0, 80, 1, 9, 0, 80, 0, 0, 3, 93, // 15
   
        3, 34, 0, 1, 2, 4, 0, 71, 0, 1, 8, 4, 0, 71, 0, 1, 1, 6, 0, 71, 0, 1, 1, 9, 0, 71,

        0, 9, 0, 0, 3, 0, 0, 0, 1, 8, 80, 0, 93, 22, 0, 1, 8, 80, 0, 93, 222, 0, 34, 5, 0, 0,

        1, 1, 0, 5, 0, 9, 0, 0, 93, 0, 93, 0, 5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, // 18
    
        5, 0, 1, 1, 0, 80, 0, 0, 5, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0,

        81, 80, 82, 80, 81, 80, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 18, 0, 19, 0, 0, 0, 5, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
    
        0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
