using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score351 : MonoBehaviour
{
    public int difficulty;

    // 11 - Pandent(8), 12 - HookS(7), 13 - CurveS(7), 14, 15 - Curve L/R(8)

    private int[] score_database =
    {
        0,

        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0,
   
        2, 0, 0, 8, 0, 0, 5, 0, 0, 5, 0, 0, 1, 1, 0, 0, 2, 0, 0, 8, 0, 0, 1, 1, 0, 4,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 3
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
  
        2, 0, 0, 4, 0, 0, 8, 0, 0, 0, 8, 0, 0, 4, 0, 0, 2, 2, 0, 8, 8, 0, 93, 4, 0, 0,
  
        5, 0, 0, 0, 1, 0, 0, 5, 0, 0, 5, 0, 0, 2, 2, 0, 0, 1, 0, 0, 5, 0, 0, 5, 0, 0, // 6
   
        8, 8, 0, 0, 1, 0, 5, 0, 9, 0, 2, 2, 0, 0, 1, 0, 5, 0, 9, 0, 8, 8, 0, 93, 4, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 12, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1,
   
        0, 2, 0, 8, 0, 5, 0, 0, 5, 0, 13, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 2, 2, 0, 8, // 9
   
        0, 5, 0, 0, 5, 0, 0, 1, 1, 0, 2, 0, 2, 0, 8, 8, 0, 4, 0, 5, 0, 0, 0, 0, 5, 0,
   
        2, 2, 0, 4, 0, 8, 8, 0, 5, 0, 5, 0, 0, 1, 0, 2, 0, 5, 0, 0, 1, 0, 8, 0, 5, 0,
  
        0, 4, 0, 0, 2, 2, 0, 4, 0, 0, 8, 8, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 5, // 12
   
        0, 0, 1, 1, 0, 2, 2, 0, 8, 8, 0, 93, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0,
   
        0, 93, 0, 3, 0, 0, 0, 0, 93, 0, 3, 0, 0, 0, 0, 5, 0, 5, 0, 0, 1, 0, 2, 2, 0, 4,
   
        0, 1, 0, 8, 8, 0, 4, 0, 0, 2, 2, 0, 8, 8, 0, 5, 0, 5, 0, 0, 4, 0, 0, 0, 0, 0, // 15
   
        0, 102, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0, 8, 0, 0, 4,
   
        0, 0, 2, 2, 0, 4, 0, 93, 0, 8, 0, 8, 0, 4, 0, 93, 0, 0, 2, 2, 0, 4, 0, 8, 8, 0,
   
        4, 0, 5, 0, 0, 5, 0, 0, 1, 1, 0, 5, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1, // 18
   
        0, 2, 0, 8, 0, 4, 0, 0, 1, 0, 2, 2, 0, 4, 0, 0, 1, 0, 8, 8, 0, 4, 0, 0, 5, 0,
   
        0, 5, 0, 0, 0, 93, 0, 0, 0, 93, 0, 0, 0, 1, 0, 2, 0, 2, 0, 4, 0, 8, 0, 8, 0, 4,
    
        0, 2, 2, 0, 5, 0, 8, 8, 0, 5, 0, 0, 1, 1, 0, 2, 0, 2, 0, 0, 1, 0, 1, 0, 5, 0, // 21
    
        0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 8, 8, 0, 5, 0, 5, 0, 0, 8, 8, 8, 0, 5, 0, 5, 0, 19, 0, 0, 0, 2, 8, 8, 0,

        4, 2, 0, 4, 8, 0, 1, 2, 1, 8, 0, 5, 5, 0, 1, 0, 1, 0, 5, 2, 2, 4, 8, 8, 0, 5,

        0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, // 3
  
        0, 2, 0, 2, 0, 4, 0, 0, 8, 0, 8, 0, 4, 0, 0, 2, 8, 4, 0, 5, 0, 0, 1, 1, 1, 0,

        5, 0, 5, 0, 0, 1, 1, 5, 0, 1, 1, 19, 0, 2, 2, 0, 8, 8, 0, 5, 0, 4, 2, 8, 0, 5,

        19, 0, 0, 1, 0, 5, 0, 19, 0, 0, 1, 0, 5, 0, 19, 0, 8, 8, 8, 8, 0, 5, 0, 1, 1, 0, // 6
   
        4, 2, 0, 4, 8, 0, 5, 0, 1, 1, 2, 2, 0, 0, 1, 1, 8, 8, 0, 2, 2, 2, 0, 5, 4, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 1, 1, 12, 0, 0, 0, 0, 0, 0, 1, 1, 13,

        0, 0, 0, 0, 0, 0, 1, 5, 19, 0, 11, 0, 0, 0, 0, 0, 0, 0, 5, 0, 19, 0, 0, 2, 2, 8, // 9
   
        0, 2, 8, 2, 0, 8, 2, 2, 0, 5, 0, 1, 1, 4, 0, 1, 1, 4, 0, 2, 4, 2, 4, 8, 5, 0,

        0, 1, 0, 1, 0, 5, 5, 0, 2, 2, 2, 0, 0, 1, 0, 1, 0, 19, 0, 2, 2, 0, 8, 8, 5, 0,

        0, 16, 0, 2, 4, 2, 0, 5, 0, 8, 4, 8, 0, 5, 0, 0, 1, 1, 1, 0, 5, 0, 5, 0, 2, 4, // 12
   
        0, 8, 4, 0, 5, 0, 1, 2, 1, 8, 0, 5, 19, 0, 0, 3, 0, 2, 0, 2, 0, 5, 3, 0, 8, 0,

        8, 0, 5, 3, 0, 2, 0, 8, 0, 5, 3, 0, 2, 0, 8, 8, 0, 5, 0, 0, 2, 2, 0, 4, 0, 8,

        8, 0, 4, 0, 2, 4, 2, 0, 8, 4, 8, 0, 2, 2, 0, 8, 8, 0, 4, 0, 5, 0, 0, 0, 0, 0, // 15
   
        0, 103, 0, 0, 0, 0, 0, 0, 0, 5, 0, 5, 0, 104, 0, 0, 0, 0, 0, 0, 0, 5, 0, 19, 0, 2,

        2, 5, 0, 101, 0, 0, 0, 0, 0, 0, 8, 8, 5, 0, 102, 0, 0, 0, 0, 0, 0, 2, 2, 8, 8, 0,

        5, 0, 1, 1, 2, 8, 0, 5, 4, 5, 0, 19, 0, 0, 3, 2, 2, 4, 0, 3, 8, 8, 4, 0, 5, 5, // 18
   
        0, 1, 0, 1, 0, 2, 0, 1, 0, 8, 8, 8, 0, 5, 0, 0, 5, 0, 8, 8, 0, 5, 0, 2, 2, 0,

        5, 0, 0, 2, 2, 93, 0, 8, 8, 93, 0, 0, 1, 2, 2, 0, 1, 8, 8, 0, 4, 2, 0, 4, 8, 0,

        5, 1, 1, 0, 19, 1, 1, 0, 93, 4, 0, 0, 2, 2, 0, 5, 0, 1, 1, 0, 5, 0, 5, 0, 0, 0, // 21
    
        0, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Small", score_database2, "Medium");
    }
}
