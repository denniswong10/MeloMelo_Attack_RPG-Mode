using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score466 : MonoBehaviour
{
    //     22 (ItemOf2Pick)    34 (Strike3Item3)    45 (Y_Random)
    //     81, 82 (TriangleTown)     71, 72 (WanderingWand)
    //     18, 20, 19 (FixedHeartPack)     91, 94, 92 (FixedAirAttack)     48 (4-KeyTap)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 4, 0, 0, 8, 8, 0, 4,

        0, 1, 0, 5, 0, 0, 22, 8, 0, 4, 0, 0, 22, 22, 0, 4, 0, 1, 0, 9, 0, 0, 81, 0, 0, 0,

        0, 82, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 5, 0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 0, 1, 1, // 3
  
        0, 5, 0, 0, 1, 1, 0, 5, 5, 0, 0, 6, 1, 0, 5, 4, 0, 0, 8, 0, 2, 0, 8, 0, 20, 20,

        0, 0, 1, 0, 93, 0, 0, 2, 8, 0, 4, 0, 1, 0, 93, 0, 45, 0, 45, 0, 45, 0, 0, 1, 1, 0,

        5, 4, 0, 5, 9, 0, 0, 1, 2, 0, 20, 20, 0, 1, 8, 0, 94, 94, 0, 5, 4, 0, 5, 9, 0, 93, // 6
  
        0, 93, 0, 0, 0, 1, 5, 0, 9, 0, 0, 0, 2, 2, 0, 4, 0, 0, 0, 8, 8, 0, 4, 0, 0, 0,

        1, 0, 5, 0, 1, 0, 81, 0, 0, 82, 0, 0, 20, 20, 0, 0, 0, 1, 0, 5, 0, 5, 0, 22, 22, 0,

        0, 1, 5, 0, 0, 1, 0, 5, 4, 0, 5, 9, 0, 22, 0, 8, 0, 4, 0, 0, 1, 1, 0, 5, 45, 0, // 9
  
        0, 9, 45, 0, 0, 1, 1, 0, 5, 5, 0, 4, 0, 20, 0, 4, 0, 1, 4, 0, 5, 0, 9, 0, 0, 0,

        22, 0, 22, 0, 34, 0, 22, 0, 22, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 93, 0, 1, 5, 0, 1,

        9, 0, 0, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 2, 0, 8, 0, 5, 5, 0, 0, 0, 1, 2, 0, 1, // 12
  
        8, 0, 5, 5, 0, 4, 0, 0, 0, 34, 0, 22, 0, 34, 0, 22, 0, 1, 1, 0, 5, 0, 71, 0, 0, 0,

        0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 0, 2, 34, 0, 8, 34, 0, 72, 0, 0, 0, 0, 1, 0, 9,

        0, 1, 0, 6, 0, 2, 22, 0, 8, 22, 0, 45, 0, 45, 0, 45, 0, 0, 0, 1, 1, 0, 5, 0, 5, 0, // 15
  
        20, 20, 0, 5, 0, 5, 0, 0, 20, 20, 0, 1, 1, 0, 5, 5, 0, 20, 0, 94, 0, 93, 34, 0, 0, 0,

        1, 0, 1, 0, 48, 0, 34, 5, 0, 34, 5, 0, 34, 9, 0, 34, 9, 0, 0, 1, 1, 0, 5, 5, 0, 9,

        0, 0, 93, 22, 0, 34, 22, 0, 1, 5, 0, 1, 9, 0, 0, 3, 0, 3, 0, 0, 0, 1, 0, 5, 0, 1, // 18
   
        0, 9, 0, 0, 1, 5, 0, 9, 1, 0, 48, 0, 0, 0, 81, 0, 20, 0, 82, 0, 20, 0, 0, 18, 20, 0,

        19, 20, 0, 18, 94, 0, 19, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 2, 4, 22, 8, 22, 8, 4, 0,
 
        0, 1, 1, 5, 0, 0, 22, 8, 2, 4, 8, 22, 8, 4, 0, 93, 0, 1, 1, 5, 0, 0, 81, 0, 0, 18,
  
        0, 82, 0, 0, 19, 0, 1, 0, 4, 0, 5, 0, 0, 93, 0, 2, 2, 0, 93, 0, 8, 8, 0, 0, 1, 0, // 3
  
        45, 0, 34, 0, 0, 2, 2, 4, 5, 0, 0, 6, 0, 45, 0, 34, 0, 0, 8, 8, 4, 5, 0, 20, 20, 20,
  
        0, 0, 1, 2, 93, 5, 0, 45, 0, 45, 0, 0, 1, 8, 93, 5, 0, 45, 20, 45, 20, 0, 0, 1, 2, 5,
 
        0, 1, 8, 4, 5, 0, 0, 1, 1, 5, 0, 94, 0, 1, 1, 5, 0, 94, 0, 22, 34, 0, 45, 20, 0, 1, // 6
  
        5, 4, 0, 94, 0, 1, 5, 5, 9, 0, 0, 1, 0, 2, 4, 8, 0, 5, 0, 5, 0, 0, 1, 0, 8, 4,
  
        2, 0, 5, 0, 5, 0, 81, 0, 18, 82, 0, 0, 19, 94, 0, 0, 0, 1, 9, 5, 5, 0, 2, 34, 22, 34,
  
        1, 1, 5, 0, 0, 1, 8, 8, 4, 0, 2, 8, 22, 8, 0, 1, 5, 6, 0, 0, 1, 1, 5, 0, 45, 94, // 9
  
        0, 45, 20, 94, 0, 1, 1, 9, 0, 81, 18, 0, 94, 82, 19, 0, 94, 0, 1, 1, 5, 5, 9, 0, 0, 0,
   
        71, 0, 0, 0, 72, 0, 0, 0, 2, 93, 8, 93, 5, 0, 81, 18, 20, 0, 82, 19, 20, 0, 1, 1, 5, 1,
  
        1, 9, 0, 0, 0, 20, 20, 94, 0, 45, 0, 20, 18, 91, 0, 45, 0, 20, 19, 92, 0, 0, 1, 1, 5, 0, // 12
  
        8, 0, 1, 5, 1, 9, 0, 0, 0, 71, 18, 0, 0, 72, 19, 0, 0, 0, 34, 22, 5, 0, 81, 0, 91, 20,
   
        82, 0, 92, 20, 0, 1, 5, 1, 9, 5, 0, 0, 45, 0, 34, 22, 8, 45, 0, 34, 8, 22, 0, 20, 18, 18,
   
        0, 20, 19, 19, 0, 45, 94, 0, 45, 20, 0, 45, 94, 0, 45, 20, 0, 0, 0, 1, 1, 5, 0, 20, 18, 20, // 15
  
        19, 20, 0, 5, 5, 5, 0, 1, 1, 9, 0, 94, 91, 94, 92, 94, 0, 5, 5, 5, 0, 34, 48, 0, 0, 0,
  
        1, 1, 1, 0, 3, 2, 2, 34, 8, 8, 3, 22, 8, 34, 8, 22, 3, 0, 1, 1, 5, 0, 1, 5, 1, 9,
   
        0, 0, 2, 4, 2, 0, 1, 0, 1, 0, 0, 8, 4, 8, 0, 1, 0, 1, 0, 0, 0, 5, 9, 5, 0, 1, // 18
   
        0, 1, 0, 0, 6, 5, 9, 0, 1, 0, 1, 0, 0, 0, 81, 18, 20, 0, 82, 19, 20, 0, 81, 91, 20, 0,
   
        82, 92, 20, 0, 1, 1, 5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
