using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score548 : MonoBehaviour
{
    //    22, 23 (BoldArrow)        18, 20, 19 (FixedHeartPack)         110, 50, 111 (Diamond)             91, 94, 92 (FixedAirAttack)
    //    101, 44, 108 (2-Keys)     31, 30 (Sweep)        115, 80, 116 (BoomStopStar)        11 (Gender_F)
    //    85, 86 (StraightToHeaven)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 9, 0, 0, 0, 2, 2, 4, 0, 8, 8, 4, 0,

        1, 1, 0, 5, 5, 0, 0, 0, 2, 4, 2, 0, 8, 4, 8, 0, 1, 1, 0, 5, 5, 0, 0, 0, 3, 0,

        0, 3, 0, 0, 3, 0, 0, 115, 115, 0, 80, 80, 0, 116, 0, 116, 0, 0, 3, 0, 0, 1, 5, 0, 0, 2, // 3
   
        0, 2, 0, 8, 0, 8, 0, 0, 193, 0, 0, 193, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 80,

        0, 116, 0, 80, 0, 115, 0, 0, 3, 0, 0, 1, 1, 5, 0, 50, 0, 0, 1, 1, 9, 0, 80, 0, 80, 0,

        1, 1, 0, 5, 0, 9, 0, 50, 0, 0, 0, 0, 18, 20, 19, 0, 0, 116, 116, 0, 0, 80, 0, 115, 0, 0, // 6
  
        0, 19, 20, 18, 0, 0, 115, 115, 0, 0, 80, 0, 116, 0, 0, 0, 1, 4, 5, 0, 1, 9, 5, 0, 20, 0,

        94, 0, 20, 0, 0, 1, 1, 0, 5, 5, 0, 93, 0, 5, 5, 0, 101, 80, 108, 0, 0, 0, 2, 2, 2, 0,

        4, 4, 0, 8, 8, 8, 0, 0, 4, 0, 0, 93, 0, 93, 0, 93, 0, 0, 1, 1, 5, 0, 0, 0, 3, 0, // 9
  
        0, 0, 1, 1, 9, 0, 0, 3, 0, 0, 5, 4, 5, 0, 80, 0, 9, 5, 9, 0, 80, 0, 80, 0, 0, 94,

        0, 28, 0, 0, 0, 91, 0, 0, 977, 0, 0, 0, 2, 8, 0, 0, 5, 0, 0, 1, 1, 0, 0, 5, 9, 0,

        0, 0, 1, 1, 0, 0, 5, 0, 0, 0, 4, 2, 2, 0, 4, 8, 8, 0, 1, 0, 5, 0, 9, 5, 0, 80, // 12
  
        0, 80, 0, 80, 0, 18, 20, 19, 0, 19, 20, 18, 0, 101, 101, 0, 44, 0, 108, 108, 0, 116, 0, 0, 11, 0,

        0, 0, 0, 31, 0, 94, 0, 30, 0, 94, 0, 22, 0, 0, 80, 80, 0, 30, 0, 94, 0, 31, 0, 94, 0, 23,

        0, 0, 80, 80, 0, 0, 1, 1, 5, 0, 8, 8, 0, 1, 1, 9, 0, 8, 8, 0, 110, 0, 50, 0, 111, 0, // 15
   
        50, 0, 91, 0, 0, 2, 4, 5, 0, 8, 4, 5, 0, 80, 0, 0, 31, 0, 3, 0, 30, 0, 3, 0, 22, 0,

        0, 0, 94, 0, 30, 0, 3, 0, 31, 0, 3, 0, 23, 0, 0, 94, 94, 0, 0, 115, 80, 108, 0, 0, 116, 80,

        101, 0, 0, 20, 20, 20, 0, 0, 94, 94, 94, 0, 0, 18, 94, 0, 19, 94, 0, 0, 0, 0, 2, 2, 0, 5, // 18
   
        0, 8, 0, 8, 0, 1, 1, 0, 9, 0, 193, 0, 193, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 50, 0, 0,

        2, 2, 4, 0, 8, 8, 4, 0, 80, 0, 3, 0, 0, 3, 0, 0, 1, 5, 5, 0, 1, 9, 5, 0, 80, 0,

        91, 94, 0, 116, 0, 92, 94, 0, 11, 0, 0, 0, 0, 0, 977, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 110, 0, 0, 111, 0, 0, 101, 101, 0, 108, 108, 0, 80, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0,
   
        1, 1, 5, 0, 31, 0, 0, 0, 1, 6, 5, 0, 1, 5, 9, 0, 1, 6, 5, 0, 30, 0, 0, 0, 111, 0,
  
        0, 50, 0, 0, 110, 0, 0, 108, 108, 0, 101, 101, 0, 80, 0, 91, 0, 80, 0, 92, 0, 80, 80, 0, 0, 193, // 3
   
        0, 0, 193, 0, 0, 0, 31, 0, 0, 0, 116, 0, 94, 94, 0, 110, 0, 0, 30, 0, 0, 0, 115, 0, 94, 94,
  
        0, 111, 0, 0, 110, 0, 0, 50, 0, 0, 92, 0, 0, 111, 0, 0, 50, 0, 0, 91, 0, 0, 80, 0, 0, 1,
  
        1, 5, 0, 1, 1, 9, 0, 0, 80, 0, 0, 0, 94, 101, 94, 0, 0, 110, 0, 0, 80, 0, 0, 111, 0, 0, // 6
  
        0, 94, 108, 94, 0, 0, 111, 0, 0, 80, 0, 0, 110, 0, 0, 0, 1, 6, 5, 0, 1, 9, 5, 0, 80, 0,
  
        80, 0, 31, 0, 0, 19, 30, 0, 0, 91, 0, 0, 101, 115, 0, 44, 0, 108, 116, 0, 0, 0, 3, 0, 0, 0,
  
        2, 2, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 8, 8, 0, 0, 3, 0, 0, 0, 9, 0, // 9
  
        0, 0, 3, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 6, 1, 5, 0, 9, 1, 5, 0, 0, 80,
  
        0, 28, 0, 0, 0, 92, 0, 0, 3, 0, 0, 0, 2, 4, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 3, 0,
  
        0, 0, 8, 4, 0, 0, 3, 0, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 80, 0, 0, 1, 1, 193, // 12
  
        0, 5, 5, 193, 0, 30, 0, 0, 18, 31, 0, 0, 92, 0, 0, 108, 116, 0, 44, 0, 101, 115, 0, 0, 11, 0,
  
        0, 0, 0, 22, 0, 91, 0, 22, 0, 0, 91, 22, 0, 0, 80, 80, 0, 23, 0, 92, 0, 23, 0, 0, 92, 23,
  
        0, 0, 80, 80, 0, 0, 1, 1, 5, 5, 0, 50, 0, 1, 5, 1, 9, 0, 50, 0, 2, 4, 5, 0, 8, 4, // 15
   
        5, 0, 50, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 0, 22, 3, 91, 0, 22, 0, 3, 91, 22, 0,
   
        0, 80, 80, 0, 23, 3, 92, 0, 23, 0, 3, 92, 23, 0, 0, 80, 80, 0, 0, 115, 85, 0, 0, 0, 116, 86,
   
        0, 0, 0, 115, 80, 116, 0, 0, 116, 80, 115, 0, 0, 110, 0, 50, 0, 92, 0, 0, 0, 0, 1, 2, 2, 5, // 18
   
        0, 193, 0, 193, 0, 1, 8, 8, 5, 0, 193, 0, 193, 0, 0, 1, 1, 1, 0, 5, 5, 9, 0, 80, 0, 0,
   
        1, 1, 1, 0, 5, 5, 9, 0, 80, 80, 0, 3, 0, 3, 0, 0, 94, 101, 94, 0, 94, 108, 94, 0, 110, 0,
   
        40, 92, 0, 111, 0, 40, 91, 0, 31, 0, 977, 0, 977, 0, 977, 0, 0, 115, 80, 116, 0, 0, 0, 0, 0, 0, // 21
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
