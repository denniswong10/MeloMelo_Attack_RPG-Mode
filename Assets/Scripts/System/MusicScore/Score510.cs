using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score510 : MonoBehaviour
{
    //      15 (RibbonStar)          52, 53 [105, 106] (RainCurve)       91, 94, 92 (FixedAirAttack)      30, 31 (Sweep)
    //      110, 80, 111 (BoomStopStar)       72, 73 (QuickPickUpItem)      85, 86 (RatingFogToggle)
    //      101, 14, 102 (Ribbon)        18, 20, 19 (FixedHeartPack)      74 (QuickDodgeWithItem3)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 101, 0, 0, 14, 0, 0, 102, 0, 0, 111, 111, 0, 80, 0, 0, 102, 0, 0, 14, 0, 0, 101, 0,

        0, 110, 110, 0, 80, 0, 0, 0, 2, 2, 0, 80, 0, 8, 8, 0, 80, 0, 5, 5, 0, 80, 0, 5, 5, 0,

        80, 0, 80, 0, 94, 0, 0, 106, 0, 0, 20, 94, 0, 105, 0, 0, 20, 94, 0, 1, 0, 5, 0, 1, 0, 9, // 3
  
        0, 2, 1, 0, 8, 1, 0, 5, 5, 0, 80, 18, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1, 2, 0, 8,

        0, 8, 0, 5, 0, 0, 5, 0, 0, 1, 8, 0, 5, 5, 0, 80, 0, 0, 3, 0, 0, 93, 0, 1, 1, 0,

        5, 0, 1, 1, 0, 9, 0, 5, 5, 0, 14, 0, 0, 7, 0, 0, 1, 0, 5, 0, 1, 0, 9, 0, 0, 2, // 6
  
        0, 2, 0, 8, 0, 8, 0, 1, 1, 0, 5, 14, 0, 0, 102, 0, 0, 14, 0, 0, 101, 0, 0, 18, 18, 0,

        0, 80, 0, 0, 93, 0, 0, 1, 1, 0, 15, 0, 0, 1, 1, 0, 15, 0, 0, 0, 14, 0, 101, 0, 14, 0,

        0, 14, 0, 102, 0, 14, 0, 0, 72, 0, 73, 0, 0, 20, 0, 0, 0, 2, 2, 0, 93, 0, 93, 0, 8, 8, // 9
  
        0, 93, 0, 93, 0, 1, 5, 0, 1, 9, 0, 15, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 1, 1, 0, 93,

        0, 93, 0, 1, 9, 0, 1, 5, 0, 15, 0, 0, 7, 0, 101, 0, 14, 0, 102, 0, 30, 0, 0, 18, 18, 0,

        0, 7, 0, 0, 93, 0, 93, 0, 2, 2, 0, 5, 0, 0, 93, 0, 93, 0, 8, 8, 0, 5, 0, 5, 0, 0, // 12
  
        101, 0, 14, 0, 102, 0, 0, 80, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0,

        0, 9, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 80, 0, 80, 0, 14, 0, 20, 19, 0, 0, 0, 7, 0, 0,

        0, 31, 0, 0, 30, 0, 0, 0, 91, 0, 30, 0, 0, 31, 0, 0, 0, 92, 0, 14, 0, 0, 1, 2, 0, 5, // 15
  
        0, 0, 93, 0, 0, 30, 0, 0, 101, 0, 18, 0, 18, 0, 31, 0, 0, 102, 0, 19, 0, 19, 0, 80, 0, 0,

        80, 18, 0, 80, 19, 0, 0, 7, 7, 0, 0, 101, 0, 14, 0, 102, 0, 0, 111, 0, 80, 0, 0, 102, 0, 14,

        0, 101, 0, 0, 110, 0, 80, 0, 0, 4, 2, 0, 4, 8, 0, 5, 0, 3, 0, 1, 1, 0, 5, 0, 1, 1, // 18
  
        0, 9, 0, 5, 0, 5, 0, 5, 0, 14, 0, 14, 0, 101, 0, 20, 102, 0, 0, 101, 0, 20, 102, 0, 0, 101,

        0, 94, 102, 0, 0, 101, 0, 94, 102, 0, 0, 20, 94, 0, 0, 2, 2, 0, 93, 0, 8, 8, 0, 0, 0, 0,

        0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 80, 0, 20, 94, 0, 0, 0, 2, 2, 4, 0, 8, 8, 4, 0, 0, // 21
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 15, 0, 0, 15, 0, 0, 106, 0, 0, 0, 110, 94, 111, 0, 0, 15, 0, 0, 15, 0, 0, 105, 0,
  
        0, 0, 111, 94, 110, 0, 0, 0, 1, 1, 5, 9, 0, 80, 0, 91, 31, 0, 94, 92, 0, 1, 2, 4, 0, 5,
  
        5, 0, 1, 8, 4, 0, 0, 15, 0, 0, 5, 5, 9, 5, 0, 80, 0, 92, 30, 0, 94, 91, 0, 1, 1, 5, // 3
  
        0, 2, 0, 1, 1, 5, 0, 8, 0, 80, 0, 73, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 2, 2, 0,
  
        93, 0, 93, 0, 8, 8, 8, 0, 93, 0, 93, 0, 1, 1, 5, 80, 0, 0, 0, 7, 0, 0, 101, 0, 14, 0,
  
        92, 92, 0, 46, 102, 0, 14, 0, 91, 91, 0, 46, 15, 0, 0, 0, 93, 0, 5, 0, 93, 0, 80, 0, 0, 7, // 6
  
        0, 0, 3, 0, 0, 0, 80, 92, 102, 0, 14, 101, 0, 0, 110, 0, 0, 80, 91, 101, 0, 14, 102, 0, 0, 111,
  
        0, 15, 0, 0, 7, 0, 0, 1, 1, 5, 5, 0, 14, 0, 0, 1, 1, 9, 5, 0, 14, 0, 0, 80, 15, 0,
  
        0, 94, 110, 94, 111, 0, 30, 0, 0, 31, 0, 0, 92, 92, 0, 0, 0, 86, 101, 0, 0, 14, 0, 0, 102, 85, // 9
  
        0, 0, 111, 80, 110, 0, 31, 0, 20, 92, 0, 15, 0, 0, 0, 3, 0, 0, 93, 3, 0, 0, 14, 105, 0, 14,
  
        0, 0, 14, 106, 0, 14, 0, 0, 1, 4, 5, 0, 93, 0, 1, 6, 5, 0, 93, 0, 1, 5, 1, 9, 5, 0,
  
        0, 7, 0, 0, 2, 2, 93, 0, 8, 8, 93, 0, 30, 0, 0, 31, 0, 0, 0, 4, 2, 0, 4, 8, 0, 5, // 12
  
        30, 0, 0, 31, 0, 0, 92, 92, 0, 0, 0, 3, 0, 0, 0, 2, 0, 2, 0, 5, 0, 0, 0, 3, 0, 0,
  
        0, 8, 8, 0, 5, 0, 9, 0, 7, 7, 0, 80, 110, 0, 80, 111, 0, 20, 94, 20, 0, 0, 0, 3, 0, 0,
  
        0, 86, 101, 91, 0, 14, 0, 102, 85, 0, 92, 0, 85, 102, 92, 0, 14, 0, 101, 86, 0, 91, 0, 80, 0, 80, // 15
  
        0, 0, 7, 0, 0, 1, 1, 5, 0, 2, 0, 8, 0, 1, 1, 9, 0, 8, 0, 2, 0, 72, 0, 73, 0, 0,
 
        72, 92, 0, 73, 91, 0, 0, 7, 7, 0, 0, 105, 0, 0, 20, 106, 0, 0, 20, 20, 105, 0, 0, 0, 20, 94,
  
        106, 0, 0, 0, 101, 0, 14, 0, 92, 102, 0, 14, 0, 91, 0, 80, 0, 74, 0, 1, 2, 2, 5, 0, 1, 8, // 18
  
        8, 5, 0, 80, 80, 0, 101, 0, 14, 0, 102, 0, 0, 101, 14, 102, 0, 19, 92, 0, 0, 0, 86, 101, 0, 14,
  
        0, 102, 85, 0, 14, 0, 101, 86, 0, 14, 0, 102, 85, 0, 0, 30, 0, 0, 31, 0, 19, 92, 0, 0, 0, 0,
  
        0, 0, 80, 80, 80, 0, 110, 110, 0, 111, 111, 0, 0, 14, 0, 0, 0, 93, 0, 0, 93, 0, 0, 15, 0, 0, // 21
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
