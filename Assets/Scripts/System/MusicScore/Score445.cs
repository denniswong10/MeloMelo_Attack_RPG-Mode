using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score445 : MonoBehaviour
{
    //  52, 53 (RainCurve)    111 (QuickDodgeWithItem)    101, 14, 102 (Ribbon)    105, 106 (RainCurve_Mod)
    //  41, 42 (HourStand)    36, 37 (LeafBud)    18, 20, 19 (FixedHeartPack)    48 (4-KeyTap)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 102, 0, 0, 101, 0, 0, 1, 1, 0, 5, 0, 0, 2, 0, 2, 0, 8, 0, 8, 0, 0, 0, 101, 0, 0,

        0, 102, 0, 0, 1, 1, 0, 9, 0, 0, 2, 2, 0, 8, 8, 0, 4, 0, 101, 0, 20, 0, 102, 0, 20, 20,

        0, 14, 0, 0, 1, 0, 1, 0, 5, 0, 1, 0, 1, 0, 9, 0, 20, 5, 0, 20, 5, 0, 93, 0, 93, 0, // 3
  
        1, 1, 0, 93, 0, 1, 1, 0, 93, 0, 41, 0, 0, 42, 0, 0, 0, 18, 20, 0, 19, 20, 0, 1, 5, 0,

        1, 4, 0, 1, 9, 0, 2, 2, 0, 8, 8, 0, 5, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 0, 1, 1,

        0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 5, 0, 0, 8, 0, 8, // 6
  
        0, 5, 0, 0, 2, 2, 0, 5, 0, 8, 8, 0, 5, 0, 0, 101, 0, 18, 0, 102, 0, 19, 0, 48, 0, 0,

        1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 48, 0, 0, 36, 0, 0, 37, 0, 0, 1, 1, 0, 5, 0, 9, 0,

        1, 1, 0, 5, 0, 9, 0, 20, 0, 20, 0, 1, 1, 0, 48, 0, 1, 1, 0, 48, 48, 0, 1, 9, 0, 20, // 9
  
        0, 20, 0, 0, 1, 0, 5, 0, 93, 0, 1, 0, 9, 0, 93, 0, 48, 0, 48, 0, 101, 0, 102, 0, 20, 0,

        20, 0, 102, 0, 101, 0, 48, 0, 48, 0, 0, 1, 5, 0, 1, 0, 0, 48, 0, 1, 1, 0, 5, 0, 1, 1,

        0, 9, 0, 1, 5, 0, 1, 9, 0, 18, 0, 20, 0, 19, 0, 20, 0, 18, 0, 1, 1, 0, 48, 0, 7, 0, // 12
  
        105, 0, 0, 0, 106, 0, 0, 0, 105, 0, 0, 106, 0, 0, 0, 1, 5, 0, 3, 0, 1, 9, 0, 7, 0, 0,

        48, 0, 48, 0, 1, 1, 0, 6, 0, 0, 2, 0, 0, 4, 0, 0, 8, 0, 0, 4, 0, 1, 5, 0, 9, 0,

        1, 1, 0, 41, 0, 0, 42, 0, 0, 0, 1, 1, 0, 48, 0, 48, 0, 20, 20, 0, 9, 0, 0, 0, 0, 36, // 15
  
        0, 37, 0, 36, 0, 37, 0, 0, 5, 0, 1, 1, 0, 48, 48, 0, 20, 0, 20, 0, 5, 0, 9, 0, 0, 1,

        5, 0, 1, 9, 0, 48, 0, 48, 0, 48, 0, 0, 93, 0, 0, 1, 1, 0, 48, 0, 18, 0, 48, 0, 19, 0,

        48, 0, 1, 1, 0, 48, 0, 1, 0, 5, 0, 93, 0, 1, 1, 0, 9, 0, 1, 0, 5, 0, 93, 0, 93, 0, // 18
  
        5, 48, 0, 9, 48, 0, 6, 0, 0, 0, 74, 0, 2, 0, 2, 0, 74, 0, 8, 0, 8, 0, 74, 0, 1, 1,

        0, 5, 0, 1, 1, 0, 9, 0, 20, 0, 1, 1, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 101, 14, 0, 102, 14, 0, 18, 20, 0, 19, 20, 0, 5, 5, 0, 48, 0, 0, 2, 4, 0, 8, 4, 0, // 21
   
        1, 5, 0, 1, 9, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 105, 0, 0, 0, 102, 0, 0, 1, 1, 5, 0, 41, 0, 0, 42, 0, 0, 20, 20, 20, 0, 0, 106, 0, 0,
  
        0, 101, 0, 0, 1, 1, 5, 0, 42, 0, 0, 41, 0, 0, 20, 20, 20, 0, 101, 18, 14, 20, 102, 19, 0, 102,
  
        14, 101, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 42, 0, 20, 41, 0, 20, 20, 0, 1, 1, 9, 0, // 3
  
        1, 1, 4, 0, 1, 1, 6, 0, 41, 18, 20, 19, 42, 19, 20, 18, 0, 111, 19, 0, 111, 18, 0, 1, 1, 5,
   
        0, 1, 1, 4, 0, 1, 1, 9, 0, 2, 4, 8, 5, 0, 0, 3, 0, 14, 0, 0, 3, 0, 14, 0, 0, 1,
  
        5, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 36, 0, 37, 0, 0, 1, // 6
  
        1, 9, 0, 37, 0, 36, 0, 0, 101, 18, 20, 102, 19, 20, 0, 36, 18, 20, 37, 19, 20, 0, 48, 48, 0, 0,
  
        1, 1, 5, 0, 1, 1, 9, 0, 48, 0, 48, 0, 14, 0, 105, 0, 0, 0, 106, 0, 0, 0, 5, 5, 9, 0,
  
        0, 1, 4, 5, 0, 41, 0, 18, 18, 42, 0, 19, 19, 0, 48, 0, 1, 1, 6, 0, 48, 0, 1, 1, 6, 0, // 9
  
        5, 48, 0, 0, 1, 1, 5, 0, 3, 0, 1, 1, 9, 0, 3, 0, 48, 48, 48, 0, 101, 14, 102, 0, 18, 20,
  
        19, 0, 101, 14, 102, 0, 20, 48, 20, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 3, 93, 0, 7, 93, 0, 48,
  
        48, 0, 1, 1, 5, 0, 1, 1, 9, 0, 18, 48, 19, 0, 1, 1, 5, 0, 3, 0, 1, 1, 9, 0, 7, 0, // 12
  
        14, 20, 101, 18, 14, 20, 0, 14, 20, 102, 19, 14, 20, 0, 1, 1, 5, 0, 3, 0, 1, 1, 9, 0, 7, 0,
  
        48, 20, 20, 0, 4, 2, 6, 5, 0, 0, 3, 0, 0, 7, 0, 0, 3, 0, 0, 7, 0, 1, 1, 5, 9, 0,
  
        48, 48, 0, 0, 41, 0, 0, 42, 0, 0, 41, 18, 20, 42, 19, 20, 0, 1, 1, 5, 9, 0, 0, 0, 0, 36, // 15
  
        20, 20, 37, 20, 20, 0, 1, 1, 5, 0, 1, 1, 9, 0, 48, 1, 1, 5, 0, 48, 1, 1, 9, 0, 111, 0,
  
        20, 0, 111, 0, 20, 0, 1, 5, 1, 9, 0, 3, 0, 7, 0, 3, 0, 48, 20, 48, 0, 41, 0, 19, 42, 0,
  
        0, 18, 0, 48, 20, 48, 0, 1, 1, 5, 0, 3, 0, 1, 1, 9, 0, 7, 0, 5, 4, 5, 0, 3, 93, 0, // 18
  
        7, 93, 0, 20, 20, 20, 20, 0, 0, 0, 18, 0, 48, 0, 19, 0, 111, 0, 19, 48, 18, 0, 111, 0, 1, 1,
   
        5, 0, 74, 0, 1, 1, 9, 0, 74, 0, 20, 20, 20, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 101, 14, 102, 0, 18, 20, 19, 0, 101, 14, 102, 0, 4, 5, 9, 5, 0, 0, 3, 2, 0, 7, 8, 0, // 21
   
        3, 2, 0, 5, 5, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
