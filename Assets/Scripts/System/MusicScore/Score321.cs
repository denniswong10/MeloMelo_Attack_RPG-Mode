using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score321 : MonoBehaviour
{
    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5, 0,
  
        0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 4, 0, 0, 0, // 3
  
        8, 0, 0, 8, 0, 0, 4, 0, 0, 1, 0, 0, 5, 0, 0, 0, 1, 5, 0, 0, 1, 6, 0, 0, 1, 0,
  
        0, 1, 0, 2, 2, 0, 8, 0, 5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0,
  
        0, 0, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 2, // 6
 
        0, 5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 2, 0, 4, 0,
 
        0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 8, 8, 0, 4, 0, 0, 2, 2, 0, 5, 0, 0, 0, 2, 0, 0,
 
        4, 0, 0, 0, 8, 0, 0, 8, 0, 0, 4, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, // 9

        0, 0, 2, 2, 0, 5, 0, 0, 4, 0, 0, 8, 8, 0, 5, 0, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0,
 
        5, 0, 2, 0, 8, 0, 5, 0, 0, 0, 4, 0, 0, 2, 0, 0, 4, 0, 0, 8, 2, 0, 1, 5, 0, 0,
  
        0, 5, 0, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0, 4, 0, 0, 8, 8, 0, 5, 0, 0, 4, 0, 0, // 12
  
        1, 1, 0, 5, 0, 0, 4, 0, 0, 2, 0, 4, 0, 5, 0, 0, 1, 1, 0, 5, 0, 0, 0, 3, 0, 0, // Save: 332
  
        2, 0, 0, 2, 0, 0, 5, 0, 0, 8, 0, 0, 8, 0, 0, 5, 0, 5, 0, 8, 0, 0, 4, 0, 0, 2,
  
        0, 0, 4, 0, 2, 8, 0, 5, 0, 0, 0, 1, 0, 0, 5, 0, 0, 2, 2, 0, 8, 0, 5, 0, 0, 4, // 15
  
        0, 0, 1, 0, 5, 0, 1, 0, 5, 0, 2, 2, 0, 4, 0, 8, 8, 0, 1, 0, 5, 0, 0, 0, 0, 0,
  
        0, 0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0, 3, 0, 0, 5, 0, 0, 2, 2, 0, 0, 8, 0, 0, 4,
  
        0, 0, 8, 0, 0, 4, 0, 0, 2, 2, 0, 0, 5, 0, 5, 0, 0, 6, 0, 0, 1, 0, 1, 0, 0, 5, // 18
   
        0, 2, 2, 0, 4, 0, 0, 2, 2, 0, 8, 0, 4, 0, 0, 1, 0, 1, 0, 5, 0, 2, 8, 0, 5, 0,
   
        0, 1, 0, 8, 0, 8, 0, 4, 0, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 3, 0,
  
        0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 2, 0, 2, 0, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, // 21
  
        0, 0, 0, 8, 8, 0, 2, 0, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0,
  
        0, 1, 0, 2, 2, 0, 8, 8, 0, 5, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2,
 
        0, 5, 0, 0, 1, 1, 0, 2, 0, 2, 0, 1, 1, 0, 8, 0, 8, 0, 2, 2, 0, 5, 0, 0, 0, 0, // 24
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 
        0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 0, 2, 0, 8, 0,

        1, 1, 5, 0, 2, 2, 0, 8, 0, 5, 0, 6, 0, 0, 1, 0, 1, 0, 5, 0, 2, 2, 4, 0, 5, 0, // 3
  
        8, 8, 4, 0, 1, 0, 1, 0, 5, 0, 1, 0, 1, 0, 2, 8, 4, 0, 1, 6, 0, 1, 5, 0, 1, 0,

        2, 2, 0, 8, 8, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0, 1, 1,

        0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 8, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 1, // 6
 
        0, 5, 0, 0, 0, 0, 0, 0, 1, 1, 0, 8, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 8, 4, 0,

        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 1, 0, 5, 0, 8, 2, 8, 2, 5, 0, 0, 0, 1, 0, 0,

        5, 0, 0, 0, 6, 0, 0, 1, 1, 0, 2, 0, 1, 1, 0, 8, 0, 1, 1, 0, 5, 5, 0, 0, 0, 4, // 9

        2, 0, 1, 1, 0, 5, 5, 0, 1, 1, 0, 5, 5, 0, 6, 0, 0, 2, 2, 2, 4, 8, 8, 5, 0, 0,

        6, 1, 5, 0, 2, 2, 8, 0, 5, 0, 5, 0, 0, 1, 1, 0, 2, 0, 1, 1, 0, 8, 0, 5, 2, 2,

        2, 5, 8, 8, 8, 5, 2, 2, 4, 0, 1, 1, 0, 2, 8, 0, 1, 1, 2, 8, 5, 0, 0, 1, 2, 1, // 12
  
        5, 0, 1, 8, 1, 5, 0, 1, 1, 0, 2, 8, 0, 1, 1, 0, 5, 6, 0, 5, 0, 0, 0, 1, 1, 5,
  
        0, 2, 8, 2, 0, 5, 0, 5, 0, 8, 2, 8, 0, 5, 0, 3, 1, 3, 5, 3, 1, 3, 0, 1, 5, 1,

        9, 0, 2, 2, 4, 8, 8, 5, 0, 0, 1, 1, 5, 0, 2, 0, 8, 0, 1, 1, 5, 0, 6, 0, 0, 4, // 15
  
        2, 2, 5, 0, 4, 8, 8, 5, 5, 0, 2, 0, 2, 4, 0, 8, 0, 8, 4, 0, 5, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 1, 1, 9, 0, 2, 8, 2, 0, 5, 0, 5, 0, 8, 2, 8, 0, 5, 0, 7, 6,

        7, 9, 7, 6, 7, 0, 1, 6, 1, 9, 0, 8, 8, 4, 2, 2, 5, 6, 0, 0, 1, 1, 1, 1, 0, 5, // 18
   
        2, 2, 2, 5, 0, 3, 2, 2, 2, 0, 3, 8, 8, 8, 0, 5, 0, 1, 1, 6, 0, 1, 5, 1, 9, 0,

        2, 2, 0, 1, 0, 2, 2, 8, 8, 5, 0, 1, 0, 1, 0, 5, 5, 0, 6, 5, 0, 0, 0, 0, 5, 2,

        2, 2, 2, 9, 2, 2, 2, 2, 5, 2, 2, 4, 8, 4, 2, 5, 0, 1, 1, 0, 5, 2, 2, 2, 2, 3, // 21
  
        5, 2, 2, 2, 2, 4, 8, 4, 5, 0, 1, 1, 0, 5, 2, 2, 2, 2, 3, 5, 2, 2, 2, 7, 9, 2,

        2, 2, 2, 2, 2, 1, 8, 1, 5, 6, 0, 0, 0, 4, 2, 2, 0, 1, 0, 1, 0, 5, 0, 4, 8, 8,

        0, 5, 0, 0, 1, 5, 0, 1, 6, 0, 1, 1, 1, 0, 2, 4, 8, 0, 1, 5, 1, 9, 0, 0, 0, 0, // 24
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0
    };

    private int[] score_database3 =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0,

        2, 2, 4, 8, 8, 5, 0, 0, 1, 0, 0, 1, 0, 0, 5, 2, 8, 2, 9, 0, 0, 1, 1, 0, 5, 0, // 3
  
        1, 1, 5, 0, 0, 2, 8, 0, 5, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 5, 0, 2, 2, 4, 8, 8,

        5, 0, 11, 0, 10, 0, 1, 0, 5, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 0,

        0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 16, 0, 0, 0, 0, 0, 2, 0, 8, 0, 16, 0, // 6
 
        0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 2, 8, 5, 0,

        0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 1, 1, 0, 4, 0, 8, 5, 0, 2, 16, 0, 0, 0, 1, 1, 0,

        5, 0, 0, 2, 8, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 1, 1, 0, 5, 5, 0, 0, 0, 10, // 9

        0, 16, 0, 0, 0, 16, 0, 0, 2, 2, 4, 8, 8, 5, 9, 0, 0, 2, 2, 2, 4, 8, 8, 5, 0, 0,

        6, 1, 5, 0, 10, 2, 2, 0, 11, 2, 2, 0, 0, 5, 0, 0, 5, 0, 0, 1, 1, 5, 0, 0, 1, 1,

        7, 0, 8, 8, 5, 2, 2, 5, 0, 2, 0, 8, 0, 16, 1, 0, 16, 1, 0, 0, 5, 0, 0, 16, 7, 16, // 12
  
        7, 0, 1, 2, 1, 8, 0, 1, 5, 1, 9, 0, 4, 2, 4, 0, 8, 4, 8, 5, 0, 0, 0, 1, 1, 5,

        0, 2, 8, 2, 0, 5, 0, 5, 0, 8, 2, 8, 0, 5, 0, 13, 1, 14, 5, 15, 1, 14, 0, 1, 5, 1,

        9, 0, 2, 2, 4, 8, 8, 5, 0, 0, 1, 1, 5, 0, 2, 0, 8, 0, 1, 1, 5, 0, 6, 0, 0, 4, // 15
  
        2, 2, 5, 0, 4, 8, 8, 5, 5, 0, 2, 0, 2, 4, 0, 8, 0, 8, 4, 0, 5, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 1, 1, 9, 0, 2, 8, 2, 0, 5, 0, 5, 0, 8, 2, 8, 0, 5, 0, 13, 6,

        14, 9, 15, 6, 14, 0, 1, 6, 1, 9, 0, 8, 8, 4, 2, 2, 5, 6, 0, 5, 0, 5, 0, 9, 0, 5, // 18
   
        2, 2, 2, 4, 0, 5, 2, 2, 2, 0, 9, 8, 8, 8, 0, 12, 0, 5, 0, 5, 0, 2, 4, 8, 4, 0,

        2, 8, 0, 10, 0, 11, 0, 1, 8, 8, 0, 1, 2, 2, 0, 1, 3, 0, 1, 17, 0, 0, 0, 0, 5, 2,

        2, 2, 2, 18, 2, 2, 2, 2, 5, 2, 2, 4, 8, 4, 2, 18, 0, 1, 1, 0, 5, 2, 2, 2, 2, 13, // 21
  
        15, 2, 2, 2, 2, 13, 14, 15, 5, 0, 1, 1, 0, 18, 2, 2, 2, 2, 18, 5, 2, 2, 2, 15, 5, 15,

        2, 2, 2, 2, 2, 13, 8, 14, 15, 17, 0, 0, 0, 5, 2, 2, 0, 9, 0, 5, 0, 9, 0, 5, 8, 8,

        0, 1, 2, 0, 1, 8, 0, 5, 0, 5, 0, 8, 0, 10, 0, 11, 0, 4, 8, 8, 0, 12, 0, 0, 0, 0, // 24
  
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium", score_database3, "Medium");
    }
}
