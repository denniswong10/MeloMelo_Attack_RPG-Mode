using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score539 : MonoBehaviour
{
    //   101, 14, 102 (Ribbon)    100 (JumpAcrossTheOtherSide)    911, 94, 912 (FixedAirAttack)     21 (TapWithAirAttack)
    //   110, 80, 111 (BoomStopStar)      62, 63 (LightSlideItem)      113, 71, 114 (MultipleHitStar)
    //   131, 135, 132 (MultipleHitStar_Air)     201 (RushingStar)     64, 65 (DoubleCrestHeart)    91, 95, 92 (FixedAttack)
    //   67, 68 (QuickSlideStar)    70 (ItemStrikeWithItem3)      109, 45, 112 (4-Keys)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 5, 0, 93, 0, 1, 2, 5, 0, 93, 0, 80, 0, 0, 1, 8, 5,

        0, 93, 0, 1, 8, 5, 0, 93, 0, 80, 0, 102, 0, 14, 0, 0, 91, 91, 0, 95, 95, 0, 92, 92, 0, 201,

        0, 101, 0, 14, 0, 0, 92, 92, 0, 95, 95, 0, 91, 91, 0, 201, 94, 0, 7, 0, 2, 4, 2, 0, 1, 0, // 3
   
        8, 4, 8, 0, 5, 0, 5, 0, 5, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 21, 0, 0, 0, 101, 0, 14,

        0, 102, 0, 94, 0, 102, 0, 14, 0, 101, 0, 94, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 0, 95, 91, 95,

        0, 0, 70, 0, 1, 1, 0, 5, 9, 0, 80, 100, 0, 0, 0, 70, 0, 1, 5, 0, 1, 9, 0, 80, 100, 0, // 6
   
        0, 93, 70, 0, 1, 1, 5, 0, 80, 0, 1, 1, 9, 0, 80, 0, 0, 109, 45, 112, 0, 112, 45, 109, 0, 14,

        0, 0, 71, 94, 0, 95, 92, 95, 0, 21, 0, 0, 0, 0, 0, 2, 4, 0, 0, 93, 0, 0, 93, 0, 0, 8,

        4, 0, 0, 93, 0, 0, 93, 0, 0, 1, 1, 0, 5, 0, 1, 1, 0, 9, 0, 80, 80, 0, 21, 0, 0, 0, // 9
  
        0, 91, 0, 0, 3, 0, 0, 0, 92, 0, 3, 0, 14, 0, 0, 4, 2, 2, 0, 4, 8, 8, 0, 1, 1, 5,

        0, 1, 1, 9, 0, 80, 0, 101, 14, 102, 0, 0, 0, 0, 0, 109, 45, 112, 0, 114, 94, 91, 0, 80, 0, 111,

        0, 80, 0, 1, 1, 0, 9, 0, 0, 0, 2, 0, 0, 8, 8, 0, 0, 3, 0, 0, 0, 100, 1, 1, 0, 100, // 12
   
        5, 5, 0, 62, 0, 0, 63, 0, 0, 112, 45, 109, 0, 113, 94, 92, 0, 80, 0, 80, 0, 1, 1, 9, 0, 0,

        93, 0, 0, 93, 0, 0, 1, 1, 5, 0, 80, 0, 1, 1, 9, 0, 80, 0, 0, 0, 3, 0, 0, 3, 0, 0,

        1, 1, 0, 5, 5, 0, 1, 1, 0, 5, 9, 0, 101, 0, 14, 0, 102, 94, 0, 0, 2, 0, 2, 0, 8, 0, // 15
   
        8, 0, 5, 0, 1, 1, 0, 9, 0, 0, 3, 2, 2, 0, 3, 8, 8, 0, 1, 5, 0, 1, 9, 0, 80, 0,

        91, 0, 95, 0, 92, 0, 94, 0, 91, 0, 95, 0, 7, 0, 1, 1, 0, 5, 0, 80, 0, 1, 1, 0, 9, 0,

        80, 0, 14, 0, 0, 0, 1, 0, 1, 0, 5, 0, 1, 0, 1, 0, 9, 0, 0, 2, 8, 0, 5, 0, 3, 0, // 18
   
        3, 0, 8, 2, 0, 5, 0, 5, 0, 3, 0, 2, 0, 3, 0, 8, 0, 1, 1, 5, 0, 1, 1, 9, 0, 93,

        0, 93, 0, 4, 2, 2, 0, 4, 8, 8, 0, 0, 101, 0, 14, 0, 102, 0, 0, 92, 92, 0, 95, 0, 0, 91,

        91, 0, 67, 0, 0, 0, 93, 0, 0, 93, 0, 0, 0, 3, 0, 0, 3, 0, 0, 101, 0, 0, 0, 14, 0, 0, // 21
   
        0, 102, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        93, 0, 1, 1, 5, 9, 0, 80, 0, 0, 102, 0, 0, 62, 911, 101, 0, 0, 63, 912, 102, 0, 0, 62, 131, 101,
  
        0, 0, 63, 132, 14, 0, 0, 111, 21, 110, 0, 113, 0, 94, 111, 0, 114, 0, 21, 110, 0, 110, 80, 111, 0, 71,
   
        0, 114, 0, 94, 110, 0, 113, 0, 21, 111, 0, 71, 0, 1, 1, 5, 9, 0, 3, 0, 6, 2, 2, 2, 5, 0, // 3
   
        6, 2, 2, 1, 5, 0, 201, 64, 0, 92, 0, 111, 80, 110, 0, 101, 0, 0, 100, 102, 0, 0, 0, 4, 1, 1,
  
        5, 5, 0, 4, 1, 1, 5, 9, 0, 201, 65, 0, 91, 0, 110, 80, 111, 0, 102, 0, 0, 100, 0, 91, 91, 91,
  
        0, 0, 67, 0, 912, 0, 114, 0, 95, 92, 92, 95, 0, 3, 0, 68, 0, 911, 0, 113, 0, 95, 91, 91, 95, 0, // 6
   
        0, 70, 0, 4, 1, 5, 5, 0, 80, 0, 6, 1, 5, 5, 0, 80, 0, 101, 0, 0, 135, 102, 0, 0, 135, 14,
  
        0, 0, 201, 7, 0, 5, 5, 5, 0, 80, 0, 0, 91, 0, 0, 109, 91, 0, 0, 110, 0, 0, 92, 0, 0, 112,
  
        92, 0, 0, 111, 0, 0, 95, 91, 95, 92, 80, 0, 62, 0, 64, 63, 0, 65, 0, 114, 92, 95, 92, 0, 14, 0, // 9
  
        0, 110, 110, 7, 0, 14, 0, 0, 111, 111, 7, 0, 21, 0, 0, 1, 1, 5, 0, 1, 1, 9, 0, 80, 91, 91,
   
        80, 92, 92, 14, 0, 0, 110, 21, 111, 94, 0, 0, 0, 0, 0, 101, 94, 14, 0, 102, 0, 14, 0, 101, 0, 131,
   
        0, 80, 80, 111, 80, 80, 21, 0, 0, 0, 93, 0, 0, 3, 0, 0, 93, 0, 93, 0, 0, 101, 0, 100, 0, 92, // 12
   
        92, 0, 102, 0, 100, 0, 91, 91, 0, 101, 94, 14, 0, 102, 0, 131, 0, 80, 80, 111, 80, 80, 0, 21, 0, 0,
   
        6, 1, 5, 0, 80, 0, 9, 1, 5, 0, 80, 0, 91, 94, 92, 21, 110, 0, 0, 0, 3, 0, 0, 3, 0, 0,
   
        93, 70, 0, 0, 102, 94, 14, 0, 101, 0, 14, 0, 102, 0, 132, 0, 80, 80, 0, 0, 2, 2, 2, 5, 8, 8, // 15
   
        8, 9, 0, 80, 0, 101, 14, 102, 0, 0, 1, 1, 5, 1, 1, 9, 0, 80, 0, 95, 91, 91, 95, 0, 2, 4,
   
        2, 4, 8, 4, 8, 0, 80, 912, 80, 911, 95, 0, 7, 0, 1, 1, 5, 5, 0, 80, 0, 1, 1, 5, 9, 0,
   
        80, 80, 0, 21, 0, 0, 2, 2, 2, 0, 93, 0, 70, 0, 93, 0, 8, 8, 8, 5, 8, 8, 8, 0, 3, 0, // 18
   
        3, 0, 2, 2, 2, 0, 1, 1, 0, 5, 0, 93, 0, 70, 0, 93, 0, 8, 8, 8, 5, 8, 8, 8, 0, 3,
   
        0, 3, 0, 2, 4, 2, 0, 8, 4, 8, 0, 0, 101, 0, 0, 91, 110, 14, 0, 0, 95, 80, 102, 0, 0, 92,
   
        111, 0, 68, 0, 0, 110, 91, 80, 0, 111, 92, 80, 0, 91, 95, 91, 0, 0, 92, 95, 92, 0, 0, 3, 2, 0, // 21
   
        3, 8, 0, 3, 80, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
