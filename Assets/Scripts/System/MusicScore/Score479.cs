using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MeloMelo_LevelBuilder;

public class Score479 : MonoBehaviour
{
    //     18, 20, 19 (FixedHeartPack)      11, 12 (RisingHeart)
    //     27 (LandDivide)     30, 31 (Sweep)
    //     41, 42 (HourStand)     43 [105, 107, 106] (DiaRect)      44, 45 (QuickStarBound)      51, 52 (HalfArrow)
    //     53 [103, 104] (Circle)    54 [101, 102] (Cross)          56 (DiamondSurrondStar)  
    //     60 (Circle2)        71, 70 (ItemStrikeWithItem3)     72, 73 (QuickPickUpItem)
    //     78, 79 (WideCollectorStar)       80 (BoomStopStar)     91, 94, 92 (FixedAirAttack)

    public int difficulty;

    private int[] score_database =
    {
        0,

        0, 2, 2, 5, 0, 0, 8, 8, 5, 0, 0, 56, 0, 0, 13, 0, 0, 7, 0, 0, 1, 2, 0, 1, 8, 0,

        0, 5, 4, 5, 0, 0, 2, 93, 0, 0, 8, 93, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 53, 0, 13, 0, 0, 0, 8, 8, 8, 8, 0, 54, 0, 93, // 3
  
        0, 0, 7, 0, 0, 1, 1, 5, 0, 53, 103, 53, 0, 92, 92, 0, 7, 0, 0, 0, 0, 1, 2, 2, 5, 0,

        1, 8, 8, 5, 0, 80, 20, 80, 0, 0, 0, 0, 93, 0, 93, 0, 0, 1, 1, 5, 0, 80, 0, 1, 1, 99,

        0, 80, 0, 5, 5, 99, 0, 0, 7, 0, 0, 31, 0, 0, 18, 31, 0, 0, 60, 0, 0, 20, 20, 0, 1, 5, // 6
  
        99, 0, 0, 0, 0, 1, 2, 5, 0, 80, 0, 1, 8, 99, 0, 80, 0, 5, 99, 5, 0, 0, 7, 0, 0, 30,

        0, 0, 19, 30, 0, 0, 60, 0, 0, 20, 0, 80, 0, 0, 0, 0, 7, 0, 0, 0, 2, 2, 0, 0, 7, 0,

        0, 0, 0, 8, 8, 0, 0, 0, 7, 0, 1, 2, 2, 0, 1, 8, 8, 0, 1, 1, 5, 0, 99, 0, 0, 0, // 9
  
        2, 5, 0, 0, 13, 0, 0, 0, 93, 0, 0, 0, 93, 93, 0, 0, 13, 0, 0, 93, 0, 0, 13, 0, 13, 0,

        0, 0, 5, 0, 0, 0, 1, 0, 1, 0, 5, 0, 80, 0, 80, 0, 1, 5, 0, 1, 99, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 18, 18, 0, 52, 0, 19, 19, 0, 80, 0, 80, 0, 1, 5, 99, // 12
   
        0, 0, 52, 0, 19, 92, 0, 51, 0, 18, 91, 0, 80, 0, 80, 0, 1, 99, 5, 0, 30, 0, 30, 0, 0, 31,

        0, 31, 0, 0, 19, 20, 18, 91, 94, 92, 0, 0, 0, 1, 0, 51, 60, 0, 0, 0, 1, 0, 52, 60, 0, 0,

        0, 1, 1, 5, 99, 0, 0, 0, 2, 2, 2, 0, 8, 8, 8, 0, 1, 5, 0, 99, 0, 0, 0, 7, 0, 0, // 15
  
        0, 1, 5, 0, 1, 99, 0, 2, 4, 0, 8, 4, 0, 1, 5, 5, 99, 0, 0, 0, 0, 1, 0, 5, 0, 8,

        8, 8, 0, 1, 1, 0, 5, 0, 1, 1, 0, 99, 5, 5, 0, 80, 80, 0, 0, 0, 30, 0, 0, 31, 0, 0,

        30, 0, 0, 31, 0, 0, 0, 45, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, // 18
   
        0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 8, 0, 8, 0, 0, 7, 0, 0, 5, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    private int[] score_database2 =
    {
        0,

        0, 2, 0, 8, 8, 0, 0, 2, 0, 0, 8, 56, 0, 0, 93, 0, 0, 93, 0, 0, 1, 1, 0, 2, 0, 8,
  
        0, 0, 6, 56, 0, 0, 93, 93, 0, 0, 93, 93, 0, 0, 80, 0, 0, 0, 0, 3, 0, 0, 0, 0, 7, 0,
  
        0, 0, 0, 3, 0, 0, 0, 103, 0, 0, 0, 0, 93, 0, 93, 0, 0, 0, 102, 0, 0, 0, 93, 93, 0, 0, // 3
  
        0, 80, 0, 0, 93, 0, 0, 103, 0, 54, 0, 104, 0, 0, 93, 0, 56, 0, 0, 0, 0, 1, 1, 0, 5, 0,
  
        1, 1, 0, 4, 0, 93, 0, 80, 0, 0, 0, 0, 93, 93, 93, 0, 0, 30, 0, 0, 0, 18, 20, 12, 30, 0,
  
        0, 0, 18, 11, 18, 80, 0, 0, 0, 0, 0, 41, 0, 0, 0, 20, 20, 20, 42, 0, 0, 0, 20, 20, 20, 0, // 6
  
        80, 0, 0, 0, 0, 31, 0, 0, 0, 19, 20, 11, 31, 0, 0, 0, 19, 12, 19, 80, 0, 0, 0, 0, 0, 42,
  
        0, 0, 0, 20, 20, 41, 0, 0, 0, 20, 20, 80, 0, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 3, 0,
  
        0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 93, 2, 2, 2, 93, 8, 8, 8, 5, 0, 0, 0, // 9
  
        7, 7, 0, 0, 93, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 105, 0, 0, 107, 0, 0, 106, 0, 0, 0,
   
        93, 0, 5, 0, 0, 0, 1, 1, 0, 5, 0, 5, 0, 1, 1, 0, 9, 0, 5, 0, 80, 0, 0, 0, 0, 0,
   
        0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 79, 0, 0, 72, 0, 52, 0, 20, 19, 20, 19, 0, 80, 80, 80, // 12
   
        0, 0, 45, 0, 78, 0, 0, 73, 0, 51, 0, 20, 18, 20, 18, 0, 80, 80, 80, 0, 53, 103, 91, 0, 54, 102,
   
        92, 0, 80, 0, 56, 0, 0, 80, 20, 80, 20, 0, 0, 1, 1, 27, 18, 0, 0, 19, 1, 1, 27, 19, 0, 0,
   
        18, 1, 1, 0, 80, 0, 0, 0, 8, 8, 71, 8, 8, 70, 8, 8, 8, 51, 0, 60, 0, 0, 0, 80, 0, 0, // 15
  
        0, 93, 1, 5, 93, 1, 5, 0, 20, 0, 93, 1, 5, 93, 1, 5, 80, 0, 0, 0, 0, 8, 8, 71, 8, 8,
  
        70, 8, 8, 8, 71, 8, 70, 8, 71, 0, 52, 0, 60, 0, 0, 0, 80, 0, 0, 0, 1, 1, 0, 5, 0, 1,
   
        1, 0, 94, 31, 92, 42, 0, 30, 91, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, // 18
   
        0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 8, 0, 8, 0, 1, 1, 0, 0, 5, 0, 0, 0,
    
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    void Start()
    {
        difficulty = PlayerPrefs.GetInt("DifficultyLevel_valve", 1);
        ScoreController controller = new ScoreController(difficulty, score_database, "Medium", score_database2, "Medium");
    }
}
